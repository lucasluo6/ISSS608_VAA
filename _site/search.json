[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "ISSS608 - Visual Analytics",
    "section": "",
    "text": "Welcome to ISSS608\n\n\nA Visual Analytics Journey through Data, Design, and Discovery\n\n\n\n\n✦ Hands-on Exercises\n\nExercise 1\nExercise 2\nExercise 3\nExercise 4\n\n\n\n✦ In-class Exercises\n\nIn-class 1\n\n\n\n✦ Take-home Exercises\n\nTake-home 1\nTake-home 1\n\n\n\n© 2025 Lucas Luo · Singapore Management University"
  },
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About",
    "section": "",
    "text": "About this site\n\n1 + 1\n\n[1] 2"
  },
  {
    "objectID": "Hands-on_Exercise/Hands-on_Ex01/Hands-on_Ex01.html",
    "href": "Hands-on_Exercise/Hands-on_Ex01/Hands-on_Ex01.html",
    "title": "Hands-on Ex01",
    "section": "",
    "text": "In this chapter, you will learn the basic principles and essential components of ggplot2. At the same time, you will gain hands-on experience on using these components to plot statistical graphics based on the principle of Layered Grammar of Graphics. By then end of this chapter you will be able to apply the essential graphical elements provided by ggplot2 to create elegant and yet functional statistical graphics.\n\n\n\n\n\n\npacman::p_load(tidyverse)\n\n\n\n\n\nexam_data &lt;- read_csv(\"data/Exam_data.csv\")\n\nRows: 322 Columns: 7\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (4): ID, CLASS, GENDER, RACE\ndbl (3): ENGLISH, MATHS, SCIENCE\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\n\n\n\n\nFirst, let us compare how R Graphics, the core graphical functions of Base R and ggplot plot a simple histogram.\n\nR Graphicsggplot2\n\n\n\n# Base R 直方图\nhist(exam_data$MATHS)\n\n\n\n\n\n\n\nlibrary(ggplot2)\n\nggplot(data = exam_data, aes(x = MATHS)) +\n  geom_histogram(\n    bins = 10,\n    boundary = 100,\n    color = \"black\",\n    fill = \"grey\"\n  ) +\n  ggtitle(\"Distribution of Maths scores\")\n\n\n\n\n\n\n\n\n\n\n\n\nggplot(data=exam_data)\n\n\n\n\n\n\n\n\nggplot(data=exam_data, \n       aes(x= MATHS))\n\n\n\n\n\n\n\nGeometric objects are the actual marks we put on a plot. Examples include:\n\ngeom_point for drawing individual points (e.g., a scatter plot)\ngeom_line for drawing lines (e.g., for a line charts)\ngeom_smooth for drawing smoothed lines (e.g., for simple trends or approximations)\ngeom_bar for drawing bars (e.g., for bar charts)\ngeom_histogram for drawing binned values (e.g. a histogram)\ngeom_polygon for drawing arbitrary shapes\ngeom_map for drawing polygons in the shape of a map! (You can access the data to use for these maps by using the map_data() function).\n\n\n\n\nggplot(data=exam_data, aes(x=RACE)) + geom_bar()\n\n\n\n\n\n\n\n\nggplot(data=exam_data, \n       aes(x = MATHS)) +\n  geom_dotplot(dotsize = 0.5)\n\nBin width defaults to 1/30 of the range of the data. Pick better value with\n`binwidth`.\n\n\n\n\n\n\nggplot(data=exam_data, \n       aes(x = MATHS)) +\n  geom_dotplot(binwidth=2.5,         \n               dotsize = 0.5) +      \n  scale_y_continuous(NULL,           \n                     breaks = NULL)  \n\n\n\n\n\n\n\n\nggplot(data=exam_data, \n       aes(x = MATHS)) +\n  geom_histogram()       \n\n`stat_bin()` using `bins = 30`. Pick better value with `binwidth`.\n\n\n\n\n\n1.7.4 Modifying a geometric object by changing geom()\n\nggplot(data=exam_data, \n       aes(x= MATHS)) +\n  geom_histogram(bins=20,            \n                 color=\"black\",      \n                 fill=\"light blue\")  \n\n\n\n\n\n\n\n\nggplot(data=exam_data, \n       aes(x= MATHS, \n           fill = GENDER)) +\n  geom_histogram(bins=20, \n                 color=\"grey30\")\n\n\n\n\n\n\n\n\nggplot(data=exam_data, \n       aes(x = MATHS)) +\n  geom_density()         \n\n\n\nggplot(data=exam_data, \n       aes(x = MATHS, \n           colour = GENDER)) +\n  geom_density()\n\n\n\n\n\n\n\n\nggplot(data=exam_data, \n       aes(y = MATHS,       \n           x= GENDER)) +    \n  geom_boxplot()            \n\n\n\nggplot(data=exam_data, \n       aes(y = MATHS, \n           x= GENDER)) +\n  geom_boxplot(notch=TRUE)\n\n\n\n\n\n\n\n\nggplot(data=exam_data, \n       aes(y = MATHS, \n           x= GENDER)) +\n  geom_violin()\n\n\n\n\n\n\n\n\nggplot(data=exam_data, \n       aes(x= MATHS, \n           y=ENGLISH)) +\n  geom_point()            \n\n\n\n\n\n\n\n\nggplot(data=exam_data, \n       aes(y = MATHS, \n           x= GENDER)) +\n  geom_boxplot() +                    \n  geom_point(position=\"jitter\", \n             size = 0.5)        \n\n\n\n\n\n\n\n\n\nfrequency of values of a variable (bar graph)\n\na mean\na confidence limit\n\nThere are two ways to use these functions:\n\nadd a stat_() function and override the default geom, or\nadd a geom_() function and override the default stat.\n\n\n\n\n\nggplot(data=exam_data, \n       aes(y = MATHS, x= GENDER)) +\n  geom_boxplot()\n\n\n\n\n\n\n\n\nggplot(data=exam_data, \n       aes(y = MATHS, x= GENDER)) +\n  geom_boxplot() +\n  stat_summary(geom = \"point\",       \n               fun = \"mean\",         \n               colour =\"red\",        \n               size=4)               \n\n\n\n\n\n\n\n\nggplot(data=exam_data, \n       aes(y = MATHS, x= GENDER)) +\n  geom_boxplot() +\n  geom_point(stat=\"summary\",        \n             fun=\"mean\",           \n             colour=\"red\",          \n             size=4)          \n\n\n\n\n\n\n\n\nggplot(data=exam_data, \n       aes(x= MATHS, y=ENGLISH)) +\n  geom_point() +\n  geom_smooth(size=0.5)\n\nWarning: Using `size` aesthetic for lines was deprecated in ggplot2 3.4.0.\nℹ Please use `linewidth` instead.\n\n\n`geom_smooth()` using method = 'loess' and formula = 'y ~ x'\n\n\n\n\nggplot(data=exam_data, \n       aes(x= MATHS, \n           y=ENGLISH)) +\n  geom_point() +\n  geom_smooth(method=lm, \n              linewidth=0.5)\n\n`geom_smooth()` using formula = 'y ~ x'\n\n\n\n\n\n\n\n\n\n\n\n\nggplot(data=exam_data, \n       aes(x= MATHS)) +\n  geom_histogram(bins=20) +\n    facet_wrap(~ CLASS)\n\n\n\n\n\n\n\n\nggplot(data=exam_data, \n       aes(x= MATHS)) +\n  geom_histogram(bins=20) +\n    facet_grid(~ CLASS)\n\n\n\n\n\n\n\n\n\n\n\nggplot(data=exam_data, \n       aes(x=RACE)) +\n  geom_bar()\n\n\n\nggplot(data=exam_data, \n       aes(x=RACE)) +\n  geom_bar() +\n  coord_flip()\n\n\n\n\n\n\n\n\nggplot(data=exam_data, \n       aes(x= MATHS, y=ENGLISH)) +\n  geom_point() +\n  geom_smooth(method=lm, size=0.5)\n\n`geom_smooth()` using formula = 'y ~ x'\n\n\n\n\n\n\n\n\n\nThemes control elements of the graph not related to the data. For example:\n\nbackground colour\nsize of fonts\ngridlines\ncolour of labels\n\n\n\n\nggplot(data=exam_data, \n       aes(x=RACE)) +\n  geom_bar() +\n  coord_flip() +\n  theme_gray()"
  },
  {
    "objectID": "Hands-on_Exercise/Hands-on_Ex01/Hands-on_Ex01.html#learning-outcome",
    "href": "Hands-on_Exercise/Hands-on_Ex01/Hands-on_Ex01.html#learning-outcome",
    "title": "Hands-on Ex01",
    "section": "",
    "text": "In this chapter, you will learn the basic principles and essential components of ggplot2. At the same time, you will gain hands-on experience on using these components to plot statistical graphics based on the principle of Layered Grammar of Graphics. By then end of this chapter you will be able to apply the essential graphical elements provided by ggplot2 to create elegant and yet functional statistical graphics."
  },
  {
    "objectID": "Hands-on_Exercise/Hands-on_Ex01/Hands-on_Ex01.html#getting-started",
    "href": "Hands-on_Exercise/Hands-on_Ex01/Hands-on_Ex01.html#getting-started",
    "title": "Hands-on Ex01",
    "section": "",
    "text": "pacman::p_load(tidyverse)\n\n\n\n\n\nexam_data &lt;- read_csv(\"data/Exam_data.csv\")\n\nRows: 322 Columns: 7\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (4): ID, CLASS, GENDER, RACE\ndbl (3): ENGLISH, MATHS, SCIENCE\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\n\n\n\n\nFirst, let us compare how R Graphics, the core graphical functions of Base R and ggplot plot a simple histogram.\n\nR Graphicsggplot2\n\n\n\n# Base R 直方图\nhist(exam_data$MATHS)\n\n\n\n\n\n\n\nlibrary(ggplot2)\n\nggplot(data = exam_data, aes(x = MATHS)) +\n  geom_histogram(\n    bins = 10,\n    boundary = 100,\n    color = \"black\",\n    fill = \"grey\"\n  ) +\n  ggtitle(\"Distribution of Maths scores\")"
  },
  {
    "objectID": "Hands-on_Exercise/Hands-on_Ex01/Hands-on_Ex01.html#essential-grammatical-elements-in-ggplot2-data",
    "href": "Hands-on_Exercise/Hands-on_Ex01/Hands-on_Ex01.html#essential-grammatical-elements-in-ggplot2-data",
    "title": "Hands-on Ex01",
    "section": "",
    "text": "ggplot(data=exam_data)"
  },
  {
    "objectID": "Hands-on_Exercise/Hands-on_Ex01/Hands-on_Ex01.html#essential-grammatical-elements-in-ggplot2",
    "href": "Hands-on_Exercise/Hands-on_Ex01/Hands-on_Ex01.html#essential-grammatical-elements-in-ggplot2",
    "title": "Hands-on Ex01",
    "section": "",
    "text": "ggplot(data=exam_data, \n       aes(x= MATHS))"
  },
  {
    "objectID": "Hands-on_Exercise/Hands-on_Ex01/Hands-on_Ex01.html#essential-grammatical-elements-in-ggplot2-geom",
    "href": "Hands-on_Exercise/Hands-on_Ex01/Hands-on_Ex01.html#essential-grammatical-elements-in-ggplot2-geom",
    "title": "Hands-on Ex01",
    "section": "",
    "text": "Geometric objects are the actual marks we put on a plot. Examples include:\n\ngeom_point for drawing individual points (e.g., a scatter plot)\ngeom_line for drawing lines (e.g., for a line charts)\ngeom_smooth for drawing smoothed lines (e.g., for simple trends or approximations)\ngeom_bar for drawing bars (e.g., for bar charts)\ngeom_histogram for drawing binned values (e.g. a histogram)\ngeom_polygon for drawing arbitrary shapes\ngeom_map for drawing polygons in the shape of a map! (You can access the data to use for these maps by using the map_data() function).\n\n\n\n\nggplot(data=exam_data, aes(x=RACE)) + geom_bar()\n\n\n\n\n\n\n\n\nggplot(data=exam_data, \n       aes(x = MATHS)) +\n  geom_dotplot(dotsize = 0.5)\n\nBin width defaults to 1/30 of the range of the data. Pick better value with\n`binwidth`.\n\n\n\n\n\n\nggplot(data=exam_data, \n       aes(x = MATHS)) +\n  geom_dotplot(binwidth=2.5,         \n               dotsize = 0.5) +      \n  scale_y_continuous(NULL,           \n                     breaks = NULL)  \n\n\n\n\n\n\n\n\nggplot(data=exam_data, \n       aes(x = MATHS)) +\n  geom_histogram()       \n\n`stat_bin()` using `bins = 30`. Pick better value with `binwidth`.\n\n\n\n\n\n1.7.4 Modifying a geometric object by changing geom()\n\nggplot(data=exam_data, \n       aes(x= MATHS)) +\n  geom_histogram(bins=20,            \n                 color=\"black\",      \n                 fill=\"light blue\")  \n\n\n\n\n\n\n\n\nggplot(data=exam_data, \n       aes(x= MATHS, \n           fill = GENDER)) +\n  geom_histogram(bins=20, \n                 color=\"grey30\")\n\n\n\n\n\n\n\n\nggplot(data=exam_data, \n       aes(x = MATHS)) +\n  geom_density()         \n\n\n\nggplot(data=exam_data, \n       aes(x = MATHS, \n           colour = GENDER)) +\n  geom_density()\n\n\n\n\n\n\n\n\nggplot(data=exam_data, \n       aes(y = MATHS,       \n           x= GENDER)) +    \n  geom_boxplot()            \n\n\n\nggplot(data=exam_data, \n       aes(y = MATHS, \n           x= GENDER)) +\n  geom_boxplot(notch=TRUE)\n\n\n\n\n\n\n\n\nggplot(data=exam_data, \n       aes(y = MATHS, \n           x= GENDER)) +\n  geom_violin()\n\n\n\n\n\n\n\n\nggplot(data=exam_data, \n       aes(x= MATHS, \n           y=ENGLISH)) +\n  geom_point()            \n\n\n\n\n\n\n\n\nggplot(data=exam_data, \n       aes(y = MATHS, \n           x= GENDER)) +\n  geom_boxplot() +                    \n  geom_point(position=\"jitter\", \n             size = 0.5)"
  },
  {
    "objectID": "Hands-on_Exercise/Hands-on_Ex01/Hands-on_Ex01.html#essential-grammatical-elements-in-ggplot2-stat",
    "href": "Hands-on_Exercise/Hands-on_Ex01/Hands-on_Ex01.html#essential-grammatical-elements-in-ggplot2-stat",
    "title": "Hands-on Ex01",
    "section": "",
    "text": "frequency of values of a variable (bar graph)\n\na mean\na confidence limit\n\nThere are two ways to use these functions:\n\nadd a stat_() function and override the default geom, or\nadd a geom_() function and override the default stat.\n\n\n\n\n\nggplot(data=exam_data, \n       aes(y = MATHS, x= GENDER)) +\n  geom_boxplot()\n\n\n\n\n\n\n\n\nggplot(data=exam_data, \n       aes(y = MATHS, x= GENDER)) +\n  geom_boxplot() +\n  stat_summary(geom = \"point\",       \n               fun = \"mean\",         \n               colour =\"red\",        \n               size=4)               \n\n\n\n\n\n\n\n\nggplot(data=exam_data, \n       aes(y = MATHS, x= GENDER)) +\n  geom_boxplot() +\n  geom_point(stat=\"summary\",        \n             fun=\"mean\",           \n             colour=\"red\",          \n             size=4)          \n\n\n\n\n\n\n\n\nggplot(data=exam_data, \n       aes(x= MATHS, y=ENGLISH)) +\n  geom_point() +\n  geom_smooth(size=0.5)\n\nWarning: Using `size` aesthetic for lines was deprecated in ggplot2 3.4.0.\nℹ Please use `linewidth` instead.\n\n\n`geom_smooth()` using method = 'loess' and formula = 'y ~ x'\n\n\n\n\nggplot(data=exam_data, \n       aes(x= MATHS, \n           y=ENGLISH)) +\n  geom_point() +\n  geom_smooth(method=lm, \n              linewidth=0.5)\n\n`geom_smooth()` using formula = 'y ~ x'"
  },
  {
    "objectID": "Hands-on_Exercise/Hands-on_Ex01/Hands-on_Ex01.html#essential-grammatical-elements-in-ggplot2-facets",
    "href": "Hands-on_Exercise/Hands-on_Ex01/Hands-on_Ex01.html#essential-grammatical-elements-in-ggplot2-facets",
    "title": "Hands-on Ex01",
    "section": "",
    "text": "ggplot(data=exam_data, \n       aes(x= MATHS)) +\n  geom_histogram(bins=20) +\n    facet_wrap(~ CLASS)\n\n\n\n\n\n\n\n\nggplot(data=exam_data, \n       aes(x= MATHS)) +\n  geom_histogram(bins=20) +\n    facet_grid(~ CLASS)"
  },
  {
    "objectID": "Hands-on_Exercise/Hands-on_Ex01/Hands-on_Ex01.html#essential-grammatical-elements-in-ggplot2-coordinates",
    "href": "Hands-on_Exercise/Hands-on_Ex01/Hands-on_Ex01.html#essential-grammatical-elements-in-ggplot2-coordinates",
    "title": "Hands-on Ex01",
    "section": "",
    "text": "ggplot(data=exam_data, \n       aes(x=RACE)) +\n  geom_bar()\n\n\n\nggplot(data=exam_data, \n       aes(x=RACE)) +\n  geom_bar() +\n  coord_flip()\n\n\n\n\n\n\n\n\nggplot(data=exam_data, \n       aes(x= MATHS, y=ENGLISH)) +\n  geom_point() +\n  geom_smooth(method=lm, size=0.5)\n\n`geom_smooth()` using formula = 'y ~ x'"
  },
  {
    "objectID": "Hands-on_Exercise/Hands-on_Ex01/Hands-on_Ex01.html#essential-grammatical-elements-in-ggplot2-themes",
    "href": "Hands-on_Exercise/Hands-on_Ex01/Hands-on_Ex01.html#essential-grammatical-elements-in-ggplot2-themes",
    "title": "Hands-on Ex01",
    "section": "",
    "text": "Themes control elements of the graph not related to the data. For example:\n\nbackground colour\nsize of fonts\ngridlines\ncolour of labels\n\n\n\n\nggplot(data=exam_data, \n       aes(x=RACE)) +\n  geom_bar() +\n  coord_flip() +\n  theme_gray()"
  },
  {
    "objectID": "Hands-on_Exercise/Hands-on_Ex02/Hands-on_Ex02.html",
    "href": "Hands-on_Exercise/Hands-on_Ex02/Hands-on_Ex02.html",
    "title": "Hands-on Ex02",
    "section": "",
    "text": "In this chapter, you will be introduced to several ggplot2 extensions for creating more elegant and effective statistical graphics. By the end of this exercise, you will be able to:\n\ncontrol the placement of annotation on a graph by using functions provided in ggrepel package,\ncreate professional publication quality figure by using functions provided in ggthemes and hrbrthemes packages,\nplot composite figure by combining ggplot2 graphs by using patchwork package.\n\n\n\n\n\n\n\npacman::p_load(ggrepel, patchwork, \n               ggthemes, hrbrthemes,\n               tidyverse) \n\n\n\n\n\nexam_data &lt;- read_csv(\"data/Exam_data.csv\")\n\nRows: 322 Columns: 7\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (4): ID, CLASS, GENDER, RACE\ndbl (3): ENGLISH, MATHS, SCIENCE\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\n\nThe categorical attributes are: ID, CLASS, GENDER and RACE. The continuous attributes are: MATHS, ENGLISH and SCIENCE.\n\n\n\n\nOne of the challenge in plotting statistical graph is annotation, especially with large number of data points.\n\nThe plotThe code\n\n\n\n\nWarning: Using `size` aesthetic for lines was deprecated in ggplot2 3.4.0.\nℹ Please use `linewidth` instead.\n\n\n`geom_smooth()` using formula = 'y ~ x'\n\n\nWarning: ggrepel: 307 unlabeled data points (too many overlaps). Consider\nincreasing max.overlaps\n\n\n\n\n\n\n\n\nggplot(data = exam_data, aes(x = MATHS, y = ENGLISH)) + geom_point() + geom_smooth(method = \"lm\", size = 0.5) + geom_label_repel(aes(label = ID), size = 2.5) + coord_cartesian(xlim = c(0, 100), ylim = c(0, 100)) + ggtitle(\"English scores versus Maths scores for Primary 3\")\n\n\n\n\n\n\n\nThe plotThe code\n\n\n\n\n`geom_smooth()` using formula = 'y ~ x'\n\n\nWarning: ggrepel: 317 unlabeled data points (too many overlaps). Consider\nincreasing max.overlaps\n\n\n\n\n\n\n\n\nggplot(data=exam_data, aes(x= MATHS, y=ENGLISH)) + geom_point() + geom_smooth(method=lm, size=0.5) +\\\ngeom_label_repel(aes(label = ID), fontface = \"bold\") + coord_cartesian(xlim=c(0,100), ylim=c(0,100)) + ggtitle(\"English scores versus Maths scores for Primary 3\")\n\n\n\n\n\n\n\n\n\nThe plotThe code\n\n\n\n\n\n\n\n\n\n\nggplot(data=exam_data, aes(x = MATHS)) + geom_histogram(bins=20, boundary = 100, color=\"grey25\", fill=\"grey90\") + theme_gray() + ggtitle(\"Distribution of Maths scores\")\n\n\n\n\n\n\n\nThe plotThe code\n\n\n\n\n\n\n\n\n\n\nggplot(data=exam_data, aes(x = MATHS)) + geom_histogram(bins=20, boundary = 100, color=\"grey25\", fill=\"grey90\") + ggtitle(\"Distribution of Maths scores\") + theme_economist()\n\n\n\n\n\n\n\n\nThe plotThe code\n\n\n\n\n\n\n\n\n\n\nggplot(data=exam_data, aes(x = MATHS)) + geom_histogram(bins=20, boundary = 100, color=\"grey25\", fill=\"grey90\") + ggtitle(\"Distribution of Maths scores\") + theme_ipsum()\n\n\n\n\n\nThe plotThe code\n\n\n\n\n\n\n\n\n\n\nggplot(data=exam_data, aes(x = MATHS)) + geom_histogram(bins=20, boundary = 100, color=\"grey25\", fill=\"grey90\") + ggtitle(\"Distribution of Maths scores\") + theme_ipsum(axis_title_size = 18, base_size = 15, grid = \"Y\")\n\n\n\n\n\n\n\n\n\nThe plotThe code\n\n\n\n\n\n\n\n\n\n\np1 &lt;- ggplot(data=exam_data, aes(x = MATHS)) + geom_histogram(bins=20, boundary = 100, color=\"grey25\", fill=\"grey90\") + coord_cartesian(xlim=c(0,100)) + ggtitle(\"Distribution of Maths scores\")\n\n\n\n\nNext\n\nThe plotThe code\n\n\n\n\n\n\n\n\n\n\np2 &lt;- ggplot(data=exam_data, aes(x = ENGLISH)) + geom_histogram(bins=20, boundary = 100, color=\"grey25\", fill=\"grey90\") + coord_cartesian(xlim=c(0,100)) + ggtitle(\"Distribution of English scores\")\n\n\n\n\n\nThe plotThe code\n\n\n\n\n`geom_smooth()` using formula = 'y ~ x'\n\n\n\n\n\n\n\n\np3 &lt;- ggplot(data=exam_data, aes(x= MATHS, y=ENGLISH)) + geom_point() + geom_smooth(method=lm, size=0.5) +\ncoord_cartesian(xlim=c(0,100), ylim=c(0,100)) + ggtitle(\"English scores versus Maths scores for Primary 3\")\n\n\n\n\n\n\nThere are several ggplot2 extension’s functions support the needs to prepare composite figure by combining several graphs such as grid.arrange() of gridExtra package and plot_grid() of cowplot package. In this section, I am going to shared with you an ggplot2 extension called patchwork which is specially designed for combining separate ggplot2 graphs into a single figure.\nPatchwork package has a very simple syntax where we can create layouts super easily. Here’s the general syntax that combines:\n\nTwo-Column Layout using the Plus Sign +.\nParenthesis () to create a subplot group.\nTwo-Row Layout using the Division Sign /\n\n\n\n\n\nThe plotThe code\n\n\n\n\n\n\n\n\n\n\np1 + p2\n\n\n\n\n\n\n\n\nThe plotThe code\n\n\n\n\n`geom_smooth()` using formula = 'y ~ x'\n\n\n\n\n\n\n\n\n(p1 / p2) | p3\n\n\n\n\n\n\n\n\nThe plotThe code\n\n\n\n\n`geom_smooth()` using formula = 'y ~ x'\n\n\n\n\n\n\n\n\n((p1 / p2) \\| p3) + plot_annotation(tag_levels = 'I')\n\n\n\n\n\n\n\n\nThe plotThe code\n\n\n\n\n`geom_smooth()` using formula = 'y ~ x'\n\n\n\n\n\n\n\n\np3 + inset_element(p2, left = 0.02, bottom = 0.7, right = 0.5, top = 1)\n\n\n\n\n\n\n\n\nThe plotThe code\n\n\n\n\n`geom_smooth()` using formula = 'y ~ x'\n\n\n\n\n\n\n\n\npatchwork \\&lt;- (p1 / p2) \\| p3 patchwork & theme_economist()"
  },
  {
    "objectID": "Hands-on_Exercise/Hands-on_Ex02/Hands-on_Ex02.html#overview",
    "href": "Hands-on_Exercise/Hands-on_Ex02/Hands-on_Ex02.html#overview",
    "title": "Hands-on Ex02",
    "section": "",
    "text": "In this chapter, you will be introduced to several ggplot2 extensions for creating more elegant and effective statistical graphics. By the end of this exercise, you will be able to:\n\ncontrol the placement of annotation on a graph by using functions provided in ggrepel package,\ncreate professional publication quality figure by using functions provided in ggthemes and hrbrthemes packages,\nplot composite figure by combining ggplot2 graphs by using patchwork package."
  },
  {
    "objectID": "Hands-on_Exercise/Hands-on_Ex02/Hands-on_Ex02.html#getting-started",
    "href": "Hands-on_Exercise/Hands-on_Ex02/Hands-on_Ex02.html#getting-started",
    "title": "Hands-on Ex02",
    "section": "",
    "text": "pacman::p_load(ggrepel, patchwork, \n               ggthemes, hrbrthemes,\n               tidyverse) \n\n\n\n\n\nexam_data &lt;- read_csv(\"data/Exam_data.csv\")\n\nRows: 322 Columns: 7\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (4): ID, CLASS, GENDER, RACE\ndbl (3): ENGLISH, MATHS, SCIENCE\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\n\nThe categorical attributes are: ID, CLASS, GENDER and RACE. The continuous attributes are: MATHS, ENGLISH and SCIENCE."
  },
  {
    "objectID": "Hands-on_Exercise/Hands-on_Ex02/Hands-on_Ex02.html#beyond-ggplot2-annotation-ggrepel",
    "href": "Hands-on_Exercise/Hands-on_Ex02/Hands-on_Ex02.html#beyond-ggplot2-annotation-ggrepel",
    "title": "Hands-on Ex02",
    "section": "",
    "text": "One of the challenge in plotting statistical graph is annotation, especially with large number of data points.\n\nThe plotThe code\n\n\n\n\nWarning: Using `size` aesthetic for lines was deprecated in ggplot2 3.4.0.\nℹ Please use `linewidth` instead.\n\n\n`geom_smooth()` using formula = 'y ~ x'\n\n\nWarning: ggrepel: 307 unlabeled data points (too many overlaps). Consider\nincreasing max.overlaps\n\n\n\n\n\n\n\n\nggplot(data = exam_data, aes(x = MATHS, y = ENGLISH)) + geom_point() + geom_smooth(method = \"lm\", size = 0.5) + geom_label_repel(aes(label = ID), size = 2.5) + coord_cartesian(xlim = c(0, 100), ylim = c(0, 100)) + ggtitle(\"English scores versus Maths scores for Primary 3\")\n\n\n\n\n\n\n\nThe plotThe code\n\n\n\n\n`geom_smooth()` using formula = 'y ~ x'\n\n\nWarning: ggrepel: 317 unlabeled data points (too many overlaps). Consider\nincreasing max.overlaps\n\n\n\n\n\n\n\n\nggplot(data=exam_data, aes(x= MATHS, y=ENGLISH)) + geom_point() + geom_smooth(method=lm, size=0.5) +\\\ngeom_label_repel(aes(label = ID), fontface = \"bold\") + coord_cartesian(xlim=c(0,100), ylim=c(0,100)) + ggtitle(\"English scores versus Maths scores for Primary 3\")"
  },
  {
    "objectID": "Hands-on_Exercise/Hands-on_Ex02/Hands-on_Ex02.html#beyond-ggplot2-themes",
    "href": "Hands-on_Exercise/Hands-on_Ex02/Hands-on_Ex02.html#beyond-ggplot2-themes",
    "title": "Hands-on Ex02",
    "section": "",
    "text": "The plotThe code\n\n\n\n\n\n\n\n\n\n\nggplot(data=exam_data, aes(x = MATHS)) + geom_histogram(bins=20, boundary = 100, color=\"grey25\", fill=\"grey90\") + theme_gray() + ggtitle(\"Distribution of Maths scores\")\n\n\n\n\n\n\n\nThe plotThe code\n\n\n\n\n\n\n\n\n\n\nggplot(data=exam_data, aes(x = MATHS)) + geom_histogram(bins=20, boundary = 100, color=\"grey25\", fill=\"grey90\") + ggtitle(\"Distribution of Maths scores\") + theme_economist()\n\n\n\n\n\n\n\n\nThe plotThe code\n\n\n\n\n\n\n\n\n\n\nggplot(data=exam_data, aes(x = MATHS)) + geom_histogram(bins=20, boundary = 100, color=\"grey25\", fill=\"grey90\") + ggtitle(\"Distribution of Maths scores\") + theme_ipsum()\n\n\n\n\n\nThe plotThe code\n\n\n\n\n\n\n\n\n\n\nggplot(data=exam_data, aes(x = MATHS)) + geom_histogram(bins=20, boundary = 100, color=\"grey25\", fill=\"grey90\") + ggtitle(\"Distribution of Maths scores\") + theme_ipsum(axis_title_size = 18, base_size = 15, grid = \"Y\")"
  },
  {
    "objectID": "Hands-on_Exercise/Hands-on_Ex02/Hands-on_Ex02.html#beyond-single-graph",
    "href": "Hands-on_Exercise/Hands-on_Ex02/Hands-on_Ex02.html#beyond-single-graph",
    "title": "Hands-on Ex02",
    "section": "",
    "text": "The plotThe code\n\n\n\n\n\n\n\n\n\n\np1 &lt;- ggplot(data=exam_data, aes(x = MATHS)) + geom_histogram(bins=20, boundary = 100, color=\"grey25\", fill=\"grey90\") + coord_cartesian(xlim=c(0,100)) + ggtitle(\"Distribution of Maths scores\")\n\n\n\n\nNext\n\nThe plotThe code\n\n\n\n\n\n\n\n\n\n\np2 &lt;- ggplot(data=exam_data, aes(x = ENGLISH)) + geom_histogram(bins=20, boundary = 100, color=\"grey25\", fill=\"grey90\") + coord_cartesian(xlim=c(0,100)) + ggtitle(\"Distribution of English scores\")\n\n\n\n\n\nThe plotThe code\n\n\n\n\n`geom_smooth()` using formula = 'y ~ x'\n\n\n\n\n\n\n\n\np3 &lt;- ggplot(data=exam_data, aes(x= MATHS, y=ENGLISH)) + geom_point() + geom_smooth(method=lm, size=0.5) +\ncoord_cartesian(xlim=c(0,100), ylim=c(0,100)) + ggtitle(\"English scores versus Maths scores for Primary 3\")\n\n\n\n\n\n\nThere are several ggplot2 extension’s functions support the needs to prepare composite figure by combining several graphs such as grid.arrange() of gridExtra package and plot_grid() of cowplot package. In this section, I am going to shared with you an ggplot2 extension called patchwork which is specially designed for combining separate ggplot2 graphs into a single figure.\nPatchwork package has a very simple syntax where we can create layouts super easily. Here’s the general syntax that combines:\n\nTwo-Column Layout using the Plus Sign +.\nParenthesis () to create a subplot group.\nTwo-Row Layout using the Division Sign /\n\n\n\n\n\nThe plotThe code\n\n\n\n\n\n\n\n\n\n\np1 + p2\n\n\n\n\n\n\n\n\nThe plotThe code\n\n\n\n\n`geom_smooth()` using formula = 'y ~ x'\n\n\n\n\n\n\n\n\n(p1 / p2) | p3\n\n\n\n\n\n\n\n\nThe plotThe code\n\n\n\n\n`geom_smooth()` using formula = 'y ~ x'\n\n\n\n\n\n\n\n\n((p1 / p2) \\| p3) + plot_annotation(tag_levels = 'I')\n\n\n\n\n\n\n\n\nThe plotThe code\n\n\n\n\n`geom_smooth()` using formula = 'y ~ x'\n\n\n\n\n\n\n\n\np3 + inset_element(p2, left = 0.02, bottom = 0.7, right = 0.5, top = 1)\n\n\n\n\n\n\n\n\nThe plotThe code\n\n\n\n\n`geom_smooth()` using formula = 'y ~ x'\n\n\n\n\n\n\n\n\npatchwork \\&lt;- (p1 / p2) \\| p3 patchwork & theme_economist()"
  },
  {
    "objectID": "Hands-on_Exercise/Hands-on_Ex03/Hands-on_Ex03.html",
    "href": "Hands-on_Exercise/Hands-on_Ex03/Hands-on_Ex03.html",
    "title": "Hands-on_Ex03",
    "section": "",
    "text": "The following content is created by following the tutorial on this chapter.\n\n\n\n\nggiraph for making ‘ggplot’ graphics interactive.\nplotly, R library for plotting interactive statistical graphs.\nDT provides an R interface to the JavaScript library DataTables that create interactive table on html page.\ntidyverse, a family of modern R packages specially designed to support data science, analysis and communication task including creating static statistical graphs.\npatchwork for combining multiple ggplot2 graphs into one figure.\n\n\n\nCode\npacman::p_load(ggiraph, plotly, \n               patchwork, DT, tidyverse) \n\n\n\n\n\n\n\nCode\nexam_data &lt;- read_csv(\"data/Exam_data.csv\")\n\n\n\n\n\n\n\n\nUsing TooltipDisplaying multiple informationCustomising Tooltip style\n\n\nBy hovering the mouse pointer on an data point of interest, the student’s ID will be displayed.\n\n\nCode\n# Step 1: an interactive version of ggplot2 geom (i.e. geom_dotplot_interactive()) will be used to create the basic graph.\n\np &lt;- ggplot(data = exam_data,\n            aes(x = MATHS)) +\n  geom_dotplot_interactive(\n    aes(tooltip = ID),  # Here's the tooltip\n    stackgroups = TRUE,\n    binwidth = 1,\n    method = \"histodot\") +\n  scale_y_continuous(NULL,\n                     breaks = NULL)\n\n# Step 2: Girafe() will be used to generate an svg object to be displayed on an html page.\ngirafe(\n  ggobj = p,\n  width_svg = 6,\n  height_svg = 6*0.618\n)\n\n\n\n\n\n\n\n\nBy hovering the mouse pointer on an data point of interest, the student’s ID will be displayed.\n\n\nCode\n# Step 1: Creating a new column in the dataset to incorporate the tool tip information\nexam_data$tooltip &lt;- c(paste0(\n  \"Name = \", exam_data$ID,\n  \"\\n Class = \", exam_data$CLASS\n))\n\n# Step 2: Create an interactive version of ggplot2 geom.\np &lt;- ggplot(data = exam_data,\n            aes(x = MATHS)) +\n  geom_dotplot_interactive(\n    aes(tooltip = exam_data$tooltip),  # Here's the tooltip\n    stackgroups = TRUE,\n    binwidth = 1,\n    method = \"histodot\") +\n  scale_y_continuous(NULL,\n                     breaks = NULL)\n\n# Step 3: Generate an svg object to be displayed on an html page.\ngirafe(\n  ggobj = p,\n  width_svg = 6,\n  height_svg = 6*0.618\n)\n\n\n\n\n\n\n\n\nThis changes the tooltip from a black background + white text to a white background + black, bold text.\n\n\nCode\n# Step 1: Define tooltip CSS style\ntooltip_css &lt;- \"background-color:white;\nfont-style:bold; color:black;\"\n\n# Step 2: Create an interactive version of ggplot2 geom.\np &lt;- ggplot(data = exam_data,\n            aes(x = MATHS)) +\n  geom_dotplot_interactive(\n    aes(tooltip = ID),  # Here's the tooltip\n    stackgroups = TRUE,\n    binwidth = 1,\n    method = \"histodot\") +\n  scale_y_continuous(NULL,\n                     breaks = NULL)\n\n# Step 3: Generate an svg object to be displayed on an html page.\ngirafe(\n  ggobj = p,\n  width_svg = 6,\n  height_svg = 6*0.618,\n  options = list(  \n    opts_tooltip(\n      css = tooltip_css  # The tooltip css is incorporated here\n    )\n  )\n)\n\n\n\n\n\n\n\n\n\nCode chunk below shows an advanced way to customise tooltip. In this example, a function is used to compute 90% confident interval of the mean. The derived statistics are then displayed in the tooltip.\n\n\nCode\ntooltip &lt;- function(y, ymax, accuracy = .01) {\n  mean &lt;- scales::number(y, accuracy = accuracy)\n  sem &lt;- scales::number(ymax - y, accuracy = accuracy)\n  paste(\"Mean maths scores:\", mean, \"+/-\", sem)\n}\n\ngg_point &lt;- ggplot(data=exam_data, \n                   aes(x = RACE),\n) +\n  stat_summary(aes(y = MATHS, \n                   tooltip = after_stat(  \n                     tooltip(y, ymax))),  \n    fun.data = \"mean_se\", \n    geom = GeomInteractiveCol,  \n    fill = \"light blue\"\n  ) +\n  stat_summary(aes(y = MATHS),\n    fun.data = mean_se,\n    geom = \"errorbar\", width = 0.2, size = 0.2\n  )\n\ngirafe(ggobj = gg_point,\n       width_svg = 8,\n       height_svg = 8*0.618)\n\n\n\n\n\n\n\n\n\n\nHover effectStyling hover effect\n\n\nElements associated with a data_id (i.e CLASS) will be highlighted upon mouse over.\n\n\nCode\np &lt;- ggplot(data=exam_data, \n       aes(x = MATHS)) +\n  geom_dotplot_interactive(           \n    aes(data_id = CLASS),             \n    stackgroups = TRUE,               \n    binwidth = 1,                        \n    method = \"histodot\") +               \n  scale_y_continuous(NULL,               \n                     breaks = NULL)\ngirafe(                                  \n  ggobj = p,                             \n  width_svg = 6,                         \n  height_svg = 6*0.618                      \n)                                        \n\n\n\n\n\n\n\n\nCss codes are used to change the highlighting effect.\n\n\nCode\np &lt;- ggplot(data=exam_data, \n       aes(x = MATHS)) +\n  geom_dotplot_interactive(              \n    aes(data_id = CLASS),              \n    stackgroups = TRUE,                  \n    binwidth = 1,                        \n    method = \"histodot\") +               \n  scale_y_continuous(NULL,               \n                     breaks = NULL)\ngirafe(                                  \n  ggobj = p,                             \n  width_svg = 6,                         \n  height_svg = 6*0.618,\n  options = list(                        \n    opts_hover(css = \"fill: #202020;\"),  \n    opts_hover_inv(css = \"opacity:0.2;\") \n  )                                        \n)                                                                         \n\n\n\n\n\n\n\n\n\n\n\n\nThe code chunk below combines what we have learnt so far - the tooltip + hover effect.\n\n\nCode\np &lt;- ggplot(data = exam_data, \n       aes(x = MATHS)) +\n  geom_dotplot_interactive(              \n    aes(tooltip = CLASS, \n        data_id = CLASS),              \n    stackgroups = TRUE,                  \n    binwidth = 1,                        \n    method = \"histodot\") +               \n  scale_y_continuous(NULL,               \n                     breaks = NULL)\ngirafe(                                  \n  ggobj = p,                             \n  width_svg = 6,                         \n  height_svg = 6*0.618,\n  options = list(                        \n    opts_hover(css = \"fill: #202020;\"),  \n    opts_hover_inv(css = \"opacity:0.2;\") \n  )                                        \n)            \n\n\n\n\n\n\n\n\n\nonclick argument of ggiraph provides hotlink interactivity on the web. Interactivity: Web document link with a data object will be displayed on the web browser upon mouse click.\n\n\nCode\nexam_data$onclick &lt;- sprintf(\"window.open(\\\"%s%s\\\")\",\n\"https://www.moe.gov.sg/schoolfinder?journey=Primary%20school\",\nas.character(exam_data$ID))\n\np &lt;- ggplot(data = exam_data, \n       aes(x = MATHS)) +\n  geom_dotplot_interactive(              \n    aes(onclick = onclick),              \n    stackgroups = TRUE,                  \n    binwidth = 1,                        \n    method = \"histodot\") +               \n  scale_y_continuous(NULL,               \n                     breaks = NULL)\ngirafe(                                  \n  ggobj = p,                             \n  width_svg = 6,                         \n  height_svg = 6*0.618)                                   \n\n\n\n\n\n\n\n\n\nCoordinated multiple views methods has been implemented in the data visualisation below. Notice that when a data point of one of the dotplot is selected, the corresponding data point ID on the second data visualisation will be highlighted too. The steps will be annotated in the code chunk.\n\n\nCode\n# Step 1: Plot the first figure\np1 &lt;- ggplot(data = exam_data, \n       aes(x = MATHS)) +\n  geom_dotplot_interactive(              \n    aes(data_id = ID,\n        tooltip = ID),              \n    stackgroups = TRUE,                  \n    binwidth = 1,                        \n    method = \"histodot\") +  \n  coord_cartesian(xlim = c(0,100)) + \n  scale_y_continuous(NULL,               \n                     breaks = NULL)\n\n# Step 2: Plot the second figure\np2 &lt;- ggplot(data = exam_data, \n       aes(x = ENGLISH)) +\n  geom_dotplot_interactive(              \n    aes(data_id = ID,\n        tooltip = ID),        \n    stackgroups = TRUE,                  \n    binwidth = 1,                        \n    method = \"histodot\") + \n  coord_cartesian(xlim = c(0,100)) + \n  scale_y_continuous(NULL,               \n                     breaks = NULL)\n\n# Step 3: Display the svg object. The code argument runs the patchwork function to create the coordinated multiple views.\ngirafe(code = print(p1 + p2),  # print is needed for the plot to display\n       width_svg = 6,\n       height_svg = 3,\n       options = list(\n         opts_hover(css = \"fill: #202020;\"),\n         opts_hover_inv(css = \"opacity:0.2;\")\n         )\n       ) \n\n\n\n\n\n\n\n\n\n\n\n\n\nDefaultWith Color\n\n\n\n\nCode\nplot_ly(data = exam_data, \n             x = ~MATHS, \n             y = ~ENGLISH)\n\n\n\n\n\n\n\n\n\n\nCode\nplot_ly(data = exam_data, \n        x = ~MATHS, \n        y = ~ENGLISH,\n        color = ~RACE)\n\n\n\n\n\n\n\n\n\n\n\n\nThe code chunk below plots an interactive scatter plot by using ggplotly().\n\n\nCode\np &lt;- ggplot(data=exam_data, \n            aes(x = MATHS,\n                y = ENGLISH)) +\n  geom_point(size=1) +\n  coord_cartesian(xlim=c(0,100),\n                  ylim=c(0,100))\nggplotly(p)\n\n\n\n\n\n\n###3.5.3 Coordinated Multiple Views with plotly The creation of a coordinated linked plot by using plotly involves three steps:\n\n\nCode\n# Step 1: Using highlight_key function from plotly package to indicate the shared data\n# This creates an object of class crosstalk::SharedData\nd &lt;- highlight_key(exam_data)\n\n# Step 2: Create both the scatterplots\np1 &lt;- ggplot(data = d, \n            aes(x = MATHS,\n                y = ENGLISH)) +\n  geom_point(size=1) +\n  coord_cartesian(xlim=c(0,100),\n                  ylim=c(0,100))\n\np2 &lt;- ggplot(data = d, \n            aes(x = MATHS,\n                y = SCIENCE)) +\n  geom_point(size=1) +\n  coord_cartesian(xlim=c(0,100),\n                  ylim=c(0,100))\n\n# Step 3: Using subplot to place them side-by-side\nsubplot(ggplotly(p1),\n        ggplotly(p2))\n\n\n\n\n\n\n\n\n\n\nCrosstalk is an add-on to the htmlwidgets package. It extends htmlwidgets with a set of classes, functions, and conventions for implementing cross-widget interactions (currently, linked brushing and filtering).\n\n\nCode\n# Step 1: Indicate shared data\nd &lt;- highlight_key(exam_data) \n\n# Step 2: Define the ggplot graphic\np &lt;- ggplot(d, \n            aes(ENGLISH, \n                MATHS)) + \n  geom_point(size=1) +\n  coord_cartesian(xlim=c(0,100),\n                  ylim=c(0,100))\n\n# Step 3: Using the plotly highlight function\ngg &lt;- highlight(ggplotly(p),        \n                \"plotly_selected\")  \n\n# Step 4: Putting HTML elements side by side.\ncrosstalk::bscols(gg,               \n                  DT::datatable(d), \n                  widths = 5)"
  },
  {
    "objectID": "Hands-on_Exercise/Hands-on_Ex03/Hands-on_Ex03.html#learning-outcome",
    "href": "Hands-on_Exercise/Hands-on_Ex03/Hands-on_Ex03.html#learning-outcome",
    "title": "Hands-on_Ex03",
    "section": "",
    "text": "The following content is created by following the tutorial on this chapter."
  },
  {
    "objectID": "Hands-on_Exercise/Hands-on_Ex03/Hands-on_Ex03.html#getting-started",
    "href": "Hands-on_Exercise/Hands-on_Ex03/Hands-on_Ex03.html#getting-started",
    "title": "Hands-on_Ex03",
    "section": "",
    "text": "ggiraph for making ‘ggplot’ graphics interactive.\nplotly, R library for plotting interactive statistical graphs.\nDT provides an R interface to the JavaScript library DataTables that create interactive table on html page.\ntidyverse, a family of modern R packages specially designed to support data science, analysis and communication task including creating static statistical graphs.\npatchwork for combining multiple ggplot2 graphs into one figure.\n\n\n\nCode\npacman::p_load(ggiraph, plotly, \n               patchwork, DT, tidyverse)"
  },
  {
    "objectID": "Hands-on_Exercise/Hands-on_Ex03/Hands-on_Ex03.html#importing-data",
    "href": "Hands-on_Exercise/Hands-on_Ex03/Hands-on_Ex03.html#importing-data",
    "title": "Hands-on_Ex03",
    "section": "",
    "text": "Code\nexam_data &lt;- read_csv(\"data/Exam_data.csv\")"
  },
  {
    "objectID": "Hands-on_Exercise/Hands-on_Ex03/Hands-on_Ex03.html#interactive-data-visualisation---ggiraph-methods",
    "href": "Hands-on_Exercise/Hands-on_Ex03/Hands-on_Ex03.html#interactive-data-visualisation---ggiraph-methods",
    "title": "Hands-on_Ex03",
    "section": "",
    "text": "Using TooltipDisplaying multiple informationCustomising Tooltip style\n\n\nBy hovering the mouse pointer on an data point of interest, the student’s ID will be displayed.\n\n\nCode\n# Step 1: an interactive version of ggplot2 geom (i.e. geom_dotplot_interactive()) will be used to create the basic graph.\n\np &lt;- ggplot(data = exam_data,\n            aes(x = MATHS)) +\n  geom_dotplot_interactive(\n    aes(tooltip = ID),  # Here's the tooltip\n    stackgroups = TRUE,\n    binwidth = 1,\n    method = \"histodot\") +\n  scale_y_continuous(NULL,\n                     breaks = NULL)\n\n# Step 2: Girafe() will be used to generate an svg object to be displayed on an html page.\ngirafe(\n  ggobj = p,\n  width_svg = 6,\n  height_svg = 6*0.618\n)\n\n\n\n\n\n\n\n\nBy hovering the mouse pointer on an data point of interest, the student’s ID will be displayed.\n\n\nCode\n# Step 1: Creating a new column in the dataset to incorporate the tool tip information\nexam_data$tooltip &lt;- c(paste0(\n  \"Name = \", exam_data$ID,\n  \"\\n Class = \", exam_data$CLASS\n))\n\n# Step 2: Create an interactive version of ggplot2 geom.\np &lt;- ggplot(data = exam_data,\n            aes(x = MATHS)) +\n  geom_dotplot_interactive(\n    aes(tooltip = exam_data$tooltip),  # Here's the tooltip\n    stackgroups = TRUE,\n    binwidth = 1,\n    method = \"histodot\") +\n  scale_y_continuous(NULL,\n                     breaks = NULL)\n\n# Step 3: Generate an svg object to be displayed on an html page.\ngirafe(\n  ggobj = p,\n  width_svg = 6,\n  height_svg = 6*0.618\n)\n\n\n\n\n\n\n\n\nThis changes the tooltip from a black background + white text to a white background + black, bold text.\n\n\nCode\n# Step 1: Define tooltip CSS style\ntooltip_css &lt;- \"background-color:white;\nfont-style:bold; color:black;\"\n\n# Step 2: Create an interactive version of ggplot2 geom.\np &lt;- ggplot(data = exam_data,\n            aes(x = MATHS)) +\n  geom_dotplot_interactive(\n    aes(tooltip = ID),  # Here's the tooltip\n    stackgroups = TRUE,\n    binwidth = 1,\n    method = \"histodot\") +\n  scale_y_continuous(NULL,\n                     breaks = NULL)\n\n# Step 3: Generate an svg object to be displayed on an html page.\ngirafe(\n  ggobj = p,\n  width_svg = 6,\n  height_svg = 6*0.618,\n  options = list(  \n    opts_tooltip(\n      css = tooltip_css  # The tooltip css is incorporated here\n    )\n  )\n)\n\n\n\n\n\n\n\n\n\nCode chunk below shows an advanced way to customise tooltip. In this example, a function is used to compute 90% confident interval of the mean. The derived statistics are then displayed in the tooltip.\n\n\nCode\ntooltip &lt;- function(y, ymax, accuracy = .01) {\n  mean &lt;- scales::number(y, accuracy = accuracy)\n  sem &lt;- scales::number(ymax - y, accuracy = accuracy)\n  paste(\"Mean maths scores:\", mean, \"+/-\", sem)\n}\n\ngg_point &lt;- ggplot(data=exam_data, \n                   aes(x = RACE),\n) +\n  stat_summary(aes(y = MATHS, \n                   tooltip = after_stat(  \n                     tooltip(y, ymax))),  \n    fun.data = \"mean_se\", \n    geom = GeomInteractiveCol,  \n    fill = \"light blue\"\n  ) +\n  stat_summary(aes(y = MATHS),\n    fun.data = mean_se,\n    geom = \"errorbar\", width = 0.2, size = 0.2\n  )\n\ngirafe(ggobj = gg_point,\n       width_svg = 8,\n       height_svg = 8*0.618)\n\n\n\n\n\n\n\n\n\n\nHover effectStyling hover effect\n\n\nElements associated with a data_id (i.e CLASS) will be highlighted upon mouse over.\n\n\nCode\np &lt;- ggplot(data=exam_data, \n       aes(x = MATHS)) +\n  geom_dotplot_interactive(           \n    aes(data_id = CLASS),             \n    stackgroups = TRUE,               \n    binwidth = 1,                        \n    method = \"histodot\") +               \n  scale_y_continuous(NULL,               \n                     breaks = NULL)\ngirafe(                                  \n  ggobj = p,                             \n  width_svg = 6,                         \n  height_svg = 6*0.618                      \n)                                        \n\n\n\n\n\n\n\n\nCss codes are used to change the highlighting effect.\n\n\nCode\np &lt;- ggplot(data=exam_data, \n       aes(x = MATHS)) +\n  geom_dotplot_interactive(              \n    aes(data_id = CLASS),              \n    stackgroups = TRUE,                  \n    binwidth = 1,                        \n    method = \"histodot\") +               \n  scale_y_continuous(NULL,               \n                     breaks = NULL)\ngirafe(                                  \n  ggobj = p,                             \n  width_svg = 6,                         \n  height_svg = 6*0.618,\n  options = list(                        \n    opts_hover(css = \"fill: #202020;\"),  \n    opts_hover_inv(css = \"opacity:0.2;\") \n  )                                        \n)                                                                         \n\n\n\n\n\n\n\n\n\n\n\n\nThe code chunk below combines what we have learnt so far - the tooltip + hover effect.\n\n\nCode\np &lt;- ggplot(data = exam_data, \n       aes(x = MATHS)) +\n  geom_dotplot_interactive(              \n    aes(tooltip = CLASS, \n        data_id = CLASS),              \n    stackgroups = TRUE,                  \n    binwidth = 1,                        \n    method = \"histodot\") +               \n  scale_y_continuous(NULL,               \n                     breaks = NULL)\ngirafe(                                  \n  ggobj = p,                             \n  width_svg = 6,                         \n  height_svg = 6*0.618,\n  options = list(                        \n    opts_hover(css = \"fill: #202020;\"),  \n    opts_hover_inv(css = \"opacity:0.2;\") \n  )                                        \n)            \n\n\n\n\n\n\n\n\n\nonclick argument of ggiraph provides hotlink interactivity on the web. Interactivity: Web document link with a data object will be displayed on the web browser upon mouse click.\n\n\nCode\nexam_data$onclick &lt;- sprintf(\"window.open(\\\"%s%s\\\")\",\n\"https://www.moe.gov.sg/schoolfinder?journey=Primary%20school\",\nas.character(exam_data$ID))\n\np &lt;- ggplot(data = exam_data, \n       aes(x = MATHS)) +\n  geom_dotplot_interactive(              \n    aes(onclick = onclick),              \n    stackgroups = TRUE,                  \n    binwidth = 1,                        \n    method = \"histodot\") +               \n  scale_y_continuous(NULL,               \n                     breaks = NULL)\ngirafe(                                  \n  ggobj = p,                             \n  width_svg = 6,                         \n  height_svg = 6*0.618)                                   \n\n\n\n\n\n\n\n\n\nCoordinated multiple views methods has been implemented in the data visualisation below. Notice that when a data point of one of the dotplot is selected, the corresponding data point ID on the second data visualisation will be highlighted too. The steps will be annotated in the code chunk.\n\n\nCode\n# Step 1: Plot the first figure\np1 &lt;- ggplot(data = exam_data, \n       aes(x = MATHS)) +\n  geom_dotplot_interactive(              \n    aes(data_id = ID,\n        tooltip = ID),              \n    stackgroups = TRUE,                  \n    binwidth = 1,                        \n    method = \"histodot\") +  \n  coord_cartesian(xlim = c(0,100)) + \n  scale_y_continuous(NULL,               \n                     breaks = NULL)\n\n# Step 2: Plot the second figure\np2 &lt;- ggplot(data = exam_data, \n       aes(x = ENGLISH)) +\n  geom_dotplot_interactive(              \n    aes(data_id = ID,\n        tooltip = ID),        \n    stackgroups = TRUE,                  \n    binwidth = 1,                        \n    method = \"histodot\") + \n  coord_cartesian(xlim = c(0,100)) + \n  scale_y_continuous(NULL,               \n                     breaks = NULL)\n\n# Step 3: Display the svg object. The code argument runs the patchwork function to create the coordinated multiple views.\ngirafe(code = print(p1 + p2),  # print is needed for the plot to display\n       width_svg = 6,\n       height_svg = 3,\n       options = list(\n         opts_hover(css = \"fill: #202020;\"),\n         opts_hover_inv(css = \"opacity:0.2;\")\n         )\n       )"
  },
  {
    "objectID": "Hands-on_Exercise/Hands-on_Ex03/Hands-on_Ex03.html#interactive-data-visualisation---plotly-methods",
    "href": "Hands-on_Exercise/Hands-on_Ex03/Hands-on_Ex03.html#interactive-data-visualisation---plotly-methods",
    "title": "Hands-on_Ex03",
    "section": "",
    "text": "DefaultWith Color\n\n\n\n\nCode\nplot_ly(data = exam_data, \n             x = ~MATHS, \n             y = ~ENGLISH)\n\n\n\n\n\n\n\n\n\n\nCode\nplot_ly(data = exam_data, \n        x = ~MATHS, \n        y = ~ENGLISH,\n        color = ~RACE)\n\n\n\n\n\n\n\n\n\n\n\n\nThe code chunk below plots an interactive scatter plot by using ggplotly().\n\n\nCode\np &lt;- ggplot(data=exam_data, \n            aes(x = MATHS,\n                y = ENGLISH)) +\n  geom_point(size=1) +\n  coord_cartesian(xlim=c(0,100),\n                  ylim=c(0,100))\nggplotly(p)\n\n\n\n\n\n\n###3.5.3 Coordinated Multiple Views with plotly The creation of a coordinated linked plot by using plotly involves three steps:\n\n\nCode\n# Step 1: Using highlight_key function from plotly package to indicate the shared data\n# This creates an object of class crosstalk::SharedData\nd &lt;- highlight_key(exam_data)\n\n# Step 2: Create both the scatterplots\np1 &lt;- ggplot(data = d, \n            aes(x = MATHS,\n                y = ENGLISH)) +\n  geom_point(size=1) +\n  coord_cartesian(xlim=c(0,100),\n                  ylim=c(0,100))\n\np2 &lt;- ggplot(data = d, \n            aes(x = MATHS,\n                y = SCIENCE)) +\n  geom_point(size=1) +\n  coord_cartesian(xlim=c(0,100),\n                  ylim=c(0,100))\n\n# Step 3: Using subplot to place them side-by-side\nsubplot(ggplotly(p1),\n        ggplotly(p2))"
  },
  {
    "objectID": "Hands-on_Exercise/Hands-on_Ex03/Hands-on_Ex03.html#interactive-data-visualisation---crosstalk-methods",
    "href": "Hands-on_Exercise/Hands-on_Ex03/Hands-on_Ex03.html#interactive-data-visualisation---crosstalk-methods",
    "title": "Hands-on_Ex03",
    "section": "",
    "text": "Crosstalk is an add-on to the htmlwidgets package. It extends htmlwidgets with a set of classes, functions, and conventions for implementing cross-widget interactions (currently, linked brushing and filtering).\n\n\nCode\n# Step 1: Indicate shared data\nd &lt;- highlight_key(exam_data) \n\n# Step 2: Define the ggplot graphic\np &lt;- ggplot(d, \n            aes(ENGLISH, \n                MATHS)) + \n  geom_point(size=1) +\n  coord_cartesian(xlim=c(0,100),\n                  ylim=c(0,100))\n\n# Step 3: Using the plotly highlight function\ngg &lt;- highlight(ggplotly(p),        \n                \"plotly_selected\")  \n\n# Step 4: Putting HTML elements side by side.\ncrosstalk::bscols(gg,               \n                  DT::datatable(d), \n                  widths = 5)"
  },
  {
    "objectID": "Hands-on_Exercise/Hands-on_Ex03/Hands-on_Ex03.html#practical-takeaways",
    "href": "Hands-on_Exercise/Hands-on_Ex03/Hands-on_Ex03.html#practical-takeaways",
    "title": "Hands-on_Ex03",
    "section": "4.1 Practical Takeaways",
    "text": "4.1 Practical Takeaways\nGained a clear understanding of how animation is constructed frame-by-frame using subsets of the data.\nLearned to use transition_*() functions (like transition_reveal()) to create smooth animations in gganimate.\nUnderstood how to control animation speed and behavior via attributes such as frame_time and easing.\nLearned how to combine multiple plot layers (e.g., geom_line, geom_point) with animation to tell a dynamic visual story.\nDiscovered that while animated graphics may not be time-efficient for exploratory analysis, they are highly effective in presentations for capturing attention and emphasizing trends."
  },
  {
    "objectID": "Hands-on_Exercise/Hands-on_Ex03/Hands-on_Ex03.html#getting-started-1",
    "href": "Hands-on_Exercise/Hands-on_Ex03/Hands-on_Ex03.html#getting-started-1",
    "title": "Hands-on_Ex03",
    "section": "4.2 Getting Started",
    "text": "4.2 Getting Started\n\n4.2.1 Loading the R packages\n\nplotly, R library for plotting interactive statistical graphs.\nplotly ，用于绘制交互式统计图表的 R 库。\ngganimate, an ggplot extension for creating animated statistical graphs.\ngganimate ，一个用于创建动画统计图表的 ggplot 扩展。\ngifski converts video frames to GIF animations using pngquant’s fancy features for efficient cross-frame palettes and temporal dithering. It produces animated GIFs that use thousands of colors per frame.\ngifski 使用 pngquant 的高效跨帧调色板和时间抖动功能，将视频帧转换为 GIF 动画。它生成的 GIF 动画每帧使用数千种颜色。\ngapminder: An excerpt of the data available at Gapminder.org. We just want to use its country_colors scheme.\ngapminder ：摘自 Gapminder.org 的数据。我们只想使用它的 country_colors 方案。\ntidyverse, a family of modern R packages specially designed to support data science, analysis and communication task including creating static statistical graphs.\ntidyverse 是一系列现代 R 包，专门设计用于支持数据科学、分析和通信任务，包括创建静态统计图。\n\n\n\nCode\npacman::p_load(readxl, gifski, gapminder,\n               plotly, gganimate, tidyverse)\n\n\n\n\n4.2.2 Importing the data\n\n\nCode\ncol &lt;- c(\"Country\", \"Continent\")\nglobalPop &lt;- read_xls(\"data/GlobalPopulation.xls\",\n                      sheet=\"Data\") %&gt;%\n  mutate_each_(funs(factor(.)), col) %&gt;%\n  mutate(Year = as.integer(Year))"
  },
  {
    "objectID": "Hands-on_Exercise/Hands-on_Ex03/Hands-on_Ex03.html#animated-data-visualisation-gganimate-methods",
    "href": "Hands-on_Exercise/Hands-on_Ex03/Hands-on_Ex03.html#animated-data-visualisation-gganimate-methods",
    "title": "Hands-on_Ex03",
    "section": "4.3 Animated Data Visualisation: gganimate methods",
    "text": "4.3 Animated Data Visualisation: gganimate methods\n\nStatic bubble plotAnimated bubble plot\n\n\n\n\nCode\nggplot(data = globalPop, \n       aes(x = Old, \n           y = Young, \n           size = Population, \n           colour = Country)) +\n  geom_point(alpha = 0.7, \n             show.legend = FALSE) +\n  scale_colour_manual(values = country_colors) +\n  scale_size(range = c(2, 12)) +\n  labs(title = 'Year: {frame_time}', \n       x = '% Aged', \n       y = '% Young') \n\n\n\n\n\n\n\n\n\nCode\nggplot(data = globalPop, \n       aes(x = Old, \n           y = Young, \n           size = Population, \n           colour = Country)) +\n  geom_point(alpha = 0.7, \n             show.legend = FALSE) +\n  scale_colour_manual(values = country_colors) +\n  scale_size(range = c(2, 12)) +\n  labs(title = 'Year: {frame_time}', \n       x = '% Aged', \n       y = '% Young') +\n  transition_time(Year) +  # Transition through distinct states in time   \n  ease_aes('linear')  # Control of easing of aesthetics"
  },
  {
    "objectID": "Hands-on_Exercise/Hands-on_Ex03/Hands-on_Ex03.html#animated-data-visualisation-plotly",
    "href": "Hands-on_Exercise/Hands-on_Ex03/Hands-on_Ex03.html#animated-data-visualisation-plotly",
    "title": "Hands-on_Ex03",
    "section": "4.4 Animated Data Visualisation: plotly",
    "text": "4.4 Animated Data Visualisation: plotly\n\n4.3.1 Animated bubble plot with ggplotly() method\n\nDefaultwithout the legend\n\n\n\n\nCode\ngg &lt;- ggplot(data = globalPop, \n       aes(x = Old, \n           y = Young, \n           size = Population, \n           colour = Country)) +\n  geom_point(aes(size = Population,\n                 frame = Year),\n             alpha = 0.7, \n             show.legend = FALSE) +  # The legend is still displayed\n  scale_colour_manual(values = country_colors) +\n  scale_size(range = c(2, 12)) +\n  labs(x = '% Aged', \n       y = '% Young')\n\nggplotly(gg)\n\n\n\n\n\n\n\n\n\n\nCode\ngg &lt;- ggplot(globalPop, \n       aes(x = Old, \n           y = Young, \n           size = Population, \n           colour = Country)) +\n  geom_point(aes(size = Population,\n                 frame = Year),\n             alpha = 0.7) +\n  scale_colour_manual(values = country_colors) +\n  scale_size(range = c(2, 12)) +\n  labs(x = '% Aged', \n       y = '% Young') + \n  theme(legend.position='none')\n\nggplotly(gg)\n\n\n\n\n\n\n\n\n\n\n\n4.3.2 Animated bubble plot with plot_ly() method\n\n\nCode\nbp &lt;- globalPop %&gt;%\n  plot_ly(x = ~Old, \n          y = ~Young, \n          size = ~Population, \n          color = ~Continent,\n          sizes = c(2, 100),\n          frame = ~Year, \n          text = ~Country, \n          hoverinfo = \"text\",\n          type = 'scatter',\n          mode = 'markers') %&gt;%\n  layout(showlegend = FALSE)\nbp"
  },
  {
    "objectID": "Take-home_Exercise/Take-home_Ex01/Take-home_Ex01.html",
    "href": "Take-home_Exercise/Take-home_Ex01/Take-home_Ex01.html",
    "title": "Take-home_Ex01",
    "section": "",
    "text": "In today’s digital media landscape, the effectiveness of data storytelling depends not only on accuracy but also on visual clarity and impact. As the graphical editor for a local online publication, I was tasked with designing static data visualisations to support an article examining the demographic structure and distribution of Singapore in 2024.\nThis assignment draws on the official dataset provided by the Department of Statistics Singapore (DOS), with a focus on the age and gender distribution across planning areas and subzones. The visualisation process prioritises principles of clarity, truthfulness, and reproducibility.\nThis report outlines the full workflow, including data preparation, visualisation techniques, and key findings. The task is completed in two phases: (1) developing original static charts that highlight meaningful demographic patterns; and (2) evaluating a peer’s submission to provide constructive feedback and produce a visual redesign based on good design principles."
  },
  {
    "objectID": "Take-home_Exercise/Take-home_Ex01/Take-home_Ex01.html#background",
    "href": "Take-home_Exercise/Take-home_Ex01/Take-home_Ex01.html#background",
    "title": "Take-home_Ex01",
    "section": "",
    "text": "In today’s digital media landscape, the effectiveness of data storytelling depends not only on accuracy but also on visual clarity and impact. As the graphical editor for a local online publication, I was tasked with designing static data visualisations to support an article examining the demographic structure and distribution of Singapore in 2024.\nThis assignment draws on the official dataset provided by the Department of Statistics Singapore (DOS), with a focus on the age and gender distribution across planning areas and subzones. The visualisation process prioritises principles of clarity, truthfulness, and reproducibility.\nThis report outlines the full workflow, including data preparation, visualisation techniques, and key findings. The task is completed in two phases: (1) developing original static charts that highlight meaningful demographic patterns; and (2) evaluating a peer’s submission to provide constructive feedback and produce a visual redesign based on good design principles."
  },
  {
    "objectID": "Take-home_Exercise/Take-home_Ex01/Take-home_Ex01.html#getting-started",
    "href": "Take-home_Exercise/Take-home_Ex01/Take-home_Ex01.html#getting-started",
    "title": "Take-home_Ex01",
    "section": "🚀 Getting Started",
    "text": "🚀 Getting Started\nThis project is completed using the following R packages:\n\nggiraph for enhancing ggplot2 graphics with interactivity.\nplotly for building interactive statistical plots (though not required for static charts, it may assist in exploration).\nDT for generating dynamic data tables on HTML pages.\ntidyverse for data manipulation, wrangling, and static chart creation.\npatchwork for arranging multiple ggplot charts in a composite layout.\nscales: for formatting axis labels and annotations (e.g., percentages, commas).\n\n\n\n▼ Load required packages\npacman::p_load(ggiraph, plotly, patchwork, DT, tidyverse, scales)"
  },
  {
    "objectID": "Take-home_Exercise/Take-home_Ex01/Take-home_Ex01.html#visualisation-1-singapores-2024-population-pyramid-by-age-and-sex",
    "href": "Take-home_Exercise/Take-home_Ex01/Take-home_Ex01.html#visualisation-1-singapores-2024-population-pyramid-by-age-and-sex",
    "title": "Take-home_Ex01",
    "section": "👥 Visualisation 1: Singapore’s 2024 Population Pyramid by Age and Sex",
    "text": "👥 Visualisation 1: Singapore’s 2024 Population Pyramid by Age and Sex\nThis visualisation presents the age distribution of Singapore residents by gender in 2024. The population pyramid is built by mirroring bar charts for males and females using ggplot2, offering an immediate sense of population structure and potential ageing trends."
  },
  {
    "objectID": "Take-home_Exercise/Take-home_Ex01/Take-home_Ex01.html#visualisation-1-overview-of-singapores-2024-demographics",
    "href": "Take-home_Exercise/Take-home_Ex01/Take-home_Ex01.html#visualisation-1-overview-of-singapores-2024-demographics",
    "title": "Take-home_Ex01",
    "section": "📊👥 Visualisation 1: Overview of Singapore’s 2024 Demographics",
    "text": "📊👥 Visualisation 1: Overview of Singapore’s 2024 Demographics\nThis set of static charts provides a concise overview of Singapore’s 2024 resident population by gender, age group, and top planning areas. The population pyramid is built by mirroring bar charts for males and females using ggplot2, offering an immediate sense of population structure and potential ageing trends.\n\n\nCode\n# 🎯 1. Gender Distribution (pie chart)\n# Group population by sex and compute percentages\ngender_summary &lt;- pop_data %&gt;%\n  group_by(Sex) %&gt;%\n  summarise(Population = sum(Population), .groups = \"drop\") %&gt;%\n  mutate(Percent = Population / sum(Population),\n         Label = paste0(percent(Percent, accuracy = 0.1)))  # Keep only percentage\n\n# Generate an enlarged pie chart with simplified labels\np1 &lt;- ggplot(gender_summary, aes(x = \"\", y = Population, fill = Sex)) +\n  geom_col(width = 1, color = \"white\") +\n  coord_polar(theta = \"y\") +\n  geom_text(aes(label = Label), position = position_stack(vjust = 0.5),\n            size = 6, fontface = \"bold\", color = \"black\") +\n  scale_fill_manual(values = c(\"Male\" = \"#a3c3cc\", \"Female\" = \"#d4a5a5\")) +\n  labs(title = \"Gender Distribution\") +\n  theme_void() +\n  theme(\n    legend.position = \"none\",\n    plot.title = element_text(size = 16, face = \"bold\", hjust = 0.5),\n  )\n\n# 🎯 2. Age Group Distribution (bar chart)\n# Categorize ages into 10-year intervals and group by gender\npyramid_data &lt;- pop_data %&gt;%\n  filter(Sex %in% c(\"Male\", \"Female\")) %&gt;%\n  mutate(AgeGroup = cut(Age_numeric,\n                        breaks = c(seq(0, 90, 10), Inf),\n                        right = FALSE,\n                        labels = c(\"0-9\", \"10-19\", \"20-29\", \"30-39\",\n                                   \"40-49\", \"50-59\", \"60-69\", \"70-79\",\n                                   \"80-89\", \"90+\"))) %&gt;%\n  group_by(AgeGroup, Sex) %&gt;%\n  summarise(Population = sum(Population), .groups = \"drop\") %&gt;%\n  mutate(Population = ifelse(Sex == \"Male\", -Population, Population))\n\n\n# Create grouped population pyramid\np2 &lt;- ggplot(pyramid_data, aes(x = Population, y = AgeGroup, fill = Sex)) +\n  geom_col(width = 0.9) +\n  scale_x_continuous(labels = function(x) paste0(abs(x / 1000), \"k\")) +\n  scale_fill_manual(values = c(\"Male\" = \"#a3c3cc\", \"Female\" = \"#d4a5a5\")) +\n  labs(\n    title = \"Population Pyramid by Age Group and Gender (2024)\",\n    x = \"Population\",\n    y = \"Age Group\"\n  ) +\n  theme_minimal() +\n  theme(\n    plot.title = element_text(size = 14, face = \"bold\", hjust = 0.5),\n    legend.position = \"none\"\n  )\n\n\n# 🎯 3. Population Pyramid of Top 10 Planning Areas\n# Compute top 10 planning areas based on combined male and female counts\n# 🔍 Step 1: Identify top 10 planning areas by total population\ntop10_pa_names &lt;- pop_data %&gt;%\n  group_by(Planning_Area) %&gt;%\n  summarise(Total = sum(Population), .groups = \"drop\") %&gt;%\n  arrange(desc(Total)) %&gt;%\n  slice_head(n = 10) %&gt;%\n  pull(Planning_Area)\n\n# 🔍 Step 2: Filter data and calculate male/female population\ntop10_pyramid &lt;- pop_data %&gt;%\n  filter(Planning_Area %in% top10_pa_names, Sex %in% c(\"Male\", \"Female\")) %&gt;%\n  group_by(Planning_Area, Sex) %&gt;%\n  summarise(Population = sum(Population), .groups = \"drop\") %&gt;%\n  mutate(\n    Population = ifelse(Sex == \"Male\", -Population, Population),\n    Planning_Area = factor(Planning_Area, levels = rev(top10_pa_names))\n  )\n\n# 📊 Step 3: Plot as population pyramid\n\np3 &lt;-ggplot(top10_pyramid, aes(x = Population, y = Planning_Area, fill = Sex)) +\n  geom_col(width = 0.7) +\n  scale_x_continuous(labels = function(x) paste0(abs(x / 1000), name = \"k\")) +\n  scale_fill_manual(values = c(\"Male\" = \"#a3c3cc\", \"Female\" = \"#d4a5a5\")) +\n  labs(\n    title = \"Population Pyramid of Top 10 Planning Areas (2024)\",\n    y = NULL\n  ) +\n  theme_minimal() +\n  theme(\n    plot.title = element_text(face = \"bold\", size = 16, hjust = 0.5),\n    axis.text = element_text(size = 10),\n    legend.position = \"bottom\"\n  )\n\n# 🧩 Combine charts with patchwork\n(p1 | p2) / p3 + plot_annotation(\ntitle = \"Singapore’s 2024 Population Overview\",\n    theme = theme(plot.title = element_text(size = 18, face = \"bold\", hjust = 0.5))\n)\n\n\n\n\n\n\n\n\n\n\n\nInsights\n\n\n\nINSIGHTS 1\nThis combined dashboard summarizes Singapore’s population profile from three dimensions. The gender pie chart reveals a nearly balanced population, with 51.3% female and 48.7% male residents. The age group bar chart shows the largest cohorts are aged 30–39 and 40–49, indicating a strong working-age base. Populations taper off significantly after 60, pointing to ageing concerns. In the top 10 planning areas, Tampines, Bedok, and Sengkang emerge as major residential zones, each with substantial and balanced gender distributions. The use of harmonized color tones and minimalist layout enhances clarity while emphasizing Singapore’s demographic stability and urban clustering."
  },
  {
    "objectID": "Take-home_Exercise/Take-home_Ex01/Take-home_Ex01.html#data-import-and-cleaning",
    "href": "Take-home_Exercise/Take-home_Ex01/Take-home_Ex01.html#data-import-and-cleaning",
    "title": "Take-home_Ex01",
    "section": "🧼 Data Import and Cleaning",
    "text": "🧼 Data Import and Cleaning\nThe dataset titled Singapore Residents by Planning Area/Subzone, Single Year of Age and Sex, June 2024 was obtained from the Department of Statistics Singapore and includes demographic details broken down by planning area, subzone, age, and sex.\n\n\n▼ Data Import and Cleaning\n# Read cleaned dataset\npop_data &lt;- read_csv(\"data/respopagesex2024.csv\")\n\n# Standardise column names\npop_data &lt;- pop_data %&gt;%\n  rename(\n    Planning_Area = PA,\n    Subzone = SZ,\n    Age = Age,\n    Sex = Sex,\n    Population = Pop,\n    Year = Time\n  ) %&gt;%\n  filter(Year == 2024) %&gt;%\n  mutate(\n    Age_numeric = ifelse(Age == \"90_and_Over\", 90, as.integer(Age)),  # 👈 handle 90+\n    Sex = ifelse(Sex == \"Males\", \"Male\", \"Female\")\n  )\n\n# 🎯 Aggregate population by Planning Area and numeric age\nage_distribution &lt;- pop_data %&gt;%\n  filter(Sex %in% c(\"Male\", \"Female\")) %&gt;%\n  group_by(Planning_Area, Age_numeric) %&gt;%\n  summarise(Population = sum(Population), .groups = \"drop\") %&gt;%\n  rename(Age = Age_numeric)\n\n# 🧮 Weighted median function (same as before)\nweighted_median &lt;- function(df) {\n  df &lt;- df[order(df$Age), ]\n  cum_pop &lt;- cumsum(df$Population)\n  cutoff &lt;- sum(df$Population) / 2\n  df$Age[which(cum_pop &gt;= cutoff)[1]]\n}\n\n# 🧾 Compute weighted median by Planning Area\nmedian_age_summary &lt;- age_distribution %&gt;%\n  group_by(Planning_Area) %&gt;%\n  summarise(Median_Age = weighted_median(cur_data_all()))\n\n\n✅ The dataset contains over 60,000 rows, representing Singapore’s residents by age and gender across multiple planning areas and subzones as of June 2024. The cleaned data will be used to generate meaningful visual narratives."
  },
  {
    "objectID": "Take-home_Exercise/Take-home_Ex01/Take-home_Ex01.html#insights-1",
    "href": "Take-home_Exercise/Take-home_Ex01/Take-home_Ex01.html#insights-1",
    "title": "Take-home_Ex01",
    "section": "INSIGHTS 1",
    "text": "INSIGHTS 1\nThis combined dashboard summarizes Singapore’s population profile from three dimensions. The gender pie chart reveals a nearly balanced population, with 51.3% female and 48.7% male residents. The age group bar chart shows the largest cohorts are aged 30–39 and 40–49, indicating a strong working-age base. Populations taper off significantly after 60, pointing to ageing concerns. In the top 10 planning areas, Tampines, Bedok, and Sengkang emerge as major residential zones, each with substantial and balanced gender distributions. The use of harmonized color tones and minimalist layout enhances clarity while emphasizing Singapore’s demographic stability and urban clustering."
  },
  {
    "objectID": "Take-home_Exercise/Take-home_Ex01/Take-home_Ex01.html#visualisation-2-aging-profile-by-planning-area-2024",
    "href": "Take-home_Exercise/Take-home_Ex01/Take-home_Ex01.html#visualisation-2-aging-profile-by-planning-area-2024",
    "title": "Take-home_Ex01",
    "section": "📊🧓👴 Visualisation 2: Aging Profile by Planning Area (2024)",
    "text": "📊🧓👴 Visualisation 2: Aging Profile by Planning Area (2024)\nThis set of charts explores Singapore’s aging population (age 65 and above) across different planning areas using a combination of proportion-based and gender-disaggregated visualizations. It helps identify which areas face more significant aging trends and whether gender imbalances exist in elderly demographics.\n\n\nCode\n# ✅ Step 1: Prepare elderly population share\npop_age_elderly &lt;- pop_data %&gt;%\n  filter(Sex %in% c(\"Male\", \"Female\")) %&gt;%\n  mutate(IsElderly = Age_numeric &gt;= 65)\n\nelderly_share &lt;- pop_age_elderly %&gt;%\n  group_by(Planning_Area) %&gt;%\n  summarise(\n    Total = sum(Population),\n    Elderly = sum(Population[IsElderly]),\n    Elderly_Share = Elderly / Total\n  ) %&gt;%\n  arrange(desc(Elderly_Share)) %&gt;%\n  slice_head(n = 15)\n\nelderly_pop &lt;- pop_age_elderly %&gt;%\n  group_by(Planning_Area) %&gt;%\n  summarise(\n    Total = sum(Population),\n    Elderly = sum(Population[IsElderly]),\n  ) %&gt;%\n  arrange(desc(Elderly)) %&gt;%\n  slice_head(n = 15)\n\n# ✅ Step 2: Elderly share bar chart (Top 15)\nchart1 &lt;- ggplot(elderly_share, aes(x = Elderly_Share, y = reorder(Planning_Area, Elderly_Share))) +\n  geom_col(fill = \"#9C7C38\", width = 0.7) +\n  scale_x_continuous(labels = percent_format(accuracy = 1)) +\n  labs(\n    title = \"Top 15 Planning Areas by Elderly Share (65+)\",\n    x = NULL, y = NULL\n  ) +\n  theme_minimal(base_size = 12) +\n  theme(\n    plot.title = element_text(face = \"bold\", size = 14),\n    axis.text.y = element_text(size = 10)\n  )\n\n# ✅ Step 3: Population Pyramid of Elderly (65+) in Top 15 Areas\ntop15_names &lt;- elderly_pop$Planning_Area\n\nelderly_gender_pop &lt;- pop_age_elderly %&gt;%\n  filter(IsElderly, Planning_Area %in% top15_names) %&gt;%\n  group_by(Planning_Area, Sex) %&gt;%\n  summarise(Pop = sum(Population), .groups = \"drop\") %&gt;%\n  mutate(Pop = ifelse(Sex == \"Male\", -Pop, Pop)) %&gt;%\n  mutate(Planning_Area = factor(Planning_Area, levels = rev(top15_names)))\n\nchart2 &lt;- ggplot(elderly_gender_pop, aes(x = Pop, y = Planning_Area, fill = Sex)) +\n  geom_col(width = 0.7) +\n  scale_x_continuous(labels = function(x) paste0(abs(x / 1000), name = \"k\"))  +\n  scale_fill_manual(values = c(\"Male\" = \"#9dbdcb\", \"Female\" = \"#d7a1a1\")) +\n  labs(\n    title = \"Gender Breakdown of Elderly Population\",\n    x = NULL, y = NULL\n  ) +\n  theme_minimal(base_size = 12) +\n  theme(\n    plot.title = element_text(face = \"bold\", size = 14),\n    axis.text.y = element_text(size = 10),\n    legend.position = \"bottom\"\n  )\n\n# ✅ Combine Plots\n(chart1 | chart2)  + plot_annotation(\ntitle = \"Singapore’s 2024 Aging Population by Planning Area\",\n    theme = theme(plot.title = element_text(size = 18, face = \"bold\", hjust = 0.5))\n)\n\n\n\n\n\n\n\n\n\n\n\nInsights\n\n\n\nINSIGHTS 2\nOutram, Ang Mo Kio, and Bukit Merah rank highest by elderly proportion (65+), all exceeding 20% — indicating aging concentration in mature residential estates.\nBedok, Tampines, and Hougang have the largest elderly populations in absolute numbers, reflecting pressure on service supply despite a lower aging ratio.\nGender breakdown reveals a slight predominance of females in the senior age groups, consistent with longevity trends.\nPolicymakers should differentiate between:\n🏘️ High-share areas: prioritize community renewal and age-friendly infrastructure.\n🏥 High-count areas: focus on resource capacity and care delivery systems."
  },
  {
    "objectID": "Take-home_Exercise/Take-home_Ex01/Take-home_Ex01.html#insights-2",
    "href": "Take-home_Exercise/Take-home_Ex01/Take-home_Ex01.html#insights-2",
    "title": "Take-home_Ex01",
    "section": "INSIGHTS 2",
    "text": "INSIGHTS 2\nOutram, Ang Mo Kio, and Bukit Merah rank highest by elderly proportion (65+), all exceeding 20% — indicating aging concentration in mature residential estates.\nBedok, Tampines, and Hougang have the largest elderly populations in absolute numbers, reflecting pressure on service supply despite a lower aging ratio.\nGender breakdown reveals a slight predominance of females in the senior age groups, consistent with longevity trends.\nPolicymakers should differentiate between:\n🏘️ High-share areas: prioritize community renewal and age-friendly infrastructure.\n🏥 High-count areas: focus on resource capacity and care delivery systems."
  },
  {
    "objectID": "Take-home_Exercise/Take-home_Ex01/Take-home_Ex01.html#visualisation-3-visualisation-3-intergenerational-balance-elderly-vs.-youth",
    "href": "Take-home_Exercise/Take-home_Ex01/Take-home_Ex01.html#visualisation-3-visualisation-3-intergenerational-balance-elderly-vs.-youth",
    "title": "Take-home_Ex01",
    "section": "📊👶🧠 Visualisation 3: Visualisation 3: Intergenerational Balance — Elderly vs. Youth",
    "text": "📊👶🧠 Visualisation 3: Visualisation 3: Intergenerational Balance — Elderly vs. Youth\nThis chart identifies planning areas with a potentially shrinking younger population (aged 0–24). It visualizes the bottom 15 regions by youth share, helping pinpoint areas that may face future workforce shortages and demographic imbalances. It complements the aging analysis by showing the flip side of the age spectrum.\n\n\nCode\n# ✅ Step 1: Add Elderly & Youth Flags\ndemo_age_flags &lt;- pop_data %&gt;%\n  mutate(\n    IsElderly = Age_numeric &gt;= 65,\n    IsYouth = Age_numeric &lt;= 14\n  )\n\n# ✅ Step 2: Compute Aggregated Age Ratios\nage_ratio_data &lt;- demo_age_flags %&gt;%\n  group_by(Planning_Area) %&gt;%\n  summarise(\n    Total = sum(Population),\n    Elderly = sum(Population[IsElderly]),\n    Youth = sum(Population[IsYouth]),\n    Elderly_Share = Elderly / Total,\n    Youth_Share = Youth / Total,\n    Elderly_to_Youth = Elderly / Youth\n  ) %&gt;%\n  filter(Youth &gt; 0)\n\n# ✅ Step 3: Interactive Scatterplot - Elderly Share vs Total Population\nplot1 &lt;- ggplot(age_ratio_data, aes(x = Total / 1000, y = Elderly_Share)) +\n  geom_point_interactive(aes(\n    tooltip = paste0(\n      Planning_Area, \"\\n\",\n      \"Elderly Share: \", percent(Elderly_Share, 1), \"\\n\",\n      \"Total Pop: \", comma(Total), \"\\n\",\n      \"Elderly Count: \", comma(Elderly), \"\\n\",\n      \"Elderly/Youth Ratio: \", round(Elderly_to_Youth, 2)\n    ),\n    data_id = Planning_Area,\n    color = Elderly_to_Youth\n  ), size = 4, alpha = 0.8) +\n  scale_color_gradient(low = \"#a0c4ff\", high = \"#d90429\") +\n  scale_y_continuous(labels = percent_format(accuracy = 1)) +\n  labs(\n    title = \"Elderly Share vs Total Population\",\n    x = \"Total Population (Thousands)\",\n    y = \"Elderly Share (65+)\",\n    color = \"Elderly/Youth Ratio\"\n  ) +\n  theme_minimal() +\n  theme(plot.title = element_text(face = \"bold\", hjust = 0.5))\n\n# ✅ Step 4: Interactive Scatterplot - Elderly Share vs Youth Share\nplot2 &lt;- ggplot(age_ratio_data, aes(x = Youth_Share, y = Elderly_Share)) +\n  geom_abline(slope = 1, intercept = 0, linetype = \"dashed\", color = \"gray\") +\n  geom_point_interactive(aes(\n    tooltip = paste0(\n      Planning_Area, \"\\n\",\n      \"Youth Share: \", percent(Youth_Share, 1), \"\\n\",\n      \"Elderly Share: \", percent(Elderly_Share, 1), \"\\n\",\n      \"Elderly/Youth Ratio: \", round(Elderly_to_Youth, 2)\n    ),\n    data_id = Planning_Area,\n    color = Elderly_to_Youth\n  ), size = 4, alpha = 0.8) +\n  scale_x_continuous(labels = percent_format(accuracy = 1)) +\n  scale_y_continuous(labels = percent_format(accuracy = 1)) +\n  scale_color_gradient(low = \"#a0c4ff\", high = \"#ff595e\") +\n  labs(\n    title = \"Elderly Share vs Youth Share (0–14)\",\n    x = \"Youth Share\",\n    y = \"Elderly Share\",\n    color = \"Elderly/Youth Ratio\"\n  ) +\n  theme_minimal() +\n  theme(plot.title = element_text(face = \"bold\", hjust = 0.5))\n\n# ✅ Step 5: Display Combined Interactive Plot (with max width)\nlibrary(ggiraph)\n\ngirafe(\n  code = print(plot1 + plot2),\n  width_svg = 16, height_svg = 7,\n  options = list(\n    opts_hover(css = \"stroke:black;stroke-width:2px;fill-opacity:1;\"),\n    opts_tooltip(css = \"background:white;padding:6px;border:1px solid gray;border-radius:4px;font-size:12px;\"),\n    opts_sizing(rescale = TRUE, width = 1)\n  )\n)\n\n\n\n\n\n\n\n\n\n\n\n\nInsights 3\n\n\n\nINSIGHTS 3\nOutram has a high elderly share despite its small total population, indicating mature community concentration.\nTampines, Hougang, and Jurong West show balanced youth-elderly ratios, important for sustainable urban aging.\nPoints above the 45° line on the right chart suggest elder-heavy imbalance — ideal targets for age-friendly infrastructure."
  },
  {
    "objectID": "Take-home_Exercise/Take-home_Ex01/Take-home_Ex01.html#insights-3",
    "href": "Take-home_Exercise/Take-home_Ex01/Take-home_Ex01.html#insights-3",
    "title": "Take-home_Ex01",
    "section": "INSIGHTS 3",
    "text": "INSIGHTS 3\nOutram has a high elderly share despite its small total population, indicating mature community concentration.\nTampines, Hougang, and Jurong West show balanced youth-elderly ratios, important for sustainable urban aging.\nPoints above the 45° line on the right chart suggest elder-heavy imbalance — ideal targets for age-friendly infrastructure."
  },
  {
    "objectID": "Take-home_Exercise/Take-home_Ex01/Take-home_Ex01.html#references",
    "href": "Take-home_Exercise/Take-home_Ex01/Take-home_Ex01.html#references",
    "title": "Take-home_Ex01",
    "section": "🧲 References",
    "text": "🧲 References\n\nhttps://www.singstat.gov.sg/find-data/search-by-theme/population/population-and-population-structure/visualising-data\nhttps://isss608-spacebun.netlify.app/take-home_ex/take-home_ex1/take-home_ex1\nhttps://akalestale.netlify.app/take-home_ex/take-home_ex01/take-home_ex01"
  },
  {
    "objectID": "Take-home_Exercise/Take-home_Ex01/Take-home_Ex02.html",
    "href": "Take-home_Exercise/Take-home_Ex01/Take-home_Ex02.html",
    "title": "Take-home_Ex01-phaseII",
    "section": "",
    "text": "refer:https://isss608-davidchiam.netlify.app/take-home_ex/take-home_ex01/take-home_ex01\n\n\n1. Effective Use of Visual Encodings\nDavid effectively applies core visualisation techniques by using mirrored bar charts for population pyramids and boxplots for median age distribution. In particular:\n\nThe mirrored bars in the pyramid chart enable immediate comparison between male and female cohorts.\nThe use of boxplots is apt for showing variability and central tendency (e.g., median age) across planning areas.\nIn the stacked bar chart, gender and age group differences are clearly segmented, leveraging hue and spatial separation.\n\n2. Logical Flow and Visual Hierarchy\nThe visualisation follows a logical and structured flow:\n\nIt begins with a high-level overview (e.g., gender share), then progressively narrows to specific planning area comparisons.\nThis top-down design facilitates cognitive flow and narrative pacing.\nClear section titles and cohesive subplot sequencing enhance usability.\n\n3. Consistent and Minimalist Visual Theme\nDavid’s work maintains high aesthetic discipline:\n\nMuted pastel tones reduce cognitive overload.\nConsistent typography and plot margin spacing lend a polished appearance.\nAxes, titles, and legends are harmonised across charts, which ensures clarity without redundancy.\n\n\n\n\n\n1. Lack of Annotations and Contextual Labels\nWhile David’s charts are clean, they often lack direct data labels or annotations. This limits interpretability:\n\n✅ Fix: The makeover scatterplot adds dynamic labeling for outliers (e.g., Outram with high elderly share), improving insight at-a-glance.\n\n2. Axis and Formatting Inconsistencies\nThere are inconsistencies in axis label units (e.g., some show absolute numbers, others show percentages):\n\n✅ Fix: In our makeover, all values are formatted uniformly using percent_format() and /1000 suffixes for population.\n\n3. Redundant Charts and Missed Insight Opportunities\nSome charts display similar gender breakdowns without revealing new dimensions. At the same time, insightful metrics like the elderly/youth ratio are missing:\n\n✅ Fix: We introduced a derived metric (Elderly_to_Youth) and plotted it against population size and aging ratio, unveiling patterns not covered in the original submission.\n\n\n\n\n\nLoad required packages 📦\n\n\nCode\npacman::p_load(\n  tidyverse,     # Core data manipulation and ggplot2 plotting\n  knitr,         # Dynamic report generation and rendering\n  patchwork,     # Combines multiple ggplot2 plots\n  ggthemes,      # Additional themes and visual styles\n  scales,        # Formatting axes, scales, and labels\n  ggtext,        # Rich text formatting in ggplot titles/labels\n  ggalt,         # Dumbbell, lollipop, and other advanced geoms\n  ggridges,      # Ridgeline plots to visualize distributions\n  ggpubr,        # Publication-ready ggplot2 enhancements\n  ggExtra,       # Marginal plots for added insight\n  cowplot,       # Publication-quality figure alignment\n  ggnewscale,    # Allows multiple color/fill scales in one ggplot\n  ggrepel        # Allows\n)\n\n\nLoading the Data and Taking a Glimpse of the Dataset 📂\n\n\nCode\n# Load the dataset\ndf &lt;- read_csv(\"data/respopagesex2024.csv\")\n\n\nThe dataset contains 60,424 rows and 6 columns. Each row represents the count of residents for a specific combination of planning area, subzone, age, sex, and year.\n\n\nCode\nglimpse(df)\n\n\nRows: 60,424\nColumns: 6\n$ PA   &lt;chr&gt; \"Ang Mo Kio\", \"Ang Mo Kio\", \"Ang Mo Kio\", \"Ang Mo Kio\", \"Ang Mo K…\n$ SZ   &lt;chr&gt; \"Ang Mo Kio Town Centre\", \"Ang Mo Kio Town Centre\", \"Ang Mo Kio T…\n$ Age  &lt;chr&gt; \"0\", \"0\", \"1\", \"1\", \"2\", \"2\", \"3\", \"3\", \"4\", \"4\", \"5\", \"5\", \"6\", …\n$ Sex  &lt;chr&gt; \"Males\", \"Females\", \"Males\", \"Females\", \"Males\", \"Females\", \"Male…\n$ Pop  &lt;dbl&gt; 10, 10, 10, 10, 10, 10, 10, 10, 30, 10, 20, 10, 20, 30, 30, 10, 3…\n$ Time &lt;dbl&gt; 2024, 2024, 2024, 2024, 2024, 2024, 2024, 2024, 2024, 2024, 2024,…\n\n\nWrangling, Cleaning & Transformation 🧹\n\n\nCode\ndf &lt;- df %&gt;%\n  mutate(Age = as.integer(Age)) %&gt;%  # Convert to numeric (100+ becomes NA)\n  drop_na(Age)                       # Remove missing values caused by conversion\n\ndf &lt;- df %&gt;%\n  mutate(AgeBand = cut(Age,\n    breaks = c(0, 5, 10, 15, 20, 25, 30, 35, 40, 45, 50, 55,\n               60, 65, 70, 75, 80, 85, 90, 95, 100, Inf),\n    labels = c(\"0-4\", \"5-9\", \"10-14\", \"15-19\", \"20-24\", \"25-29\",\n               \"30-34\", \"35-39\", \"40-44\", \"45-49\", \"50-54\",\n               \"55-59\", \"60-64\", \"65-69\", \"70-74\", \"75-79\",\n               \"80-84\", \"85-89\", \"90-94\", \"95-99\", \"100+\"),\n    right = FALSE))\n\n# For population pyramid (Age-Sex)\npyramid_data &lt;- df %&gt;%\n  group_by(Age, Sex) %&gt;%\n  summarise(Pop = sum(Pop), .groups = \"drop\")\n\n# For top 5 planning areas\ntop5_pa &lt;- df %&gt;%\n  group_by(PA) %&gt;%\n  summarise(Pop = sum(Pop), .groups = \"drop\") %&gt;%\n  slice_max(order_by = Pop, n = 5)\n\ndf &lt;- df %&gt;%\n  mutate(\n    PA = str_trim(str_to_upper(PA)),\n    Region = case_when(\n      PA %in% c(\"BISHAN\", \"BUKIT MERAH\", \"BUKIT TIMAH\", \"CENTRAL AREA\", \"DOWNTOWN CORE\",\n                \"GEYLANG\", \"KALLANG\", \"MARINA EAST\", \"MARINA SOUTH\", \"MUSEUM\", \"NEWTON\",\n                \"NOVENA\", \"ORCHARD\", \"OUTRAM\", \"PAYA LEBAR\", \"QUEENSTOWN\", \"RIVER VALLEY\",\n                \"ROCHOR\", \"SINGAPORE RIVER\", \"SOUTHERN ISLANDS\", \"STRAITS VIEW\", \"TANGLIN\",\n                \"TOA PAYOH\", \"MARINE PARADE\") ~ \"Central\",\n      PA %in% c(\"BEDOK\", \"CHANGI\", \"CHANGI BAY\", \"PASIR RIS\", \"TAMPINES\") ~ \"East\",\n      PA %in% c(\"CENTRAL WATER CATCHMENT\", \"MANDAI\", \"SEMBABWANG\", \"SIMPANG\",\n                \"SUNGEI KADUT\", \"WOODLANDS\", \"YISHUN\", \"SEMBAWANG\") ~ \"North\",\n      PA %in% c(\"ANG MO KIO\", \"HOUGANG\", \"NORTH-EASTERN ISLANDS\", \"PUNGGOL\",\n                \"SELETAR\", \"SENGKANG\", \"SERANGOON\") ~ \"North-East\",\n      PA %in% c(\"BOON LAY\", \"BUKIT BATOK\", \"BUKIT PANJANG\", \"CHOA CHU KANG\",\n                \"CLEMENTI\", \"JURONG EAST\", \"JURONG WEST\", \"LIM CHU KANG\",\n                \"PIONEER\", \"TENGAH\", \"TUAS\", \"WESTERN ISLANDS\",\n                \"WESTERN WATER CATCHMENT\") ~ \"West\",\n      TRUE ~ NA_character_\n    )\n  )\n\ndf_median &lt;- df %&gt;%\n  arrange(Age) %&gt;%\n  mutate(\n    cum_pop = cumsum(Pop),\n    total_pop = sum(Pop)\n  ) %&gt;%\n  filter(cum_pop &gt;= total_pop / 2) %&gt;%\n  slice(1)\n\nmedian_age &lt;- df_median$Age\n\ndf &lt;- df %&gt;%\n  mutate(\n    GenerationBand = case_when(\n      Age &lt;= 24 ~ \"Alpha & Gen Z (0–24)\",\n      Age &lt;= 34 ~ \"Young Adults (25–34)\",\n      Age &lt;= 54 ~ \"Working Adults (35–54)\",\n      Age &lt;= 64 ~ \"Silver Generation (55–64)\",\n      Age &lt;= 74 ~ \"Merdeka Generation (65–74)\",\n      TRUE ~ \"Pioneer Generation (75+)\"\n    ),\n    GenerationBand = factor(GenerationBand, levels = c(\n      \"Alpha & Gen Z (0–24)\", \"Young Adults (25–34)\", \"Working Adults (35–54)\",\n      \"Silver Generation (55–64)\", \"Merdeka Generation (65–74)\", \"Pioneer Generation (75+)\"\n    ))\n  )\n\n\n🔍 Interpretation\nThis interactive scatterplot allows users to:\nIdentify areas with high elderly population shares despite small total populations (e.g., Outram).\nCompare elderly shares across all areas by hovering over each dot.\nUnderstand population pressure points for aging infrastructure and services.\n📌 Conclusion\nDavid’s work is well-designed and informative. With just a few enhancements such as interactivity, annotation, and layout consistency, the overall impact of the visuals can be significantly increased. The proposed makeover demonstrates how a single interactive visual can provide richer engagement while maintaining visual clarity."
  },
  {
    "objectID": "Take-home_Exercise/Take-home_Ex01/Take-home_Ex02.html#review-of-peer-submission-david-chiam",
    "href": "Take-home_Exercise/Take-home_Ex01/Take-home_Ex02.html#review-of-peer-submission-david-chiam",
    "title": "Take-home_Ex01-phaseII",
    "section": "",
    "text": "refer:https://isss608-davidchiam.netlify.app/take-home_ex/take-home_ex01/take-home_ex01\n\n\n1. Effective Use of Visual Encodings\nDavid effectively applies core visualisation techniques by using mirrored bar charts for population pyramids and boxplots for median age distribution. In particular:\n\nThe mirrored bars in the pyramid chart enable immediate comparison between male and female cohorts.\nThe use of boxplots is apt for showing variability and central tendency (e.g., median age) across planning areas.\nIn the stacked bar chart, gender and age group differences are clearly segmented, leveraging hue and spatial separation.\n\n2. Logical Flow and Visual Hierarchy\nThe visualisation follows a logical and structured flow:\n\nIt begins with a high-level overview (e.g., gender share), then progressively narrows to specific planning area comparisons.\nThis top-down design facilitates cognitive flow and narrative pacing.\nClear section titles and cohesive subplot sequencing enhance usability.\n\n3. Consistent and Minimalist Visual Theme\nDavid’s work maintains high aesthetic discipline:\n\nMuted pastel tones reduce cognitive overload.\nConsistent typography and plot margin spacing lend a polished appearance.\nAxes, titles, and legends are harmonised across charts, which ensures clarity without redundancy.\n\n\n\n\n\n1. Lack of Annotations and Contextual Labels\nWhile David’s charts are clean, they often lack direct data labels or annotations. This limits interpretability:\n\n✅ Fix: The makeover scatterplot adds dynamic labeling for outliers (e.g., Outram with high elderly share), improving insight at-a-glance.\n\n2. Axis and Formatting Inconsistencies\nThere are inconsistencies in axis label units (e.g., some show absolute numbers, others show percentages):\n\n✅ Fix: In our makeover, all values are formatted uniformly using percent_format() and /1000 suffixes for population.\n\n3. Redundant Charts and Missed Insight Opportunities\nSome charts display similar gender breakdowns without revealing new dimensions. At the same time, insightful metrics like the elderly/youth ratio are missing:\n\n✅ Fix: We introduced a derived metric (Elderly_to_Youth) and plotted it against population size and aging ratio, unveiling patterns not covered in the original submission.\n\n\n\n\n\nLoad required packages 📦\n\n\nCode\npacman::p_load(\n  tidyverse,     # Core data manipulation and ggplot2 plotting\n  knitr,         # Dynamic report generation and rendering\n  patchwork,     # Combines multiple ggplot2 plots\n  ggthemes,      # Additional themes and visual styles\n  scales,        # Formatting axes, scales, and labels\n  ggtext,        # Rich text formatting in ggplot titles/labels\n  ggalt,         # Dumbbell, lollipop, and other advanced geoms\n  ggridges,      # Ridgeline plots to visualize distributions\n  ggpubr,        # Publication-ready ggplot2 enhancements\n  ggExtra,       # Marginal plots for added insight\n  cowplot,       # Publication-quality figure alignment\n  ggnewscale,    # Allows multiple color/fill scales in one ggplot\n  ggrepel        # Allows\n)\n\n\nLoading the Data and Taking a Glimpse of the Dataset 📂\n\n\nCode\n# Load the dataset\ndf &lt;- read_csv(\"data/respopagesex2024.csv\")\n\n\nThe dataset contains 60,424 rows and 6 columns. Each row represents the count of residents for a specific combination of planning area, subzone, age, sex, and year.\n\n\nCode\nglimpse(df)\n\n\nRows: 60,424\nColumns: 6\n$ PA   &lt;chr&gt; \"Ang Mo Kio\", \"Ang Mo Kio\", \"Ang Mo Kio\", \"Ang Mo Kio\", \"Ang Mo K…\n$ SZ   &lt;chr&gt; \"Ang Mo Kio Town Centre\", \"Ang Mo Kio Town Centre\", \"Ang Mo Kio T…\n$ Age  &lt;chr&gt; \"0\", \"0\", \"1\", \"1\", \"2\", \"2\", \"3\", \"3\", \"4\", \"4\", \"5\", \"5\", \"6\", …\n$ Sex  &lt;chr&gt; \"Males\", \"Females\", \"Males\", \"Females\", \"Males\", \"Females\", \"Male…\n$ Pop  &lt;dbl&gt; 10, 10, 10, 10, 10, 10, 10, 10, 30, 10, 20, 10, 20, 30, 30, 10, 3…\n$ Time &lt;dbl&gt; 2024, 2024, 2024, 2024, 2024, 2024, 2024, 2024, 2024, 2024, 2024,…\n\n\nWrangling, Cleaning & Transformation 🧹\n\n\nCode\ndf &lt;- df %&gt;%\n  mutate(Age = as.integer(Age)) %&gt;%  # Convert to numeric (100+ becomes NA)\n  drop_na(Age)                       # Remove missing values caused by conversion\n\ndf &lt;- df %&gt;%\n  mutate(AgeBand = cut(Age,\n    breaks = c(0, 5, 10, 15, 20, 25, 30, 35, 40, 45, 50, 55,\n               60, 65, 70, 75, 80, 85, 90, 95, 100, Inf),\n    labels = c(\"0-4\", \"5-9\", \"10-14\", \"15-19\", \"20-24\", \"25-29\",\n               \"30-34\", \"35-39\", \"40-44\", \"45-49\", \"50-54\",\n               \"55-59\", \"60-64\", \"65-69\", \"70-74\", \"75-79\",\n               \"80-84\", \"85-89\", \"90-94\", \"95-99\", \"100+\"),\n    right = FALSE))\n\n# For population pyramid (Age-Sex)\npyramid_data &lt;- df %&gt;%\n  group_by(Age, Sex) %&gt;%\n  summarise(Pop = sum(Pop), .groups = \"drop\")\n\n# For top 5 planning areas\ntop5_pa &lt;- df %&gt;%\n  group_by(PA) %&gt;%\n  summarise(Pop = sum(Pop), .groups = \"drop\") %&gt;%\n  slice_max(order_by = Pop, n = 5)\n\ndf &lt;- df %&gt;%\n  mutate(\n    PA = str_trim(str_to_upper(PA)),\n    Region = case_when(\n      PA %in% c(\"BISHAN\", \"BUKIT MERAH\", \"BUKIT TIMAH\", \"CENTRAL AREA\", \"DOWNTOWN CORE\",\n                \"GEYLANG\", \"KALLANG\", \"MARINA EAST\", \"MARINA SOUTH\", \"MUSEUM\", \"NEWTON\",\n                \"NOVENA\", \"ORCHARD\", \"OUTRAM\", \"PAYA LEBAR\", \"QUEENSTOWN\", \"RIVER VALLEY\",\n                \"ROCHOR\", \"SINGAPORE RIVER\", \"SOUTHERN ISLANDS\", \"STRAITS VIEW\", \"TANGLIN\",\n                \"TOA PAYOH\", \"MARINE PARADE\") ~ \"Central\",\n      PA %in% c(\"BEDOK\", \"CHANGI\", \"CHANGI BAY\", \"PASIR RIS\", \"TAMPINES\") ~ \"East\",\n      PA %in% c(\"CENTRAL WATER CATCHMENT\", \"MANDAI\", \"SEMBABWANG\", \"SIMPANG\",\n                \"SUNGEI KADUT\", \"WOODLANDS\", \"YISHUN\", \"SEMBAWANG\") ~ \"North\",\n      PA %in% c(\"ANG MO KIO\", \"HOUGANG\", \"NORTH-EASTERN ISLANDS\", \"PUNGGOL\",\n                \"SELETAR\", \"SENGKANG\", \"SERANGOON\") ~ \"North-East\",\n      PA %in% c(\"BOON LAY\", \"BUKIT BATOK\", \"BUKIT PANJANG\", \"CHOA CHU KANG\",\n                \"CLEMENTI\", \"JURONG EAST\", \"JURONG WEST\", \"LIM CHU KANG\",\n                \"PIONEER\", \"TENGAH\", \"TUAS\", \"WESTERN ISLANDS\",\n                \"WESTERN WATER CATCHMENT\") ~ \"West\",\n      TRUE ~ NA_character_\n    )\n  )\n\ndf_median &lt;- df %&gt;%\n  arrange(Age) %&gt;%\n  mutate(\n    cum_pop = cumsum(Pop),\n    total_pop = sum(Pop)\n  ) %&gt;%\n  filter(cum_pop &gt;= total_pop / 2) %&gt;%\n  slice(1)\n\nmedian_age &lt;- df_median$Age\n\ndf &lt;- df %&gt;%\n  mutate(\n    GenerationBand = case_when(\n      Age &lt;= 24 ~ \"Alpha & Gen Z (0–24)\",\n      Age &lt;= 34 ~ \"Young Adults (25–34)\",\n      Age &lt;= 54 ~ \"Working Adults (35–54)\",\n      Age &lt;= 64 ~ \"Silver Generation (55–64)\",\n      Age &lt;= 74 ~ \"Merdeka Generation (65–74)\",\n      TRUE ~ \"Pioneer Generation (75+)\"\n    ),\n    GenerationBand = factor(GenerationBand, levels = c(\n      \"Alpha & Gen Z (0–24)\", \"Young Adults (25–34)\", \"Working Adults (35–54)\",\n      \"Silver Generation (55–64)\", \"Merdeka Generation (65–74)\", \"Pioneer Generation (75+)\"\n    ))\n  )\n\n\n🔍 Interpretation\nThis interactive scatterplot allows users to:\nIdentify areas with high elderly population shares despite small total populations (e.g., Outram).\nCompare elderly shares across all areas by hovering over each dot.\nUnderstand population pressure points for aging infrastructure and services.\n📌 Conclusion\nDavid’s work is well-designed and informative. With just a few enhancements such as interactivity, annotation, and layout consistency, the overall impact of the visuals can be significantly increased. The proposed makeover demonstrates how a single interactive visual can provide richer engagement while maintaining visual clarity."
  },
  {
    "objectID": "Hands-on_Exercise/Hands-on_Ex04/Hands-on_Ex04.html",
    "href": "Hands-on_Exercise/Hands-on_Ex04/Hands-on_Ex04.html",
    "title": "Hands-on_Ex04",
    "section": "",
    "text": "Fundamentals of Visualization Analytics\n\n\n1 Visualizing Distribution\nThe following section was modified according to https://r4va.netlify.app/chap09.\n\n\nCode\npacman::p_load(ggdist, ggridges, ggthemes,\n               colorspace, tidyverse)\n\nexam_data &lt;- read_csv(\"data/Exam_data.csv\")\n\n\nVisualizing Distribution with Ridgeline Plot When to Use Ridgeline Plots:\nWhen you have a medium to high number of groups (more than 5), as it saves space. If there is a clear pattern or ranking among groups, making insights easier to spot. When you want to efficiently visualize distributions without using separate plots. When Not to Use Ridgeline Plots:\nIf there are fewer than 5 groups, other distribution plots (e.g., boxplots) may be better. When groups lack a clear pattern, as overlapping can make the plot messy. If hiding some data due to overlap reduces clarity rather than improving visualization.\n\n\nCode\nggplot(data = exam_data, \n       aes(x = ENGLISH, \n           y = CLASS)) +\n  geom_density_ridges(\n    scale = 3,\n    rel_min_height = 0.01,\n    bandwidth = 3.4,\n    fill = lighten(\"gray\", .3),\n    color = \"white\"\n  ) +\n  scale_x_continuous(\n    name = \"English grades\",\n    expand = c(0, 0)\n    ) +\n  scale_y_discrete(name = NULL, \n                   expand = expansion(add = c(0.2, 2.6))) +\n  theme_ridges()\n\n\n\n\n\n\n1.2 Varying fill colors along the x axis"
  },
  {
    "objectID": "Take-home_Exercise/Take-home_Ex01/Take-home_Ex01-phaseII.html",
    "href": "Take-home_Exercise/Take-home_Ex01/Take-home_Ex01-phaseII.html",
    "title": "Take-home_Ex01-phaseII",
    "section": "",
    "text": "refer:https://isss608-davidchiam.netlify.app/take-home_ex/take-home_ex01/take-home_ex01\n\n\n1. Effective Use of Visual Encodings\nDavid effectively applies core visualisation techniques by using mirrored bar charts for population pyramids and boxplots for median age distribution. In particular:\n\nThe mirrored bars in the pyramid chart enable immediate comparison between male and female cohorts.\nThe use of boxplots is apt for showing variability and central tendency (e.g., median age) across planning areas.\nIn the stacked bar chart, gender and age group differences are clearly segmented, leveraging hue and spatial separation.\n\n2. Logical Flow and Visual Hierarchy\nThe visualisation follows a logical and structured flow:\n\nIt begins with a high-level overview (e.g., gender share), then progressively narrows to specific planning area comparisons.\nThis top-down design facilitates cognitive flow and narrative pacing.\nClear section titles and cohesive subplot sequencing enhance usability.\n\n3. Consistent and Minimalist Visual Theme\nDavid’s work maintains high aesthetic discipline:\n\nMuted pastel tones reduce cognitive overload.\nConsistent typography and plot margin spacing lend a polished appearance.\nAxes, titles, and legends are harmonised across charts, which ensures clarity without redundancy.\n\n\n\n\n\n1. Lack of Annotations and Contextual Labels\nWhile David’s charts are clean, they often lack direct data labels or annotations. This limits interpretability:\n\n✅ Fix: The makeover scatterplot adds dynamic labeling for outliers (e.g., Outram with high elderly share), improving insight at-a-glance.\n\n2. Axis and Formatting Inconsistencies\nThere are inconsistencies in axis label units (e.g., some show absolute numbers, others show percentages):\n\n✅ Fix: In our makeover, all values are formatted uniformly using percent_format() and /1000 suffixes for population.\n\n3. Redundant Charts and Missed Insight Opportunities\nSome charts display similar gender breakdowns without revealing new dimensions. At the same time, insightful metrics like the elderly/youth ratio are missing:\n\n✅ Fix: We introduced a derived metric (Elderly_to_Youth) and plotted it against population size and aging ratio, unveiling patterns not covered in the original submission.\n\n\n\n\n\nLoad required packages 📦\n\n\nCode\npacman::p_load(\n  tidyverse,     # Core data manipulation and ggplot2 plotting\n  knitr,         # Dynamic report generation and rendering\n  patchwork,     # Combines multiple ggplot2 plots\n  ggthemes,      # Additional themes and visual styles\n  scales,        # Formatting axes, scales, and labels\n  ggtext,        # Rich text formatting in ggplot titles/labels\n  ggalt,         # Dumbbell, lollipop, and other advanced geoms\n  ggridges,      # Ridgeline plots to visualize distributions\n  ggpubr,        # Publication-ready ggplot2 enhancements\n  ggExtra,       # Marginal plots for added insight\n  cowplot,       # Publication-quality figure alignment\n  ggnewscale,    # Allows multiple color/fill scales in one ggplot\n  ggrepel        # Allows\n)\n\n\nLoading the Data and Taking a Glimpse of the Dataset 📂\n\n\nCode\n# Load the dataset\ndf &lt;- read_csv(\"data/respopagesex2024.csv\")\n\n\nThe dataset contains 60,424 rows and 6 columns. Each row represents the count of residents for a specific combination of planning area, subzone, age, sex, and year.\n\n\nCode\nglimpse(df)\n\n\nRows: 60,424\nColumns: 6\n$ PA   &lt;chr&gt; \"Ang Mo Kio\", \"Ang Mo Kio\", \"Ang Mo Kio\", \"Ang Mo Kio\", \"Ang Mo K…\n$ SZ   &lt;chr&gt; \"Ang Mo Kio Town Centre\", \"Ang Mo Kio Town Centre\", \"Ang Mo Kio T…\n$ Age  &lt;chr&gt; \"0\", \"0\", \"1\", \"1\", \"2\", \"2\", \"3\", \"3\", \"4\", \"4\", \"5\", \"5\", \"6\", …\n$ Sex  &lt;chr&gt; \"Males\", \"Females\", \"Males\", \"Females\", \"Males\", \"Females\", \"Male…\n$ Pop  &lt;dbl&gt; 10, 10, 10, 10, 10, 10, 10, 10, 30, 10, 20, 10, 20, 30, 30, 10, 3…\n$ Time &lt;dbl&gt; 2024, 2024, 2024, 2024, 2024, 2024, 2024, 2024, 2024, 2024, 2024,…\n\n\nWrangling, Cleaning & Transformation 🧹\n\n\nCode\ndf &lt;- df %&gt;%\n  mutate(Age = as.integer(Age)) %&gt;%  # Convert to numeric (100+ becomes NA)\n  drop_na(Age)                       # Remove missing values caused by conversion\n\ndf &lt;- df %&gt;%\n  mutate(AgeBand = cut(Age,\n    breaks = c(0, 5, 10, 15, 20, 25, 30, 35, 40, 45, 50, 55,\n               60, 65, 70, 75, 80, 85, 90, 95, 100, Inf),\n    labels = c(\"0-4\", \"5-9\", \"10-14\", \"15-19\", \"20-24\", \"25-29\",\n               \"30-34\", \"35-39\", \"40-44\", \"45-49\", \"50-54\",\n               \"55-59\", \"60-64\", \"65-69\", \"70-74\", \"75-79\",\n               \"80-84\", \"85-89\", \"90-94\", \"95-99\", \"100+\"),\n    right = FALSE))\n\n# For population pyramid (Age-Sex)\npyramid_data &lt;- df %&gt;%\n  group_by(Age, Sex) %&gt;%\n  summarise(Pop = sum(Pop), .groups = \"drop\")\n\n# For top 5 planning areas\ntop5_pa &lt;- df %&gt;%\n  group_by(PA) %&gt;%\n  summarise(Pop = sum(Pop), .groups = \"drop\") %&gt;%\n  slice_max(order_by = Pop, n = 5)\n\ndf &lt;- df %&gt;%\n  mutate(\n    PA = str_trim(str_to_upper(PA)),\n    Region = case_when(\n      PA %in% c(\"BISHAN\", \"BUKIT MERAH\", \"BUKIT TIMAH\", \"CENTRAL AREA\", \"DOWNTOWN CORE\",\n                \"GEYLANG\", \"KALLANG\", \"MARINA EAST\", \"MARINA SOUTH\", \"MUSEUM\", \"NEWTON\",\n                \"NOVENA\", \"ORCHARD\", \"OUTRAM\", \"PAYA LEBAR\", \"QUEENSTOWN\", \"RIVER VALLEY\",\n                \"ROCHOR\", \"SINGAPORE RIVER\", \"SOUTHERN ISLANDS\", \"STRAITS VIEW\", \"TANGLIN\",\n                \"TOA PAYOH\", \"MARINE PARADE\") ~ \"Central\",\n      PA %in% c(\"BEDOK\", \"CHANGI\", \"CHANGI BAY\", \"PASIR RIS\", \"TAMPINES\") ~ \"East\",\n      PA %in% c(\"CENTRAL WATER CATCHMENT\", \"MANDAI\", \"SEMBABWANG\", \"SIMPANG\",\n                \"SUNGEI KADUT\", \"WOODLANDS\", \"YISHUN\", \"SEMBAWANG\") ~ \"North\",\n      PA %in% c(\"ANG MO KIO\", \"HOUGANG\", \"NORTH-EASTERN ISLANDS\", \"PUNGGOL\",\n                \"SELETAR\", \"SENGKANG\", \"SERANGOON\") ~ \"North-East\",\n      PA %in% c(\"BOON LAY\", \"BUKIT BATOK\", \"BUKIT PANJANG\", \"CHOA CHU KANG\",\n                \"CLEMENTI\", \"JURONG EAST\", \"JURONG WEST\", \"LIM CHU KANG\",\n                \"PIONEER\", \"TENGAH\", \"TUAS\", \"WESTERN ISLANDS\",\n                \"WESTERN WATER CATCHMENT\") ~ \"West\",\n      TRUE ~ NA_character_\n    )\n  )\n\ndf_median &lt;- df %&gt;%\n  arrange(Age) %&gt;%\n  mutate(\n    cum_pop = cumsum(Pop),\n    total_pop = sum(Pop)\n  ) %&gt;%\n  filter(cum_pop &gt;= total_pop / 2) %&gt;%\n  slice(1)\n\nmedian_age &lt;- df_median$Age\n\ndf &lt;- df %&gt;%\n  mutate(\n    GenerationBand = case_when(\n      Age &lt;= 24 ~ \"Alpha & Gen Z (0–24)\",\n      Age &lt;= 34 ~ \"Young Adults (25–34)\",\n      Age &lt;= 54 ~ \"Working Adults (35–54)\",\n      Age &lt;= 64 ~ \"Silver Generation (55–64)\",\n      Age &lt;= 74 ~ \"Merdeka Generation (65–74)\",\n      TRUE ~ \"Pioneer Generation (75+)\"\n    ),\n    GenerationBand = factor(GenerationBand, levels = c(\n      \"Alpha & Gen Z (0–24)\", \"Young Adults (25–34)\", \"Working Adults (35–54)\",\n      \"Silver Generation (55–64)\", \"Merdeka Generation (65–74)\", \"Pioneer Generation (75+)\"\n    ))\n  )\n\n\n🔍 Interpretation\nThis interactive scatterplot allows users to:\nIdentify areas with high elderly population shares despite small total populations (e.g., Outram).\nCompare elderly shares across all areas by hovering over each dot.\nUnderstand population pressure points for aging infrastructure and services.\n📌 Conclusion\nDavid’s work is well-designed and informative. With just a few enhancements such as interactivity, annotation, and layout consistency, the overall impact of the visuals can be significantly increased. The proposed makeover demonstrates how a single interactive visual can provide richer engagement while maintaining visual clarity."
  },
  {
    "objectID": "Take-home_Exercise/Take-home_Ex01/Take-home_Ex01-phaseII.html#review-of-peer-submission-david-chiam",
    "href": "Take-home_Exercise/Take-home_Ex01/Take-home_Ex01-phaseII.html#review-of-peer-submission-david-chiam",
    "title": "Take-home_Ex01-phaseII",
    "section": "",
    "text": "refer:https://isss608-davidchiam.netlify.app/take-home_ex/take-home_ex01/take-home_ex01\n\n\n1. Effective Use of Visual Encodings\nDavid effectively applies core visualisation techniques by using mirrored bar charts for population pyramids and boxplots for median age distribution. In particular:\n\nThe mirrored bars in the pyramid chart enable immediate comparison between male and female cohorts.\nThe use of boxplots is apt for showing variability and central tendency (e.g., median age) across planning areas.\nIn the stacked bar chart, gender and age group differences are clearly segmented, leveraging hue and spatial separation.\n\n2. Logical Flow and Visual Hierarchy\nThe visualisation follows a logical and structured flow:\n\nIt begins with a high-level overview (e.g., gender share), then progressively narrows to specific planning area comparisons.\nThis top-down design facilitates cognitive flow and narrative pacing.\nClear section titles and cohesive subplot sequencing enhance usability.\n\n3. Consistent and Minimalist Visual Theme\nDavid’s work maintains high aesthetic discipline:\n\nMuted pastel tones reduce cognitive overload.\nConsistent typography and plot margin spacing lend a polished appearance.\nAxes, titles, and legends are harmonised across charts, which ensures clarity without redundancy.\n\n\n\n\n\n1. Lack of Annotations and Contextual Labels\nWhile David’s charts are clean, they often lack direct data labels or annotations. This limits interpretability:\n\n✅ Fix: The makeover scatterplot adds dynamic labeling for outliers (e.g., Outram with high elderly share), improving insight at-a-glance.\n\n2. Axis and Formatting Inconsistencies\nThere are inconsistencies in axis label units (e.g., some show absolute numbers, others show percentages):\n\n✅ Fix: In our makeover, all values are formatted uniformly using percent_format() and /1000 suffixes for population.\n\n3. Redundant Charts and Missed Insight Opportunities\nSome charts display similar gender breakdowns without revealing new dimensions. At the same time, insightful metrics like the elderly/youth ratio are missing:\n\n✅ Fix: We introduced a derived metric (Elderly_to_Youth) and plotted it against population size and aging ratio, unveiling patterns not covered in the original submission.\n\n\n\n\n\nLoad required packages 📦\n\n\nCode\npacman::p_load(\n  tidyverse,     # Core data manipulation and ggplot2 plotting\n  knitr,         # Dynamic report generation and rendering\n  patchwork,     # Combines multiple ggplot2 plots\n  ggthemes,      # Additional themes and visual styles\n  scales,        # Formatting axes, scales, and labels\n  ggtext,        # Rich text formatting in ggplot titles/labels\n  ggalt,         # Dumbbell, lollipop, and other advanced geoms\n  ggridges,      # Ridgeline plots to visualize distributions\n  ggpubr,        # Publication-ready ggplot2 enhancements\n  ggExtra,       # Marginal plots for added insight\n  cowplot,       # Publication-quality figure alignment\n  ggnewscale,    # Allows multiple color/fill scales in one ggplot\n  ggrepel        # Allows\n)\n\n\nLoading the Data and Taking a Glimpse of the Dataset 📂\n\n\nCode\n# Load the dataset\ndf &lt;- read_csv(\"data/respopagesex2024.csv\")\n\n\nThe dataset contains 60,424 rows and 6 columns. Each row represents the count of residents for a specific combination of planning area, subzone, age, sex, and year.\n\n\nCode\nglimpse(df)\n\n\nRows: 60,424\nColumns: 6\n$ PA   &lt;chr&gt; \"Ang Mo Kio\", \"Ang Mo Kio\", \"Ang Mo Kio\", \"Ang Mo Kio\", \"Ang Mo K…\n$ SZ   &lt;chr&gt; \"Ang Mo Kio Town Centre\", \"Ang Mo Kio Town Centre\", \"Ang Mo Kio T…\n$ Age  &lt;chr&gt; \"0\", \"0\", \"1\", \"1\", \"2\", \"2\", \"3\", \"3\", \"4\", \"4\", \"5\", \"5\", \"6\", …\n$ Sex  &lt;chr&gt; \"Males\", \"Females\", \"Males\", \"Females\", \"Males\", \"Females\", \"Male…\n$ Pop  &lt;dbl&gt; 10, 10, 10, 10, 10, 10, 10, 10, 30, 10, 20, 10, 20, 30, 30, 10, 3…\n$ Time &lt;dbl&gt; 2024, 2024, 2024, 2024, 2024, 2024, 2024, 2024, 2024, 2024, 2024,…\n\n\nWrangling, Cleaning & Transformation 🧹\n\n\nCode\ndf &lt;- df %&gt;%\n  mutate(Age = as.integer(Age)) %&gt;%  # Convert to numeric (100+ becomes NA)\n  drop_na(Age)                       # Remove missing values caused by conversion\n\ndf &lt;- df %&gt;%\n  mutate(AgeBand = cut(Age,\n    breaks = c(0, 5, 10, 15, 20, 25, 30, 35, 40, 45, 50, 55,\n               60, 65, 70, 75, 80, 85, 90, 95, 100, Inf),\n    labels = c(\"0-4\", \"5-9\", \"10-14\", \"15-19\", \"20-24\", \"25-29\",\n               \"30-34\", \"35-39\", \"40-44\", \"45-49\", \"50-54\",\n               \"55-59\", \"60-64\", \"65-69\", \"70-74\", \"75-79\",\n               \"80-84\", \"85-89\", \"90-94\", \"95-99\", \"100+\"),\n    right = FALSE))\n\n# For population pyramid (Age-Sex)\npyramid_data &lt;- df %&gt;%\n  group_by(Age, Sex) %&gt;%\n  summarise(Pop = sum(Pop), .groups = \"drop\")\n\n# For top 5 planning areas\ntop5_pa &lt;- df %&gt;%\n  group_by(PA) %&gt;%\n  summarise(Pop = sum(Pop), .groups = \"drop\") %&gt;%\n  slice_max(order_by = Pop, n = 5)\n\ndf &lt;- df %&gt;%\n  mutate(\n    PA = str_trim(str_to_upper(PA)),\n    Region = case_when(\n      PA %in% c(\"BISHAN\", \"BUKIT MERAH\", \"BUKIT TIMAH\", \"CENTRAL AREA\", \"DOWNTOWN CORE\",\n                \"GEYLANG\", \"KALLANG\", \"MARINA EAST\", \"MARINA SOUTH\", \"MUSEUM\", \"NEWTON\",\n                \"NOVENA\", \"ORCHARD\", \"OUTRAM\", \"PAYA LEBAR\", \"QUEENSTOWN\", \"RIVER VALLEY\",\n                \"ROCHOR\", \"SINGAPORE RIVER\", \"SOUTHERN ISLANDS\", \"STRAITS VIEW\", \"TANGLIN\",\n                \"TOA PAYOH\", \"MARINE PARADE\") ~ \"Central\",\n      PA %in% c(\"BEDOK\", \"CHANGI\", \"CHANGI BAY\", \"PASIR RIS\", \"TAMPINES\") ~ \"East\",\n      PA %in% c(\"CENTRAL WATER CATCHMENT\", \"MANDAI\", \"SEMBABWANG\", \"SIMPANG\",\n                \"SUNGEI KADUT\", \"WOODLANDS\", \"YISHUN\", \"SEMBAWANG\") ~ \"North\",\n      PA %in% c(\"ANG MO KIO\", \"HOUGANG\", \"NORTH-EASTERN ISLANDS\", \"PUNGGOL\",\n                \"SELETAR\", \"SENGKANG\", \"SERANGOON\") ~ \"North-East\",\n      PA %in% c(\"BOON LAY\", \"BUKIT BATOK\", \"BUKIT PANJANG\", \"CHOA CHU KANG\",\n                \"CLEMENTI\", \"JURONG EAST\", \"JURONG WEST\", \"LIM CHU KANG\",\n                \"PIONEER\", \"TENGAH\", \"TUAS\", \"WESTERN ISLANDS\",\n                \"WESTERN WATER CATCHMENT\") ~ \"West\",\n      TRUE ~ NA_character_\n    )\n  )\n\ndf_median &lt;- df %&gt;%\n  arrange(Age) %&gt;%\n  mutate(\n    cum_pop = cumsum(Pop),\n    total_pop = sum(Pop)\n  ) %&gt;%\n  filter(cum_pop &gt;= total_pop / 2) %&gt;%\n  slice(1)\n\nmedian_age &lt;- df_median$Age\n\ndf &lt;- df %&gt;%\n  mutate(\n    GenerationBand = case_when(\n      Age &lt;= 24 ~ \"Alpha & Gen Z (0–24)\",\n      Age &lt;= 34 ~ \"Young Adults (25–34)\",\n      Age &lt;= 54 ~ \"Working Adults (35–54)\",\n      Age &lt;= 64 ~ \"Silver Generation (55–64)\",\n      Age &lt;= 74 ~ \"Merdeka Generation (65–74)\",\n      TRUE ~ \"Pioneer Generation (75+)\"\n    ),\n    GenerationBand = factor(GenerationBand, levels = c(\n      \"Alpha & Gen Z (0–24)\", \"Young Adults (25–34)\", \"Working Adults (35–54)\",\n      \"Silver Generation (55–64)\", \"Merdeka Generation (65–74)\", \"Pioneer Generation (75+)\"\n    ))\n  )\n\n\n🔍 Interpretation\nThis interactive scatterplot allows users to:\nIdentify areas with high elderly population shares despite small total populations (e.g., Outram).\nCompare elderly shares across all areas by hovering over each dot.\nUnderstand population pressure points for aging infrastructure and services.\n📌 Conclusion\nDavid’s work is well-designed and informative. With just a few enhancements such as interactivity, annotation, and layout consistency, the overall impact of the visuals can be significantly increased. The proposed makeover demonstrates how a single interactive visual can provide richer engagement while maintaining visual clarity."
  }
]