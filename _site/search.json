[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "ISSS608 - Visual Analytics",
    "section": "",
    "text": "Welcome to ISSS608\n\n\nA Visual Analytics Journey through Data, Design, and Discovery\n\n\n\n\n✦ Hands-on Exercises\n\nExercise 1\nExercise 2\nExercise 3\nExercise 4\nExercise 5\nExercise 6\n\n\n\n✦ In-class Exercises\n\nIn-class 5\n\n\n\n✦ Take-home Exercises\n\nTake-home 1\nTake-home 1\nTake-home 2\n\n\n\n© 2025 Lucas Luo · Singapore Management University"
  },
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About",
    "section": "",
    "text": "About this site\n\n1 + 1\n\n[1] 2"
  },
  {
    "objectID": "Hands-on_Exercise/Hands-on_Ex01/Hands-on_Ex01.html",
    "href": "Hands-on_Exercise/Hands-on_Ex01/Hands-on_Ex01.html",
    "title": "Hands-on Ex01",
    "section": "",
    "text": "In this chapter, you will learn the basic principles and essential components of ggplot2. At the same time, you will gain hands-on experience on using these components to plot statistical graphics based on the principle of Layered Grammar of Graphics. By then end of this chapter you will be able to apply the essential graphical elements provided by ggplot2 to create elegant and yet functional statistical graphics.\n\n\n\n\n\n\npacman::p_load(tidyverse)\n\n\n\n\n\nexam_data &lt;- read_csv(\"data/Exam_data.csv\")\n\nRows: 322 Columns: 7\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (4): ID, CLASS, GENDER, RACE\ndbl (3): ENGLISH, MATHS, SCIENCE\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\n\n\n\n\nFirst, let us compare how R Graphics, the core graphical functions of Base R and ggplot plot a simple histogram.\n\nR Graphicsggplot2\n\n\n\n# Base R 直方图\nhist(exam_data$MATHS)\n\n\n\n\n\n\n\nlibrary(ggplot2)\n\nggplot(data = exam_data, aes(x = MATHS)) +\n  geom_histogram(\n    bins = 10,\n    boundary = 100,\n    color = \"black\",\n    fill = \"grey\"\n  ) +\n  ggtitle(\"Distribution of Maths scores\")\n\n\n\n\n\n\n\n\n\n\n\n\nggplot(data=exam_data)\n\n\n\n\n\n\n\n\nggplot(data=exam_data, \n       aes(x= MATHS))\n\n\n\n\n\n\n\nGeometric objects are the actual marks we put on a plot. Examples include:\n\ngeom_point for drawing individual points (e.g., a scatter plot)\ngeom_line for drawing lines (e.g., for a line charts)\ngeom_smooth for drawing smoothed lines (e.g., for simple trends or approximations)\ngeom_bar for drawing bars (e.g., for bar charts)\ngeom_histogram for drawing binned values (e.g. a histogram)\ngeom_polygon for drawing arbitrary shapes\ngeom_map for drawing polygons in the shape of a map! (You can access the data to use for these maps by using the map_data() function).\n\n\n\n\nggplot(data=exam_data, aes(x=RACE)) + geom_bar()\n\n\n\n\n\n\n\n\nggplot(data=exam_data, \n       aes(x = MATHS)) +\n  geom_dotplot(dotsize = 0.5)\n\nBin width defaults to 1/30 of the range of the data. Pick better value with\n`binwidth`.\n\n\n\n\n\n\nggplot(data=exam_data, \n       aes(x = MATHS)) +\n  geom_dotplot(binwidth=2.5,         \n               dotsize = 0.5) +      \n  scale_y_continuous(NULL,           \n                     breaks = NULL)  \n\n\n\n\n\n\n\n\nggplot(data=exam_data, \n       aes(x = MATHS)) +\n  geom_histogram()       \n\n`stat_bin()` using `bins = 30`. Pick better value with `binwidth`.\n\n\n\n\n\n1.7.4 Modifying a geometric object by changing geom()\n\nggplot(data=exam_data, \n       aes(x= MATHS)) +\n  geom_histogram(bins=20,            \n                 color=\"black\",      \n                 fill=\"light blue\")  \n\n\n\n\n\n\n\n\nggplot(data=exam_data, \n       aes(x= MATHS, \n           fill = GENDER)) +\n  geom_histogram(bins=20, \n                 color=\"grey30\")\n\n\n\n\n\n\n\n\nggplot(data=exam_data, \n       aes(x = MATHS)) +\n  geom_density()         \n\n\n\nggplot(data=exam_data, \n       aes(x = MATHS, \n           colour = GENDER)) +\n  geom_density()\n\n\n\n\n\n\n\n\nggplot(data=exam_data, \n       aes(y = MATHS,       \n           x= GENDER)) +    \n  geom_boxplot()            \n\n\n\nggplot(data=exam_data, \n       aes(y = MATHS, \n           x= GENDER)) +\n  geom_boxplot(notch=TRUE)\n\n\n\n\n\n\n\n\nggplot(data=exam_data, \n       aes(y = MATHS, \n           x= GENDER)) +\n  geom_violin()\n\n\n\n\n\n\n\n\nggplot(data=exam_data, \n       aes(x= MATHS, \n           y=ENGLISH)) +\n  geom_point()            \n\n\n\n\n\n\n\n\nggplot(data=exam_data, \n       aes(y = MATHS, \n           x= GENDER)) +\n  geom_boxplot() +                    \n  geom_point(position=\"jitter\", \n             size = 0.5)        \n\n\n\n\n\n\n\n\n\nfrequency of values of a variable (bar graph)\n\na mean\na confidence limit\n\nThere are two ways to use these functions:\n\nadd a stat_() function and override the default geom, or\nadd a geom_() function and override the default stat.\n\n\n\n\n\nggplot(data=exam_data, \n       aes(y = MATHS, x= GENDER)) +\n  geom_boxplot()\n\n\n\n\n\n\n\n\nggplot(data=exam_data, \n       aes(y = MATHS, x= GENDER)) +\n  geom_boxplot() +\n  stat_summary(geom = \"point\",       \n               fun = \"mean\",         \n               colour =\"red\",        \n               size=4)               \n\n\n\n\n\n\n\n\nggplot(data=exam_data, \n       aes(y = MATHS, x= GENDER)) +\n  geom_boxplot() +\n  geom_point(stat=\"summary\",        \n             fun=\"mean\",           \n             colour=\"red\",          \n             size=4)          \n\n\n\n\n\n\n\n\nggplot(data=exam_data, \n       aes(x= MATHS, y=ENGLISH)) +\n  geom_point() +\n  geom_smooth(size=0.5)\n\nWarning: Using `size` aesthetic for lines was deprecated in ggplot2 3.4.0.\nℹ Please use `linewidth` instead.\n\n\n`geom_smooth()` using method = 'loess' and formula = 'y ~ x'\n\n\n\n\nggplot(data=exam_data, \n       aes(x= MATHS, \n           y=ENGLISH)) +\n  geom_point() +\n  geom_smooth(method=lm, \n              linewidth=0.5)\n\n`geom_smooth()` using formula = 'y ~ x'\n\n\n\n\n\n\n\n\n\n\n\n\nggplot(data=exam_data, \n       aes(x= MATHS)) +\n  geom_histogram(bins=20) +\n    facet_wrap(~ CLASS)\n\n\n\n\n\n\n\n\nggplot(data=exam_data, \n       aes(x= MATHS)) +\n  geom_histogram(bins=20) +\n    facet_grid(~ CLASS)\n\n\n\n\n\n\n\n\n\n\n\nggplot(data=exam_data, \n       aes(x=RACE)) +\n  geom_bar()\n\n\n\nggplot(data=exam_data, \n       aes(x=RACE)) +\n  geom_bar() +\n  coord_flip()\n\n\n\n\n\n\n\n\nggplot(data=exam_data, \n       aes(x= MATHS, y=ENGLISH)) +\n  geom_point() +\n  geom_smooth(method=lm, size=0.5)\n\n`geom_smooth()` using formula = 'y ~ x'\n\n\n\n\n\n\n\n\n\nThemes control elements of the graph not related to the data. For example:\n\nbackground colour\nsize of fonts\ngridlines\ncolour of labels\n\n\n\n\nggplot(data=exam_data, \n       aes(x=RACE)) +\n  geom_bar() +\n  coord_flip() +\n  theme_gray()"
  },
  {
    "objectID": "Hands-on_Exercise/Hands-on_Ex01/Hands-on_Ex01.html#learning-outcome",
    "href": "Hands-on_Exercise/Hands-on_Ex01/Hands-on_Ex01.html#learning-outcome",
    "title": "Hands-on Ex01",
    "section": "",
    "text": "In this chapter, you will learn the basic principles and essential components of ggplot2. At the same time, you will gain hands-on experience on using these components to plot statistical graphics based on the principle of Layered Grammar of Graphics. By then end of this chapter you will be able to apply the essential graphical elements provided by ggplot2 to create elegant and yet functional statistical graphics."
  },
  {
    "objectID": "Hands-on_Exercise/Hands-on_Ex01/Hands-on_Ex01.html#getting-started",
    "href": "Hands-on_Exercise/Hands-on_Ex01/Hands-on_Ex01.html#getting-started",
    "title": "Hands-on Ex01",
    "section": "",
    "text": "pacman::p_load(tidyverse)\n\n\n\n\n\nexam_data &lt;- read_csv(\"data/Exam_data.csv\")\n\nRows: 322 Columns: 7\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (4): ID, CLASS, GENDER, RACE\ndbl (3): ENGLISH, MATHS, SCIENCE\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\n\n\n\n\nFirst, let us compare how R Graphics, the core graphical functions of Base R and ggplot plot a simple histogram.\n\nR Graphicsggplot2\n\n\n\n# Base R 直方图\nhist(exam_data$MATHS)\n\n\n\n\n\n\n\nlibrary(ggplot2)\n\nggplot(data = exam_data, aes(x = MATHS)) +\n  geom_histogram(\n    bins = 10,\n    boundary = 100,\n    color = \"black\",\n    fill = \"grey\"\n  ) +\n  ggtitle(\"Distribution of Maths scores\")"
  },
  {
    "objectID": "Hands-on_Exercise/Hands-on_Ex01/Hands-on_Ex01.html#essential-grammatical-elements-in-ggplot2-data",
    "href": "Hands-on_Exercise/Hands-on_Ex01/Hands-on_Ex01.html#essential-grammatical-elements-in-ggplot2-data",
    "title": "Hands-on Ex01",
    "section": "",
    "text": "ggplot(data=exam_data)"
  },
  {
    "objectID": "Hands-on_Exercise/Hands-on_Ex01/Hands-on_Ex01.html#essential-grammatical-elements-in-ggplot2",
    "href": "Hands-on_Exercise/Hands-on_Ex01/Hands-on_Ex01.html#essential-grammatical-elements-in-ggplot2",
    "title": "Hands-on Ex01",
    "section": "",
    "text": "ggplot(data=exam_data, \n       aes(x= MATHS))"
  },
  {
    "objectID": "Hands-on_Exercise/Hands-on_Ex01/Hands-on_Ex01.html#essential-grammatical-elements-in-ggplot2-geom",
    "href": "Hands-on_Exercise/Hands-on_Ex01/Hands-on_Ex01.html#essential-grammatical-elements-in-ggplot2-geom",
    "title": "Hands-on Ex01",
    "section": "",
    "text": "Geometric objects are the actual marks we put on a plot. Examples include:\n\ngeom_point for drawing individual points (e.g., a scatter plot)\ngeom_line for drawing lines (e.g., for a line charts)\ngeom_smooth for drawing smoothed lines (e.g., for simple trends or approximations)\ngeom_bar for drawing bars (e.g., for bar charts)\ngeom_histogram for drawing binned values (e.g. a histogram)\ngeom_polygon for drawing arbitrary shapes\ngeom_map for drawing polygons in the shape of a map! (You can access the data to use for these maps by using the map_data() function).\n\n\n\n\nggplot(data=exam_data, aes(x=RACE)) + geom_bar()\n\n\n\n\n\n\n\n\nggplot(data=exam_data, \n       aes(x = MATHS)) +\n  geom_dotplot(dotsize = 0.5)\n\nBin width defaults to 1/30 of the range of the data. Pick better value with\n`binwidth`.\n\n\n\n\n\n\nggplot(data=exam_data, \n       aes(x = MATHS)) +\n  geom_dotplot(binwidth=2.5,         \n               dotsize = 0.5) +      \n  scale_y_continuous(NULL,           \n                     breaks = NULL)  \n\n\n\n\n\n\n\n\nggplot(data=exam_data, \n       aes(x = MATHS)) +\n  geom_histogram()       \n\n`stat_bin()` using `bins = 30`. Pick better value with `binwidth`.\n\n\n\n\n\n1.7.4 Modifying a geometric object by changing geom()\n\nggplot(data=exam_data, \n       aes(x= MATHS)) +\n  geom_histogram(bins=20,            \n                 color=\"black\",      \n                 fill=\"light blue\")  \n\n\n\n\n\n\n\n\nggplot(data=exam_data, \n       aes(x= MATHS, \n           fill = GENDER)) +\n  geom_histogram(bins=20, \n                 color=\"grey30\")\n\n\n\n\n\n\n\n\nggplot(data=exam_data, \n       aes(x = MATHS)) +\n  geom_density()         \n\n\n\nggplot(data=exam_data, \n       aes(x = MATHS, \n           colour = GENDER)) +\n  geom_density()\n\n\n\n\n\n\n\n\nggplot(data=exam_data, \n       aes(y = MATHS,       \n           x= GENDER)) +    \n  geom_boxplot()            \n\n\n\nggplot(data=exam_data, \n       aes(y = MATHS, \n           x= GENDER)) +\n  geom_boxplot(notch=TRUE)\n\n\n\n\n\n\n\n\nggplot(data=exam_data, \n       aes(y = MATHS, \n           x= GENDER)) +\n  geom_violin()\n\n\n\n\n\n\n\n\nggplot(data=exam_data, \n       aes(x= MATHS, \n           y=ENGLISH)) +\n  geom_point()            \n\n\n\n\n\n\n\n\nggplot(data=exam_data, \n       aes(y = MATHS, \n           x= GENDER)) +\n  geom_boxplot() +                    \n  geom_point(position=\"jitter\", \n             size = 0.5)"
  },
  {
    "objectID": "Hands-on_Exercise/Hands-on_Ex01/Hands-on_Ex01.html#essential-grammatical-elements-in-ggplot2-stat",
    "href": "Hands-on_Exercise/Hands-on_Ex01/Hands-on_Ex01.html#essential-grammatical-elements-in-ggplot2-stat",
    "title": "Hands-on Ex01",
    "section": "",
    "text": "frequency of values of a variable (bar graph)\n\na mean\na confidence limit\n\nThere are two ways to use these functions:\n\nadd a stat_() function and override the default geom, or\nadd a geom_() function and override the default stat.\n\n\n\n\n\nggplot(data=exam_data, \n       aes(y = MATHS, x= GENDER)) +\n  geom_boxplot()\n\n\n\n\n\n\n\n\nggplot(data=exam_data, \n       aes(y = MATHS, x= GENDER)) +\n  geom_boxplot() +\n  stat_summary(geom = \"point\",       \n               fun = \"mean\",         \n               colour =\"red\",        \n               size=4)               \n\n\n\n\n\n\n\n\nggplot(data=exam_data, \n       aes(y = MATHS, x= GENDER)) +\n  geom_boxplot() +\n  geom_point(stat=\"summary\",        \n             fun=\"mean\",           \n             colour=\"red\",          \n             size=4)          \n\n\n\n\n\n\n\n\nggplot(data=exam_data, \n       aes(x= MATHS, y=ENGLISH)) +\n  geom_point() +\n  geom_smooth(size=0.5)\n\nWarning: Using `size` aesthetic for lines was deprecated in ggplot2 3.4.0.\nℹ Please use `linewidth` instead.\n\n\n`geom_smooth()` using method = 'loess' and formula = 'y ~ x'\n\n\n\n\nggplot(data=exam_data, \n       aes(x= MATHS, \n           y=ENGLISH)) +\n  geom_point() +\n  geom_smooth(method=lm, \n              linewidth=0.5)\n\n`geom_smooth()` using formula = 'y ~ x'"
  },
  {
    "objectID": "Hands-on_Exercise/Hands-on_Ex01/Hands-on_Ex01.html#essential-grammatical-elements-in-ggplot2-facets",
    "href": "Hands-on_Exercise/Hands-on_Ex01/Hands-on_Ex01.html#essential-grammatical-elements-in-ggplot2-facets",
    "title": "Hands-on Ex01",
    "section": "",
    "text": "ggplot(data=exam_data, \n       aes(x= MATHS)) +\n  geom_histogram(bins=20) +\n    facet_wrap(~ CLASS)\n\n\n\n\n\n\n\n\nggplot(data=exam_data, \n       aes(x= MATHS)) +\n  geom_histogram(bins=20) +\n    facet_grid(~ CLASS)"
  },
  {
    "objectID": "Hands-on_Exercise/Hands-on_Ex01/Hands-on_Ex01.html#essential-grammatical-elements-in-ggplot2-coordinates",
    "href": "Hands-on_Exercise/Hands-on_Ex01/Hands-on_Ex01.html#essential-grammatical-elements-in-ggplot2-coordinates",
    "title": "Hands-on Ex01",
    "section": "",
    "text": "ggplot(data=exam_data, \n       aes(x=RACE)) +\n  geom_bar()\n\n\n\nggplot(data=exam_data, \n       aes(x=RACE)) +\n  geom_bar() +\n  coord_flip()\n\n\n\n\n\n\n\n\nggplot(data=exam_data, \n       aes(x= MATHS, y=ENGLISH)) +\n  geom_point() +\n  geom_smooth(method=lm, size=0.5)\n\n`geom_smooth()` using formula = 'y ~ x'"
  },
  {
    "objectID": "Hands-on_Exercise/Hands-on_Ex01/Hands-on_Ex01.html#essential-grammatical-elements-in-ggplot2-themes",
    "href": "Hands-on_Exercise/Hands-on_Ex01/Hands-on_Ex01.html#essential-grammatical-elements-in-ggplot2-themes",
    "title": "Hands-on Ex01",
    "section": "",
    "text": "Themes control elements of the graph not related to the data. For example:\n\nbackground colour\nsize of fonts\ngridlines\ncolour of labels\n\n\n\n\nggplot(data=exam_data, \n       aes(x=RACE)) +\n  geom_bar() +\n  coord_flip() +\n  theme_gray()"
  },
  {
    "objectID": "Hands-on_Exercise/Hands-on_Ex02/Hands-on_Ex02.html",
    "href": "Hands-on_Exercise/Hands-on_Ex02/Hands-on_Ex02.html",
    "title": "Hands-on Ex02",
    "section": "",
    "text": "In this chapter, you will be introduced to several ggplot2 extensions for creating more elegant and effective statistical graphics. By the end of this exercise, you will be able to:\n\ncontrol the placement of annotation on a graph by using functions provided in ggrepel package,\ncreate professional publication quality figure by using functions provided in ggthemes and hrbrthemes packages,\nplot composite figure by combining ggplot2 graphs by using patchwork package.\n\n\n\n\n\n\n\npacman::p_load(ggrepel, patchwork, \n               ggthemes, hrbrthemes,\n               tidyverse) \n\n\n\n\n\nexam_data &lt;- read_csv(\"data/Exam_data.csv\")\n\nRows: 322 Columns: 7\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (4): ID, CLASS, GENDER, RACE\ndbl (3): ENGLISH, MATHS, SCIENCE\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\n\nThe categorical attributes are: ID, CLASS, GENDER and RACE. The continuous attributes are: MATHS, ENGLISH and SCIENCE.\n\n\n\n\nOne of the challenge in plotting statistical graph is annotation, especially with large number of data points.\n\nThe plotThe code\n\n\n\n\nWarning: Using `size` aesthetic for lines was deprecated in ggplot2 3.4.0.\nℹ Please use `linewidth` instead.\n\n\n`geom_smooth()` using formula = 'y ~ x'\n\n\nWarning: ggrepel: 307 unlabeled data points (too many overlaps). Consider\nincreasing max.overlaps\n\n\n\n\n\n\n\n\nggplot(data = exam_data, aes(x = MATHS, y = ENGLISH)) + geom_point() + geom_smooth(method = \"lm\", size = 0.5) + geom_label_repel(aes(label = ID), size = 2.5) + coord_cartesian(xlim = c(0, 100), ylim = c(0, 100)) + ggtitle(\"English scores versus Maths scores for Primary 3\")\n\n\n\n\n\n\n\nThe plotThe code\n\n\n\n\n`geom_smooth()` using formula = 'y ~ x'\n\n\nWarning: ggrepel: 317 unlabeled data points (too many overlaps). Consider\nincreasing max.overlaps\n\n\n\n\n\n\n\n\nggplot(data=exam_data, aes(x= MATHS, y=ENGLISH)) + geom_point() + geom_smooth(method=lm, size=0.5) +\\\ngeom_label_repel(aes(label = ID), fontface = \"bold\") + coord_cartesian(xlim=c(0,100), ylim=c(0,100)) + ggtitle(\"English scores versus Maths scores for Primary 3\")\n\n\n\n\n\n\n\n\n\nThe plotThe code\n\n\n\n\n\n\n\n\n\n\nggplot(data=exam_data, aes(x = MATHS)) + geom_histogram(bins=20, boundary = 100, color=\"grey25\", fill=\"grey90\") + theme_gray() + ggtitle(\"Distribution of Maths scores\")\n\n\n\n\n\n\n\nThe plotThe code\n\n\n\n\n\n\n\n\n\n\nggplot(data=exam_data, aes(x = MATHS)) + geom_histogram(bins=20, boundary = 100, color=\"grey25\", fill=\"grey90\") + ggtitle(\"Distribution of Maths scores\") + theme_economist()\n\n\n\n\n\n\n\n\nThe plotThe code\n\n\n\n\n\n\n\n\n\n\nggplot(data=exam_data, aes(x = MATHS)) + geom_histogram(bins=20, boundary = 100, color=\"grey25\", fill=\"grey90\") + ggtitle(\"Distribution of Maths scores\") + theme_ipsum()\n\n\n\n\n\nThe plotThe code\n\n\n\n\n\n\n\n\n\n\nggplot(data=exam_data, aes(x = MATHS)) + geom_histogram(bins=20, boundary = 100, color=\"grey25\", fill=\"grey90\") + ggtitle(\"Distribution of Maths scores\") + theme_ipsum(axis_title_size = 18, base_size = 15, grid = \"Y\")\n\n\n\n\n\n\n\n\n\nThe plotThe code\n\n\n\n\n\n\n\n\n\n\np1 &lt;- ggplot(data=exam_data, aes(x = MATHS)) + geom_histogram(bins=20, boundary = 100, color=\"grey25\", fill=\"grey90\") + coord_cartesian(xlim=c(0,100)) + ggtitle(\"Distribution of Maths scores\")\n\n\n\n\nNext\n\nThe plotThe code\n\n\n\n\n\n\n\n\n\n\np2 &lt;- ggplot(data=exam_data, aes(x = ENGLISH)) + geom_histogram(bins=20, boundary = 100, color=\"grey25\", fill=\"grey90\") + coord_cartesian(xlim=c(0,100)) + ggtitle(\"Distribution of English scores\")\n\n\n\n\n\nThe plotThe code\n\n\n\n\n`geom_smooth()` using formula = 'y ~ x'\n\n\n\n\n\n\n\n\np3 &lt;- ggplot(data=exam_data, aes(x= MATHS, y=ENGLISH)) + geom_point() + geom_smooth(method=lm, size=0.5) +\ncoord_cartesian(xlim=c(0,100), ylim=c(0,100)) + ggtitle(\"English scores versus Maths scores for Primary 3\")\n\n\n\n\n\n\nThere are several ggplot2 extension’s functions support the needs to prepare composite figure by combining several graphs such as grid.arrange() of gridExtra package and plot_grid() of cowplot package. In this section, I am going to shared with you an ggplot2 extension called patchwork which is specially designed for combining separate ggplot2 graphs into a single figure.\nPatchwork package has a very simple syntax where we can create layouts super easily. Here’s the general syntax that combines:\n\nTwo-Column Layout using the Plus Sign +.\nParenthesis () to create a subplot group.\nTwo-Row Layout using the Division Sign /\n\n\n\n\n\nThe plotThe code\n\n\n\n\n\n\n\n\n\n\np1 + p2\n\n\n\n\n\n\n\n\nThe plotThe code\n\n\n\n\n`geom_smooth()` using formula = 'y ~ x'\n\n\n\n\n\n\n\n\n(p1 / p2) | p3\n\n\n\n\n\n\n\n\nThe plotThe code\n\n\n\n\n`geom_smooth()` using formula = 'y ~ x'\n\n\n\n\n\n\n\n\n((p1 / p2) \\| p3) + plot_annotation(tag_levels = 'I')\n\n\n\n\n\n\n\n\nThe plotThe code\n\n\n\n\n`geom_smooth()` using formula = 'y ~ x'\n\n\n\n\n\n\n\n\np3 + inset_element(p2, left = 0.02, bottom = 0.7, right = 0.5, top = 1)\n\n\n\n\n\n\n\n\nThe plotThe code\n\n\n\n\n`geom_smooth()` using formula = 'y ~ x'\n\n\n\n\n\n\n\n\npatchwork \\&lt;- (p1 / p2) \\| p3 patchwork & theme_economist()"
  },
  {
    "objectID": "Hands-on_Exercise/Hands-on_Ex02/Hands-on_Ex02.html#overview",
    "href": "Hands-on_Exercise/Hands-on_Ex02/Hands-on_Ex02.html#overview",
    "title": "Hands-on Ex02",
    "section": "",
    "text": "In this chapter, you will be introduced to several ggplot2 extensions for creating more elegant and effective statistical graphics. By the end of this exercise, you will be able to:\n\ncontrol the placement of annotation on a graph by using functions provided in ggrepel package,\ncreate professional publication quality figure by using functions provided in ggthemes and hrbrthemes packages,\nplot composite figure by combining ggplot2 graphs by using patchwork package."
  },
  {
    "objectID": "Hands-on_Exercise/Hands-on_Ex02/Hands-on_Ex02.html#getting-started",
    "href": "Hands-on_Exercise/Hands-on_Ex02/Hands-on_Ex02.html#getting-started",
    "title": "Hands-on Ex02",
    "section": "",
    "text": "pacman::p_load(ggrepel, patchwork, \n               ggthemes, hrbrthemes,\n               tidyverse) \n\n\n\n\n\nexam_data &lt;- read_csv(\"data/Exam_data.csv\")\n\nRows: 322 Columns: 7\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (4): ID, CLASS, GENDER, RACE\ndbl (3): ENGLISH, MATHS, SCIENCE\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\n\nThe categorical attributes are: ID, CLASS, GENDER and RACE. The continuous attributes are: MATHS, ENGLISH and SCIENCE."
  },
  {
    "objectID": "Hands-on_Exercise/Hands-on_Ex02/Hands-on_Ex02.html#beyond-ggplot2-annotation-ggrepel",
    "href": "Hands-on_Exercise/Hands-on_Ex02/Hands-on_Ex02.html#beyond-ggplot2-annotation-ggrepel",
    "title": "Hands-on Ex02",
    "section": "",
    "text": "One of the challenge in plotting statistical graph is annotation, especially with large number of data points.\n\nThe plotThe code\n\n\n\n\nWarning: Using `size` aesthetic for lines was deprecated in ggplot2 3.4.0.\nℹ Please use `linewidth` instead.\n\n\n`geom_smooth()` using formula = 'y ~ x'\n\n\nWarning: ggrepel: 307 unlabeled data points (too many overlaps). Consider\nincreasing max.overlaps\n\n\n\n\n\n\n\n\nggplot(data = exam_data, aes(x = MATHS, y = ENGLISH)) + geom_point() + geom_smooth(method = \"lm\", size = 0.5) + geom_label_repel(aes(label = ID), size = 2.5) + coord_cartesian(xlim = c(0, 100), ylim = c(0, 100)) + ggtitle(\"English scores versus Maths scores for Primary 3\")\n\n\n\n\n\n\n\nThe plotThe code\n\n\n\n\n`geom_smooth()` using formula = 'y ~ x'\n\n\nWarning: ggrepel: 317 unlabeled data points (too many overlaps). Consider\nincreasing max.overlaps\n\n\n\n\n\n\n\n\nggplot(data=exam_data, aes(x= MATHS, y=ENGLISH)) + geom_point() + geom_smooth(method=lm, size=0.5) +\\\ngeom_label_repel(aes(label = ID), fontface = \"bold\") + coord_cartesian(xlim=c(0,100), ylim=c(0,100)) + ggtitle(\"English scores versus Maths scores for Primary 3\")"
  },
  {
    "objectID": "Hands-on_Exercise/Hands-on_Ex02/Hands-on_Ex02.html#beyond-ggplot2-themes",
    "href": "Hands-on_Exercise/Hands-on_Ex02/Hands-on_Ex02.html#beyond-ggplot2-themes",
    "title": "Hands-on Ex02",
    "section": "",
    "text": "The plotThe code\n\n\n\n\n\n\n\n\n\n\nggplot(data=exam_data, aes(x = MATHS)) + geom_histogram(bins=20, boundary = 100, color=\"grey25\", fill=\"grey90\") + theme_gray() + ggtitle(\"Distribution of Maths scores\")\n\n\n\n\n\n\n\nThe plotThe code\n\n\n\n\n\n\n\n\n\n\nggplot(data=exam_data, aes(x = MATHS)) + geom_histogram(bins=20, boundary = 100, color=\"grey25\", fill=\"grey90\") + ggtitle(\"Distribution of Maths scores\") + theme_economist()\n\n\n\n\n\n\n\n\nThe plotThe code\n\n\n\n\n\n\n\n\n\n\nggplot(data=exam_data, aes(x = MATHS)) + geom_histogram(bins=20, boundary = 100, color=\"grey25\", fill=\"grey90\") + ggtitle(\"Distribution of Maths scores\") + theme_ipsum()\n\n\n\n\n\nThe plotThe code\n\n\n\n\n\n\n\n\n\n\nggplot(data=exam_data, aes(x = MATHS)) + geom_histogram(bins=20, boundary = 100, color=\"grey25\", fill=\"grey90\") + ggtitle(\"Distribution of Maths scores\") + theme_ipsum(axis_title_size = 18, base_size = 15, grid = \"Y\")"
  },
  {
    "objectID": "Hands-on_Exercise/Hands-on_Ex02/Hands-on_Ex02.html#beyond-single-graph",
    "href": "Hands-on_Exercise/Hands-on_Ex02/Hands-on_Ex02.html#beyond-single-graph",
    "title": "Hands-on Ex02",
    "section": "",
    "text": "The plotThe code\n\n\n\n\n\n\n\n\n\n\np1 &lt;- ggplot(data=exam_data, aes(x = MATHS)) + geom_histogram(bins=20, boundary = 100, color=\"grey25\", fill=\"grey90\") + coord_cartesian(xlim=c(0,100)) + ggtitle(\"Distribution of Maths scores\")\n\n\n\n\nNext\n\nThe plotThe code\n\n\n\n\n\n\n\n\n\n\np2 &lt;- ggplot(data=exam_data, aes(x = ENGLISH)) + geom_histogram(bins=20, boundary = 100, color=\"grey25\", fill=\"grey90\") + coord_cartesian(xlim=c(0,100)) + ggtitle(\"Distribution of English scores\")\n\n\n\n\n\nThe plotThe code\n\n\n\n\n`geom_smooth()` using formula = 'y ~ x'\n\n\n\n\n\n\n\n\np3 &lt;- ggplot(data=exam_data, aes(x= MATHS, y=ENGLISH)) + geom_point() + geom_smooth(method=lm, size=0.5) +\ncoord_cartesian(xlim=c(0,100), ylim=c(0,100)) + ggtitle(\"English scores versus Maths scores for Primary 3\")\n\n\n\n\n\n\nThere are several ggplot2 extension’s functions support the needs to prepare composite figure by combining several graphs such as grid.arrange() of gridExtra package and plot_grid() of cowplot package. In this section, I am going to shared with you an ggplot2 extension called patchwork which is specially designed for combining separate ggplot2 graphs into a single figure.\nPatchwork package has a very simple syntax where we can create layouts super easily. Here’s the general syntax that combines:\n\nTwo-Column Layout using the Plus Sign +.\nParenthesis () to create a subplot group.\nTwo-Row Layout using the Division Sign /\n\n\n\n\n\nThe plotThe code\n\n\n\n\n\n\n\n\n\n\np1 + p2\n\n\n\n\n\n\n\n\nThe plotThe code\n\n\n\n\n`geom_smooth()` using formula = 'y ~ x'\n\n\n\n\n\n\n\n\n(p1 / p2) | p3\n\n\n\n\n\n\n\n\nThe plotThe code\n\n\n\n\n`geom_smooth()` using formula = 'y ~ x'\n\n\n\n\n\n\n\n\n((p1 / p2) \\| p3) + plot_annotation(tag_levels = 'I')\n\n\n\n\n\n\n\n\nThe plotThe code\n\n\n\n\n`geom_smooth()` using formula = 'y ~ x'\n\n\n\n\n\n\n\n\np3 + inset_element(p2, left = 0.02, bottom = 0.7, right = 0.5, top = 1)\n\n\n\n\n\n\n\n\nThe plotThe code\n\n\n\n\n`geom_smooth()` using formula = 'y ~ x'\n\n\n\n\n\n\n\n\npatchwork \\&lt;- (p1 / p2) \\| p3 patchwork & theme_economist()"
  },
  {
    "objectID": "Hands-on_Exercise/Hands-on_Ex03/Hands-on_Ex03.html",
    "href": "Hands-on_Exercise/Hands-on_Ex03/Hands-on_Ex03.html",
    "title": "Hands-on_Ex03",
    "section": "",
    "text": "The following content is created by following the tutorial on this chapter.\n\n\n\n\nggiraph for making ‘ggplot’ graphics interactive.\nplotly, R library for plotting interactive statistical graphs.\nDT provides an R interface to the JavaScript library DataTables that create interactive table on html page.\ntidyverse, a family of modern R packages specially designed to support data science, analysis and communication task including creating static statistical graphs.\npatchwork for combining multiple ggplot2 graphs into one figure.\n\n\n\nCode\npacman::p_load(ggiraph, plotly, \n               patchwork, DT, tidyverse) \n\n\n\n\n\n\n\nCode\nexam_data &lt;- read_csv(\"data/Exam_data.csv\")\n\n\n\n\n\n\n\n\nUsing TooltipDisplaying multiple informationCustomising Tooltip style\n\n\nBy hovering the mouse pointer on an data point of interest, the student’s ID will be displayed.\n\n\nCode\n# Step 1: an interactive version of ggplot2 geom (i.e. geom_dotplot_interactive()) will be used to create the basic graph.\n\np &lt;- ggplot(data = exam_data,\n            aes(x = MATHS)) +\n  geom_dotplot_interactive(\n    aes(tooltip = ID),  # Here's the tooltip\n    stackgroups = TRUE,\n    binwidth = 1,\n    method = \"histodot\") +\n  scale_y_continuous(NULL,\n                     breaks = NULL)\n\n# Step 2: Girafe() will be used to generate an svg object to be displayed on an html page.\ngirafe(\n  ggobj = p,\n  width_svg = 6,\n  height_svg = 6*0.618\n)\n\n\n\n\n\n\n\n\nBy hovering the mouse pointer on an data point of interest, the student’s ID will be displayed.\n\n\nCode\n# Step 1: Creating a new column in the dataset to incorporate the tool tip information\nexam_data$tooltip &lt;- c(paste0(\n  \"Name = \", exam_data$ID,\n  \"\\n Class = \", exam_data$CLASS\n))\n\n# Step 2: Create an interactive version of ggplot2 geom.\np &lt;- ggplot(data = exam_data,\n            aes(x = MATHS)) +\n  geom_dotplot_interactive(\n    aes(tooltip = exam_data$tooltip),  # Here's the tooltip\n    stackgroups = TRUE,\n    binwidth = 1,\n    method = \"histodot\") +\n  scale_y_continuous(NULL,\n                     breaks = NULL)\n\n# Step 3: Generate an svg object to be displayed on an html page.\ngirafe(\n  ggobj = p,\n  width_svg = 6,\n  height_svg = 6*0.618\n)\n\n\n\n\n\n\n\n\nThis changes the tooltip from a black background + white text to a white background + black, bold text.\n\n\nCode\n# Step 1: Define tooltip CSS style\ntooltip_css &lt;- \"background-color:white;\nfont-style:bold; color:black;\"\n\n# Step 2: Create an interactive version of ggplot2 geom.\np &lt;- ggplot(data = exam_data,\n            aes(x = MATHS)) +\n  geom_dotplot_interactive(\n    aes(tooltip = ID),  # Here's the tooltip\n    stackgroups = TRUE,\n    binwidth = 1,\n    method = \"histodot\") +\n  scale_y_continuous(NULL,\n                     breaks = NULL)\n\n# Step 3: Generate an svg object to be displayed on an html page.\ngirafe(\n  ggobj = p,\n  width_svg = 6,\n  height_svg = 6*0.618,\n  options = list(  \n    opts_tooltip(\n      css = tooltip_css  # The tooltip css is incorporated here\n    )\n  )\n)\n\n\n\n\n\n\n\n\n\nCode chunk below shows an advanced way to customise tooltip. In this example, a function is used to compute 90% confident interval of the mean. The derived statistics are then displayed in the tooltip.\n\n\nCode\ntooltip &lt;- function(y, ymax, accuracy = .01) {\n  mean &lt;- scales::number(y, accuracy = accuracy)\n  sem &lt;- scales::number(ymax - y, accuracy = accuracy)\n  paste(\"Mean maths scores:\", mean, \"+/-\", sem)\n}\n\ngg_point &lt;- ggplot(data=exam_data, \n                   aes(x = RACE),\n) +\n  stat_summary(aes(y = MATHS, \n                   tooltip = after_stat(  \n                     tooltip(y, ymax))),  \n    fun.data = \"mean_se\", \n    geom = GeomInteractiveCol,  \n    fill = \"light blue\"\n  ) +\n  stat_summary(aes(y = MATHS),\n    fun.data = mean_se,\n    geom = \"errorbar\", width = 0.2, size = 0.2\n  )\n\ngirafe(ggobj = gg_point,\n       width_svg = 8,\n       height_svg = 8*0.618)\n\n\n\n\n\n\n\n\n\n\nHover effectStyling hover effect\n\n\nElements associated with a data_id (i.e CLASS) will be highlighted upon mouse over.\n\n\nCode\np &lt;- ggplot(data=exam_data, \n       aes(x = MATHS)) +\n  geom_dotplot_interactive(           \n    aes(data_id = CLASS),             \n    stackgroups = TRUE,               \n    binwidth = 1,                        \n    method = \"histodot\") +               \n  scale_y_continuous(NULL,               \n                     breaks = NULL)\ngirafe(                                  \n  ggobj = p,                             \n  width_svg = 6,                         \n  height_svg = 6*0.618                      \n)                                        \n\n\n\n\n\n\n\n\nCss codes are used to change the highlighting effect.\n\n\nCode\np &lt;- ggplot(data=exam_data, \n       aes(x = MATHS)) +\n  geom_dotplot_interactive(              \n    aes(data_id = CLASS),              \n    stackgroups = TRUE,                  \n    binwidth = 1,                        \n    method = \"histodot\") +               \n  scale_y_continuous(NULL,               \n                     breaks = NULL)\ngirafe(                                  \n  ggobj = p,                             \n  width_svg = 6,                         \n  height_svg = 6*0.618,\n  options = list(                        \n    opts_hover(css = \"fill: #202020;\"),  \n    opts_hover_inv(css = \"opacity:0.2;\") \n  )                                        \n)                                                                         \n\n\n\n\n\n\n\n\n\n\n\n\nThe code chunk below combines what we have learnt so far - the tooltip + hover effect.\n\n\nCode\np &lt;- ggplot(data = exam_data, \n       aes(x = MATHS)) +\n  geom_dotplot_interactive(              \n    aes(tooltip = CLASS, \n        data_id = CLASS),              \n    stackgroups = TRUE,                  \n    binwidth = 1,                        \n    method = \"histodot\") +               \n  scale_y_continuous(NULL,               \n                     breaks = NULL)\ngirafe(                                  \n  ggobj = p,                             \n  width_svg = 6,                         \n  height_svg = 6*0.618,\n  options = list(                        \n    opts_hover(css = \"fill: #202020;\"),  \n    opts_hover_inv(css = \"opacity:0.2;\") \n  )                                        \n)            \n\n\n\n\n\n\n\n\n\nonclick argument of ggiraph provides hotlink interactivity on the web. Interactivity: Web document link with a data object will be displayed on the web browser upon mouse click.\n\n\nCode\nexam_data$onclick &lt;- sprintf(\"window.open(\\\"%s%s\\\")\",\n\"https://www.moe.gov.sg/schoolfinder?journey=Primary%20school\",\nas.character(exam_data$ID))\n\np &lt;- ggplot(data = exam_data, \n       aes(x = MATHS)) +\n  geom_dotplot_interactive(              \n    aes(onclick = onclick),              \n    stackgroups = TRUE,                  \n    binwidth = 1,                        \n    method = \"histodot\") +               \n  scale_y_continuous(NULL,               \n                     breaks = NULL)\ngirafe(                                  \n  ggobj = p,                             \n  width_svg = 6,                         \n  height_svg = 6*0.618)                                   \n\n\n\n\n\n\n\n\n\nCoordinated multiple views methods has been implemented in the data visualisation below. Notice that when a data point of one of the dotplot is selected, the corresponding data point ID on the second data visualisation will be highlighted too. The steps will be annotated in the code chunk.\n\n\nCode\n# Step 1: Plot the first figure\np1 &lt;- ggplot(data = exam_data, \n       aes(x = MATHS)) +\n  geom_dotplot_interactive(              \n    aes(data_id = ID,\n        tooltip = ID),              \n    stackgroups = TRUE,                  \n    binwidth = 1,                        \n    method = \"histodot\") +  \n  coord_cartesian(xlim = c(0,100)) + \n  scale_y_continuous(NULL,               \n                     breaks = NULL)\n\n# Step 2: Plot the second figure\np2 &lt;- ggplot(data = exam_data, \n       aes(x = ENGLISH)) +\n  geom_dotplot_interactive(              \n    aes(data_id = ID,\n        tooltip = ID),        \n    stackgroups = TRUE,                  \n    binwidth = 1,                        \n    method = \"histodot\") + \n  coord_cartesian(xlim = c(0,100)) + \n  scale_y_continuous(NULL,               \n                     breaks = NULL)\n\n# Step 3: Display the svg object. The code argument runs the patchwork function to create the coordinated multiple views.\ngirafe(code = print(p1 + p2),  # print is needed for the plot to display\n       width_svg = 6,\n       height_svg = 3,\n       options = list(\n         opts_hover(css = \"fill: #202020;\"),\n         opts_hover_inv(css = \"opacity:0.2;\")\n         )\n       ) \n\n\n\n\n\n\n\n\n\n\n\n\n\nDefaultWith Color\n\n\n\n\nCode\nplot_ly(data = exam_data, \n             x = ~MATHS, \n             y = ~ENGLISH)\n\n\n\n\n\n\n\n\n\n\nCode\nplot_ly(data = exam_data, \n        x = ~MATHS, \n        y = ~ENGLISH,\n        color = ~RACE)\n\n\n\n\n\n\n\n\n\n\n\n\nThe code chunk below plots an interactive scatter plot by using ggplotly().\n\n\nCode\np &lt;- ggplot(data=exam_data, \n            aes(x = MATHS,\n                y = ENGLISH)) +\n  geom_point(size=1) +\n  coord_cartesian(xlim=c(0,100),\n                  ylim=c(0,100))\nggplotly(p)\n\n\n\n\n\n\n###3.5.3 Coordinated Multiple Views with plotly The creation of a coordinated linked plot by using plotly involves three steps:\n\n\nCode\n# Step 1: Using highlight_key function from plotly package to indicate the shared data\n# This creates an object of class crosstalk::SharedData\nd &lt;- highlight_key(exam_data)\n\n# Step 2: Create both the scatterplots\np1 &lt;- ggplot(data = d, \n            aes(x = MATHS,\n                y = ENGLISH)) +\n  geom_point(size=1) +\n  coord_cartesian(xlim=c(0,100),\n                  ylim=c(0,100))\n\np2 &lt;- ggplot(data = d, \n            aes(x = MATHS,\n                y = SCIENCE)) +\n  geom_point(size=1) +\n  coord_cartesian(xlim=c(0,100),\n                  ylim=c(0,100))\n\n# Step 3: Using subplot to place them side-by-side\nsubplot(ggplotly(p1),\n        ggplotly(p2))\n\n\n\n\n\n\n\n\n\n\nCrosstalk is an add-on to the htmlwidgets package. It extends htmlwidgets with a set of classes, functions, and conventions for implementing cross-widget interactions (currently, linked brushing and filtering).\n\n\nCode\n# Step 1: Indicate shared data\nd &lt;- highlight_key(exam_data) \n\n# Step 2: Define the ggplot graphic\np &lt;- ggplot(d, \n            aes(ENGLISH, \n                MATHS)) + \n  geom_point(size=1) +\n  coord_cartesian(xlim=c(0,100),\n                  ylim=c(0,100))\n\n# Step 3: Using the plotly highlight function\ngg &lt;- highlight(ggplotly(p),        \n                \"plotly_selected\")  \n\n# Step 4: Putting HTML elements side by side.\ncrosstalk::bscols(gg,               \n                  DT::datatable(d), \n                  widths = 5)"
  },
  {
    "objectID": "Hands-on_Exercise/Hands-on_Ex03/Hands-on_Ex03.html#learning-outcome",
    "href": "Hands-on_Exercise/Hands-on_Ex03/Hands-on_Ex03.html#learning-outcome",
    "title": "Hands-on_Ex03",
    "section": "",
    "text": "The following content is created by following the tutorial on this chapter."
  },
  {
    "objectID": "Hands-on_Exercise/Hands-on_Ex03/Hands-on_Ex03.html#getting-started",
    "href": "Hands-on_Exercise/Hands-on_Ex03/Hands-on_Ex03.html#getting-started",
    "title": "Hands-on_Ex03",
    "section": "",
    "text": "ggiraph for making ‘ggplot’ graphics interactive.\nplotly, R library for plotting interactive statistical graphs.\nDT provides an R interface to the JavaScript library DataTables that create interactive table on html page.\ntidyverse, a family of modern R packages specially designed to support data science, analysis and communication task including creating static statistical graphs.\npatchwork for combining multiple ggplot2 graphs into one figure.\n\n\n\nCode\npacman::p_load(ggiraph, plotly, \n               patchwork, DT, tidyverse)"
  },
  {
    "objectID": "Hands-on_Exercise/Hands-on_Ex03/Hands-on_Ex03.html#importing-data",
    "href": "Hands-on_Exercise/Hands-on_Ex03/Hands-on_Ex03.html#importing-data",
    "title": "Hands-on_Ex03",
    "section": "",
    "text": "Code\nexam_data &lt;- read_csv(\"data/Exam_data.csv\")"
  },
  {
    "objectID": "Hands-on_Exercise/Hands-on_Ex03/Hands-on_Ex03.html#interactive-data-visualisation---ggiraph-methods",
    "href": "Hands-on_Exercise/Hands-on_Ex03/Hands-on_Ex03.html#interactive-data-visualisation---ggiraph-methods",
    "title": "Hands-on_Ex03",
    "section": "",
    "text": "Using TooltipDisplaying multiple informationCustomising Tooltip style\n\n\nBy hovering the mouse pointer on an data point of interest, the student’s ID will be displayed.\n\n\nCode\n# Step 1: an interactive version of ggplot2 geom (i.e. geom_dotplot_interactive()) will be used to create the basic graph.\n\np &lt;- ggplot(data = exam_data,\n            aes(x = MATHS)) +\n  geom_dotplot_interactive(\n    aes(tooltip = ID),  # Here's the tooltip\n    stackgroups = TRUE,\n    binwidth = 1,\n    method = \"histodot\") +\n  scale_y_continuous(NULL,\n                     breaks = NULL)\n\n# Step 2: Girafe() will be used to generate an svg object to be displayed on an html page.\ngirafe(\n  ggobj = p,\n  width_svg = 6,\n  height_svg = 6*0.618\n)\n\n\n\n\n\n\n\n\nBy hovering the mouse pointer on an data point of interest, the student’s ID will be displayed.\n\n\nCode\n# Step 1: Creating a new column in the dataset to incorporate the tool tip information\nexam_data$tooltip &lt;- c(paste0(\n  \"Name = \", exam_data$ID,\n  \"\\n Class = \", exam_data$CLASS\n))\n\n# Step 2: Create an interactive version of ggplot2 geom.\np &lt;- ggplot(data = exam_data,\n            aes(x = MATHS)) +\n  geom_dotplot_interactive(\n    aes(tooltip = exam_data$tooltip),  # Here's the tooltip\n    stackgroups = TRUE,\n    binwidth = 1,\n    method = \"histodot\") +\n  scale_y_continuous(NULL,\n                     breaks = NULL)\n\n# Step 3: Generate an svg object to be displayed on an html page.\ngirafe(\n  ggobj = p,\n  width_svg = 6,\n  height_svg = 6*0.618\n)\n\n\n\n\n\n\n\n\nThis changes the tooltip from a black background + white text to a white background + black, bold text.\n\n\nCode\n# Step 1: Define tooltip CSS style\ntooltip_css &lt;- \"background-color:white;\nfont-style:bold; color:black;\"\n\n# Step 2: Create an interactive version of ggplot2 geom.\np &lt;- ggplot(data = exam_data,\n            aes(x = MATHS)) +\n  geom_dotplot_interactive(\n    aes(tooltip = ID),  # Here's the tooltip\n    stackgroups = TRUE,\n    binwidth = 1,\n    method = \"histodot\") +\n  scale_y_continuous(NULL,\n                     breaks = NULL)\n\n# Step 3: Generate an svg object to be displayed on an html page.\ngirafe(\n  ggobj = p,\n  width_svg = 6,\n  height_svg = 6*0.618,\n  options = list(  \n    opts_tooltip(\n      css = tooltip_css  # The tooltip css is incorporated here\n    )\n  )\n)\n\n\n\n\n\n\n\n\n\nCode chunk below shows an advanced way to customise tooltip. In this example, a function is used to compute 90% confident interval of the mean. The derived statistics are then displayed in the tooltip.\n\n\nCode\ntooltip &lt;- function(y, ymax, accuracy = .01) {\n  mean &lt;- scales::number(y, accuracy = accuracy)\n  sem &lt;- scales::number(ymax - y, accuracy = accuracy)\n  paste(\"Mean maths scores:\", mean, \"+/-\", sem)\n}\n\ngg_point &lt;- ggplot(data=exam_data, \n                   aes(x = RACE),\n) +\n  stat_summary(aes(y = MATHS, \n                   tooltip = after_stat(  \n                     tooltip(y, ymax))),  \n    fun.data = \"mean_se\", \n    geom = GeomInteractiveCol,  \n    fill = \"light blue\"\n  ) +\n  stat_summary(aes(y = MATHS),\n    fun.data = mean_se,\n    geom = \"errorbar\", width = 0.2, size = 0.2\n  )\n\ngirafe(ggobj = gg_point,\n       width_svg = 8,\n       height_svg = 8*0.618)\n\n\n\n\n\n\n\n\n\n\nHover effectStyling hover effect\n\n\nElements associated with a data_id (i.e CLASS) will be highlighted upon mouse over.\n\n\nCode\np &lt;- ggplot(data=exam_data, \n       aes(x = MATHS)) +\n  geom_dotplot_interactive(           \n    aes(data_id = CLASS),             \n    stackgroups = TRUE,               \n    binwidth = 1,                        \n    method = \"histodot\") +               \n  scale_y_continuous(NULL,               \n                     breaks = NULL)\ngirafe(                                  \n  ggobj = p,                             \n  width_svg = 6,                         \n  height_svg = 6*0.618                      \n)                                        \n\n\n\n\n\n\n\n\nCss codes are used to change the highlighting effect.\n\n\nCode\np &lt;- ggplot(data=exam_data, \n       aes(x = MATHS)) +\n  geom_dotplot_interactive(              \n    aes(data_id = CLASS),              \n    stackgroups = TRUE,                  \n    binwidth = 1,                        \n    method = \"histodot\") +               \n  scale_y_continuous(NULL,               \n                     breaks = NULL)\ngirafe(                                  \n  ggobj = p,                             \n  width_svg = 6,                         \n  height_svg = 6*0.618,\n  options = list(                        \n    opts_hover(css = \"fill: #202020;\"),  \n    opts_hover_inv(css = \"opacity:0.2;\") \n  )                                        \n)                                                                         \n\n\n\n\n\n\n\n\n\n\n\n\nThe code chunk below combines what we have learnt so far - the tooltip + hover effect.\n\n\nCode\np &lt;- ggplot(data = exam_data, \n       aes(x = MATHS)) +\n  geom_dotplot_interactive(              \n    aes(tooltip = CLASS, \n        data_id = CLASS),              \n    stackgroups = TRUE,                  \n    binwidth = 1,                        \n    method = \"histodot\") +               \n  scale_y_continuous(NULL,               \n                     breaks = NULL)\ngirafe(                                  \n  ggobj = p,                             \n  width_svg = 6,                         \n  height_svg = 6*0.618,\n  options = list(                        \n    opts_hover(css = \"fill: #202020;\"),  \n    opts_hover_inv(css = \"opacity:0.2;\") \n  )                                        \n)            \n\n\n\n\n\n\n\n\n\nonclick argument of ggiraph provides hotlink interactivity on the web. Interactivity: Web document link with a data object will be displayed on the web browser upon mouse click.\n\n\nCode\nexam_data$onclick &lt;- sprintf(\"window.open(\\\"%s%s\\\")\",\n\"https://www.moe.gov.sg/schoolfinder?journey=Primary%20school\",\nas.character(exam_data$ID))\n\np &lt;- ggplot(data = exam_data, \n       aes(x = MATHS)) +\n  geom_dotplot_interactive(              \n    aes(onclick = onclick),              \n    stackgroups = TRUE,                  \n    binwidth = 1,                        \n    method = \"histodot\") +               \n  scale_y_continuous(NULL,               \n                     breaks = NULL)\ngirafe(                                  \n  ggobj = p,                             \n  width_svg = 6,                         \n  height_svg = 6*0.618)                                   \n\n\n\n\n\n\n\n\n\nCoordinated multiple views methods has been implemented in the data visualisation below. Notice that when a data point of one of the dotplot is selected, the corresponding data point ID on the second data visualisation will be highlighted too. The steps will be annotated in the code chunk.\n\n\nCode\n# Step 1: Plot the first figure\np1 &lt;- ggplot(data = exam_data, \n       aes(x = MATHS)) +\n  geom_dotplot_interactive(              \n    aes(data_id = ID,\n        tooltip = ID),              \n    stackgroups = TRUE,                  \n    binwidth = 1,                        \n    method = \"histodot\") +  \n  coord_cartesian(xlim = c(0,100)) + \n  scale_y_continuous(NULL,               \n                     breaks = NULL)\n\n# Step 2: Plot the second figure\np2 &lt;- ggplot(data = exam_data, \n       aes(x = ENGLISH)) +\n  geom_dotplot_interactive(              \n    aes(data_id = ID,\n        tooltip = ID),        \n    stackgroups = TRUE,                  \n    binwidth = 1,                        \n    method = \"histodot\") + \n  coord_cartesian(xlim = c(0,100)) + \n  scale_y_continuous(NULL,               \n                     breaks = NULL)\n\n# Step 3: Display the svg object. The code argument runs the patchwork function to create the coordinated multiple views.\ngirafe(code = print(p1 + p2),  # print is needed for the plot to display\n       width_svg = 6,\n       height_svg = 3,\n       options = list(\n         opts_hover(css = \"fill: #202020;\"),\n         opts_hover_inv(css = \"opacity:0.2;\")\n         )\n       )"
  },
  {
    "objectID": "Hands-on_Exercise/Hands-on_Ex03/Hands-on_Ex03.html#interactive-data-visualisation---plotly-methods",
    "href": "Hands-on_Exercise/Hands-on_Ex03/Hands-on_Ex03.html#interactive-data-visualisation---plotly-methods",
    "title": "Hands-on_Ex03",
    "section": "",
    "text": "DefaultWith Color\n\n\n\n\nCode\nplot_ly(data = exam_data, \n             x = ~MATHS, \n             y = ~ENGLISH)\n\n\n\n\n\n\n\n\n\n\nCode\nplot_ly(data = exam_data, \n        x = ~MATHS, \n        y = ~ENGLISH,\n        color = ~RACE)\n\n\n\n\n\n\n\n\n\n\n\n\nThe code chunk below plots an interactive scatter plot by using ggplotly().\n\n\nCode\np &lt;- ggplot(data=exam_data, \n            aes(x = MATHS,\n                y = ENGLISH)) +\n  geom_point(size=1) +\n  coord_cartesian(xlim=c(0,100),\n                  ylim=c(0,100))\nggplotly(p)\n\n\n\n\n\n\n###3.5.3 Coordinated Multiple Views with plotly The creation of a coordinated linked plot by using plotly involves three steps:\n\n\nCode\n# Step 1: Using highlight_key function from plotly package to indicate the shared data\n# This creates an object of class crosstalk::SharedData\nd &lt;- highlight_key(exam_data)\n\n# Step 2: Create both the scatterplots\np1 &lt;- ggplot(data = d, \n            aes(x = MATHS,\n                y = ENGLISH)) +\n  geom_point(size=1) +\n  coord_cartesian(xlim=c(0,100),\n                  ylim=c(0,100))\n\np2 &lt;- ggplot(data = d, \n            aes(x = MATHS,\n                y = SCIENCE)) +\n  geom_point(size=1) +\n  coord_cartesian(xlim=c(0,100),\n                  ylim=c(0,100))\n\n# Step 3: Using subplot to place them side-by-side\nsubplot(ggplotly(p1),\n        ggplotly(p2))"
  },
  {
    "objectID": "Hands-on_Exercise/Hands-on_Ex03/Hands-on_Ex03.html#interactive-data-visualisation---crosstalk-methods",
    "href": "Hands-on_Exercise/Hands-on_Ex03/Hands-on_Ex03.html#interactive-data-visualisation---crosstalk-methods",
    "title": "Hands-on_Ex03",
    "section": "",
    "text": "Crosstalk is an add-on to the htmlwidgets package. It extends htmlwidgets with a set of classes, functions, and conventions for implementing cross-widget interactions (currently, linked brushing and filtering).\n\n\nCode\n# Step 1: Indicate shared data\nd &lt;- highlight_key(exam_data) \n\n# Step 2: Define the ggplot graphic\np &lt;- ggplot(d, \n            aes(ENGLISH, \n                MATHS)) + \n  geom_point(size=1) +\n  coord_cartesian(xlim=c(0,100),\n                  ylim=c(0,100))\n\n# Step 3: Using the plotly highlight function\ngg &lt;- highlight(ggplotly(p),        \n                \"plotly_selected\")  \n\n# Step 4: Putting HTML elements side by side.\ncrosstalk::bscols(gg,               \n                  DT::datatable(d), \n                  widths = 5)"
  },
  {
    "objectID": "Hands-on_Exercise/Hands-on_Ex03/Hands-on_Ex03.html#practical-takeaways",
    "href": "Hands-on_Exercise/Hands-on_Ex03/Hands-on_Ex03.html#practical-takeaways",
    "title": "Hands-on_Ex03",
    "section": "4.1 Practical Takeaways",
    "text": "4.1 Practical Takeaways\nGained a clear understanding of how animation is constructed frame-by-frame using subsets of the data.\nLearned to use transition_*() functions (like transition_reveal()) to create smooth animations in gganimate.\nUnderstood how to control animation speed and behavior via attributes such as frame_time and easing.\nLearned how to combine multiple plot layers (e.g., geom_line, geom_point) with animation to tell a dynamic visual story.\nDiscovered that while animated graphics may not be time-efficient for exploratory analysis, they are highly effective in presentations for capturing attention and emphasizing trends."
  },
  {
    "objectID": "Hands-on_Exercise/Hands-on_Ex03/Hands-on_Ex03.html#getting-started-1",
    "href": "Hands-on_Exercise/Hands-on_Ex03/Hands-on_Ex03.html#getting-started-1",
    "title": "Hands-on_Ex03",
    "section": "4.2 Getting Started",
    "text": "4.2 Getting Started\n\n4.2.1 Loading the R packages\n\nplotly, R library for plotting interactive statistical graphs.\nplotly ，用于绘制交互式统计图表的 R 库。\ngganimate, an ggplot extension for creating animated statistical graphs.\ngganimate ，一个用于创建动画统计图表的 ggplot 扩展。\ngifski converts video frames to GIF animations using pngquant’s fancy features for efficient cross-frame palettes and temporal dithering. It produces animated GIFs that use thousands of colors per frame.\ngifski 使用 pngquant 的高效跨帧调色板和时间抖动功能，将视频帧转换为 GIF 动画。它生成的 GIF 动画每帧使用数千种颜色。\ngapminder: An excerpt of the data available at Gapminder.org. We just want to use its country_colors scheme.\ngapminder ：摘自 Gapminder.org 的数据。我们只想使用它的 country_colors 方案。\ntidyverse, a family of modern R packages specially designed to support data science, analysis and communication task including creating static statistical graphs.\ntidyverse 是一系列现代 R 包，专门设计用于支持数据科学、分析和通信任务，包括创建静态统计图。\n\n\n\nCode\npacman::p_load(readxl, gifski, gapminder,\n               plotly, gganimate, tidyverse)\n\n\n\n\n4.2.2 Importing the data\n\n\nCode\ncol &lt;- c(\"Country\", \"Continent\")\nglobalPop &lt;- read_xls(\"data/GlobalPopulation.xls\",\n                      sheet=\"Data\") %&gt;%\n  mutate_each_(funs(factor(.)), col) %&gt;%\n  mutate(Year = as.integer(Year))"
  },
  {
    "objectID": "Hands-on_Exercise/Hands-on_Ex03/Hands-on_Ex03.html#animated-data-visualisation-gganimate-methods",
    "href": "Hands-on_Exercise/Hands-on_Ex03/Hands-on_Ex03.html#animated-data-visualisation-gganimate-methods",
    "title": "Hands-on_Ex03",
    "section": "4.3 Animated Data Visualisation: gganimate methods",
    "text": "4.3 Animated Data Visualisation: gganimate methods\n\nStatic bubble plotAnimated bubble plot\n\n\n\n\nCode\nggplot(data = globalPop, \n       aes(x = Old, \n           y = Young, \n           size = Population, \n           colour = Country)) +\n  geom_point(alpha = 0.7, \n             show.legend = FALSE) +\n  scale_colour_manual(values = country_colors) +\n  scale_size(range = c(2, 12)) +\n  labs(title = 'Year: {frame_time}', \n       x = '% Aged', \n       y = '% Young') \n\n\n\n\n\n\n\n\n\nCode\nggplot(data = globalPop, \n       aes(x = Old, \n           y = Young, \n           size = Population, \n           colour = Country)) +\n  geom_point(alpha = 0.7, \n             show.legend = FALSE) +\n  scale_colour_manual(values = country_colors) +\n  scale_size(range = c(2, 12)) +\n  labs(title = 'Year: {frame_time}', \n       x = '% Aged', \n       y = '% Young') +\n  transition_time(Year) +  # Transition through distinct states in time   \n  ease_aes('linear')  # Control of easing of aesthetics"
  },
  {
    "objectID": "Hands-on_Exercise/Hands-on_Ex03/Hands-on_Ex03.html#animated-data-visualisation-plotly",
    "href": "Hands-on_Exercise/Hands-on_Ex03/Hands-on_Ex03.html#animated-data-visualisation-plotly",
    "title": "Hands-on_Ex03",
    "section": "4.4 Animated Data Visualisation: plotly",
    "text": "4.4 Animated Data Visualisation: plotly\n\n4.3.1 Animated bubble plot with ggplotly() method\n\nDefaultwithout the legend\n\n\n\n\nCode\ngg &lt;- ggplot(data = globalPop, \n       aes(x = Old, \n           y = Young, \n           size = Population, \n           colour = Country)) +\n  geom_point(aes(size = Population,\n                 frame = Year),\n             alpha = 0.7, \n             show.legend = FALSE) +  # The legend is still displayed\n  scale_colour_manual(values = country_colors) +\n  scale_size(range = c(2, 12)) +\n  labs(x = '% Aged', \n       y = '% Young')\n\nggplotly(gg)\n\n\n\n\n\n\n\n\n\n\nCode\ngg &lt;- ggplot(globalPop, \n       aes(x = Old, \n           y = Young, \n           size = Population, \n           colour = Country)) +\n  geom_point(aes(size = Population,\n                 frame = Year),\n             alpha = 0.7) +\n  scale_colour_manual(values = country_colors) +\n  scale_size(range = c(2, 12)) +\n  labs(x = '% Aged', \n       y = '% Young') + \n  theme(legend.position='none')\n\nggplotly(gg)\n\n\n\n\n\n\n\n\n\n\n\n4.3.2 Animated bubble plot with plot_ly() method\n\n\nCode\nbp &lt;- globalPop %&gt;%\n  plot_ly(x = ~Old, \n          y = ~Young, \n          size = ~Population, \n          color = ~Continent,\n          sizes = c(2, 100),\n          frame = ~Year, \n          text = ~Country, \n          hoverinfo = \"text\",\n          type = 'scatter',\n          mode = 'markers') %&gt;%\n  layout(showlegend = FALSE)\nbp"
  },
  {
    "objectID": "Take-home_Exercise/Take-home_Ex01/Take-home_Ex01.html",
    "href": "Take-home_Exercise/Take-home_Ex01/Take-home_Ex01.html",
    "title": "Take-home_Ex01",
    "section": "",
    "text": "In today’s digital media landscape, the effectiveness of data storytelling depends not only on accuracy but also on visual clarity and impact. As the graphical editor for a local online publication, I was tasked with designing static data visualisations to support an article examining the demographic structure and distribution of Singapore in 2024.\nThis assignment draws on the official dataset provided by the Department of Statistics Singapore (DOS), with a focus on the age and gender distribution across planning areas and subzones. The visualisation process prioritises principles of clarity, truthfulness, and reproducibility.\nThis report outlines the full workflow, including data preparation, visualisation techniques, and key findings. The task is completed in two phases: (1) developing original static charts that highlight meaningful demographic patterns; and (2) evaluating a peer’s submission to provide constructive feedback and produce a visual redesign based on good design principles."
  },
  {
    "objectID": "Take-home_Exercise/Take-home_Ex01/Take-home_Ex01.html#background",
    "href": "Take-home_Exercise/Take-home_Ex01/Take-home_Ex01.html#background",
    "title": "Take-home_Ex01",
    "section": "",
    "text": "In today’s digital media landscape, the effectiveness of data storytelling depends not only on accuracy but also on visual clarity and impact. As the graphical editor for a local online publication, I was tasked with designing static data visualisations to support an article examining the demographic structure and distribution of Singapore in 2024.\nThis assignment draws on the official dataset provided by the Department of Statistics Singapore (DOS), with a focus on the age and gender distribution across planning areas and subzones. The visualisation process prioritises principles of clarity, truthfulness, and reproducibility.\nThis report outlines the full workflow, including data preparation, visualisation techniques, and key findings. The task is completed in two phases: (1) developing original static charts that highlight meaningful demographic patterns; and (2) evaluating a peer’s submission to provide constructive feedback and produce a visual redesign based on good design principles."
  },
  {
    "objectID": "Take-home_Exercise/Take-home_Ex01/Take-home_Ex01.html#getting-started",
    "href": "Take-home_Exercise/Take-home_Ex01/Take-home_Ex01.html#getting-started",
    "title": "Take-home_Ex01",
    "section": "🚀 Getting Started",
    "text": "🚀 Getting Started\nThis project is completed using the following R packages:\n\nggiraph for enhancing ggplot2 graphics with interactivity.\nplotly for building interactive statistical plots (though not required for static charts, it may assist in exploration).\nDT for generating dynamic data tables on HTML pages.\ntidyverse for data manipulation, wrangling, and static chart creation.\npatchwork for arranging multiple ggplot charts in a composite layout.\nscales: for formatting axis labels and annotations (e.g., percentages, commas).\n\n\n\n▼ Load required packages\npacman::p_load(ggiraph, plotly, patchwork, DT, tidyverse, scales)"
  },
  {
    "objectID": "Take-home_Exercise/Take-home_Ex01/Take-home_Ex01.html#visualisation-1-singapores-2024-population-pyramid-by-age-and-sex",
    "href": "Take-home_Exercise/Take-home_Ex01/Take-home_Ex01.html#visualisation-1-singapores-2024-population-pyramid-by-age-and-sex",
    "title": "Take-home_Ex01",
    "section": "👥 Visualisation 1: Singapore’s 2024 Population Pyramid by Age and Sex",
    "text": "👥 Visualisation 1: Singapore’s 2024 Population Pyramid by Age and Sex\nThis visualisation presents the age distribution of Singapore residents by gender in 2024. The population pyramid is built by mirroring bar charts for males and females using ggplot2, offering an immediate sense of population structure and potential ageing trends."
  },
  {
    "objectID": "Take-home_Exercise/Take-home_Ex01/Take-home_Ex01.html#visualisation-1-overview-of-singapores-2024-demographics",
    "href": "Take-home_Exercise/Take-home_Ex01/Take-home_Ex01.html#visualisation-1-overview-of-singapores-2024-demographics",
    "title": "Take-home_Ex01",
    "section": "📊👥 Visualisation 1: Overview of Singapore’s 2024 Demographics",
    "text": "📊👥 Visualisation 1: Overview of Singapore’s 2024 Demographics\nThis set of static charts provides a concise overview of Singapore’s 2024 resident population by gender, age group, and top planning areas. The population pyramid is built by mirroring bar charts for males and females using ggplot2, offering an immediate sense of population structure and potential ageing trends.\n\n\nCode\n# 🎯 1. Gender Distribution (pie chart)\n# Group population by sex and compute percentages\ngender_summary &lt;- pop_data %&gt;%\n  group_by(Sex) %&gt;%\n  summarise(Population = sum(Population), .groups = \"drop\") %&gt;%\n  mutate(Percent = Population / sum(Population),\n         Label = paste0(percent(Percent, accuracy = 0.1)))  # Keep only percentage\n\n# Generate an enlarged pie chart with simplified labels\np1 &lt;- ggplot(gender_summary, aes(x = \"\", y = Population, fill = Sex)) +\n  geom_col(width = 1, color = \"white\") +\n  coord_polar(theta = \"y\") +\n  geom_text(aes(label = Label), position = position_stack(vjust = 0.5),\n            size = 6, fontface = \"bold\", color = \"black\") +\n  scale_fill_manual(values = c(\"Male\" = \"#a3c3cc\", \"Female\" = \"#d4a5a5\")) +\n  labs(title = \"Gender Distribution\") +\n  theme_void() +\n  theme(\n    legend.position = \"none\",\n    plot.title = element_text(size = 16, face = \"bold\", hjust = 0.5),\n  )\n\n# 🎯 2. Age Group Distribution (bar chart)\n# Categorize ages into 10-year intervals and group by gender\npyramid_data &lt;- pop_data %&gt;%\n  filter(Sex %in% c(\"Male\", \"Female\")) %&gt;%\n  mutate(AgeGroup = cut(Age_numeric,\n                        breaks = c(seq(0, 90, 10), Inf),\n                        right = FALSE,\n                        labels = c(\"0-9\", \"10-19\", \"20-29\", \"30-39\",\n                                   \"40-49\", \"50-59\", \"60-69\", \"70-79\",\n                                   \"80-89\", \"90+\"))) %&gt;%\n  group_by(AgeGroup, Sex) %&gt;%\n  summarise(Population = sum(Population), .groups = \"drop\") %&gt;%\n  mutate(Population = ifelse(Sex == \"Male\", -Population, Population))\n\n\n# Create grouped population pyramid\np2 &lt;- ggplot(pyramid_data, aes(x = Population, y = AgeGroup, fill = Sex)) +\n  geom_col(width = 0.9) +\n  scale_x_continuous(labels = function(x) paste0(abs(x / 1000), \"k\")) +\n  scale_fill_manual(values = c(\"Male\" = \"#a3c3cc\", \"Female\" = \"#d4a5a5\")) +\n  labs(\n    title = \"Population Pyramid by Age Group and Gender (2024)\",\n    x = \"Population\",\n    y = \"Age Group\"\n  ) +\n  theme_minimal() +\n  theme(\n    plot.title = element_text(size = 14, face = \"bold\", hjust = 0.5),\n    legend.position = \"none\"\n  )\n\n\n# 🎯 3. Population Pyramid of Top 10 Planning Areas\n# Compute top 10 planning areas based on combined male and female counts\n# 🔍 Step 1: Identify top 10 planning areas by total population\ntop10_pa_names &lt;- pop_data %&gt;%\n  group_by(Planning_Area) %&gt;%\n  summarise(Total = sum(Population), .groups = \"drop\") %&gt;%\n  arrange(desc(Total)) %&gt;%\n  slice_head(n = 10) %&gt;%\n  pull(Planning_Area)\n\n# 🔍 Step 2: Filter data and calculate male/female population\ntop10_pyramid &lt;- pop_data %&gt;%\n  filter(Planning_Area %in% top10_pa_names, Sex %in% c(\"Male\", \"Female\")) %&gt;%\n  group_by(Planning_Area, Sex) %&gt;%\n  summarise(Population = sum(Population), .groups = \"drop\") %&gt;%\n  mutate(\n    Population = ifelse(Sex == \"Male\", -Population, Population),\n    Planning_Area = factor(Planning_Area, levels = rev(top10_pa_names))\n  )\n\n# 📊 Step 3: Plot as population pyramid\n\np3 &lt;-ggplot(top10_pyramid, aes(x = Population, y = Planning_Area, fill = Sex)) +\n  geom_col(width = 0.7) +\n  scale_x_continuous(labels = function(x) paste0(abs(x / 1000), name = \"k\")) +\n  scale_fill_manual(values = c(\"Male\" = \"#a3c3cc\", \"Female\" = \"#d4a5a5\")) +\n  labs(\n    title = \"Population Pyramid of Top 10 Planning Areas (2024)\",\n    y = NULL\n  ) +\n  theme_minimal() +\n  theme(\n    plot.title = element_text(face = \"bold\", size = 16, hjust = 0.5),\n    axis.text = element_text(size = 10),\n    legend.position = \"bottom\"\n  )\n\n# 🧩 Combine charts with patchwork\n(p1 | p2) / p3 + plot_annotation(\ntitle = \"Singapore’s 2024 Population Overview\",\n    theme = theme(plot.title = element_text(size = 18, face = \"bold\", hjust = 0.5))\n)\n\n\n\n\n\n\n\n\n\n\n\nInsights\n\n\n\nINSIGHTS 1\nThis combined dashboard summarizes Singapore’s population profile from three dimensions. The gender pie chart reveals a nearly balanced population, with 51.3% female and 48.7% male residents. The age group bar chart shows the largest cohorts are aged 30–39 and 40–49, indicating a strong working-age base. Populations taper off significantly after 60, pointing to ageing concerns. In the top 10 planning areas, Tampines, Bedok, and Sengkang emerge as major residential zones, each with substantial and balanced gender distributions. The use of harmonized color tones and minimalist layout enhances clarity while emphasizing Singapore’s demographic stability and urban clustering."
  },
  {
    "objectID": "Take-home_Exercise/Take-home_Ex01/Take-home_Ex01.html#data-import-and-cleaning",
    "href": "Take-home_Exercise/Take-home_Ex01/Take-home_Ex01.html#data-import-and-cleaning",
    "title": "Take-home_Ex01",
    "section": "🧼 Data Import and Cleaning",
    "text": "🧼 Data Import and Cleaning\nThe dataset titled Singapore Residents by Planning Area/Subzone, Single Year of Age and Sex, June 2024 was obtained from the Department of Statistics Singapore and includes demographic details broken down by planning area, subzone, age, and sex.\n\n\n▼ Data Import and Cleaning\n# Read cleaned dataset\npop_data &lt;- read_csv(\"data/respopagesex2024.csv\")\n\n# Standardise column names\npop_data &lt;- pop_data %&gt;%\n  rename(\n    Planning_Area = PA,\n    Subzone = SZ,\n    Age = Age,\n    Sex = Sex,\n    Population = Pop,\n    Year = Time\n  ) %&gt;%\n  filter(Year == 2024) %&gt;%\n  mutate(\n    Age_numeric = ifelse(Age == \"90_and_Over\", 90, as.integer(Age)),  # 👈 handle 90+\n    Sex = ifelse(Sex == \"Males\", \"Male\", \"Female\")\n  )\n\n# 🎯 Aggregate population by Planning Area and numeric age\nage_distribution &lt;- pop_data %&gt;%\n  filter(Sex %in% c(\"Male\", \"Female\")) %&gt;%\n  group_by(Planning_Area, Age_numeric) %&gt;%\n  summarise(Population = sum(Population), .groups = \"drop\") %&gt;%\n  rename(Age = Age_numeric)\n\n# 🧮 Weighted median function (same as before)\nweighted_median &lt;- function(df) {\n  df &lt;- df[order(df$Age), ]\n  cum_pop &lt;- cumsum(df$Population)\n  cutoff &lt;- sum(df$Population) / 2\n  df$Age[which(cum_pop &gt;= cutoff)[1]]\n}\n\n# 🧾 Compute weighted median by Planning Area\nmedian_age_summary &lt;- age_distribution %&gt;%\n  group_by(Planning_Area) %&gt;%\n  summarise(Median_Age = weighted_median(cur_data_all()))\n\n\n✅ The dataset contains over 60,000 rows, representing Singapore’s residents by age and gender across multiple planning areas and subzones as of June 2024. The cleaned data will be used to generate meaningful visual narratives."
  },
  {
    "objectID": "Take-home_Exercise/Take-home_Ex01/Take-home_Ex01.html#insights-1",
    "href": "Take-home_Exercise/Take-home_Ex01/Take-home_Ex01.html#insights-1",
    "title": "Take-home_Ex01",
    "section": "INSIGHTS 1",
    "text": "INSIGHTS 1\nThis combined dashboard summarizes Singapore’s population profile from three dimensions. The gender pie chart reveals a nearly balanced population, with 51.3% female and 48.7% male residents. The age group bar chart shows the largest cohorts are aged 30–39 and 40–49, indicating a strong working-age base. Populations taper off significantly after 60, pointing to ageing concerns. In the top 10 planning areas, Tampines, Bedok, and Sengkang emerge as major residential zones, each with substantial and balanced gender distributions. The use of harmonized color tones and minimalist layout enhances clarity while emphasizing Singapore’s demographic stability and urban clustering."
  },
  {
    "objectID": "Take-home_Exercise/Take-home_Ex01/Take-home_Ex01.html#visualisation-2-aging-profile-by-planning-area-2024",
    "href": "Take-home_Exercise/Take-home_Ex01/Take-home_Ex01.html#visualisation-2-aging-profile-by-planning-area-2024",
    "title": "Take-home_Ex01",
    "section": "📊🧓👴 Visualisation 2: Aging Profile by Planning Area (2024)",
    "text": "📊🧓👴 Visualisation 2: Aging Profile by Planning Area (2024)\nThis set of charts explores Singapore’s aging population (age 65 and above) across different planning areas using a combination of proportion-based and gender-disaggregated visualizations. It helps identify which areas face more significant aging trends and whether gender imbalances exist in elderly demographics.\n\n\nCode\n# ✅ Step 1: Prepare elderly population share\npop_age_elderly &lt;- pop_data %&gt;%\n  filter(Sex %in% c(\"Male\", \"Female\")) %&gt;%\n  mutate(IsElderly = Age_numeric &gt;= 65)\n\nelderly_share &lt;- pop_age_elderly %&gt;%\n  group_by(Planning_Area) %&gt;%\n  summarise(\n    Total = sum(Population),\n    Elderly = sum(Population[IsElderly]),\n    Elderly_Share = Elderly / Total\n  ) %&gt;%\n  arrange(desc(Elderly_Share)) %&gt;%\n  slice_head(n = 15)\n\nelderly_pop &lt;- pop_age_elderly %&gt;%\n  group_by(Planning_Area) %&gt;%\n  summarise(\n    Total = sum(Population),\n    Elderly = sum(Population[IsElderly]),\n  ) %&gt;%\n  arrange(desc(Elderly)) %&gt;%\n  slice_head(n = 15)\n\n# ✅ Step 2: Elderly share bar chart (Top 15)\nchart1 &lt;- ggplot(elderly_share, aes(x = Elderly_Share, y = reorder(Planning_Area, Elderly_Share))) +\n  geom_col(fill = \"#9C7C38\", width = 0.7) +\n  scale_x_continuous(labels = percent_format(accuracy = 1)) +\n  labs(\n    title = \"Top 15 Planning Areas by Elderly Share (65+)\",\n    x = NULL, y = NULL\n  ) +\n  theme_minimal(base_size = 12) +\n  theme(\n    plot.title = element_text(face = \"bold\", size = 14),\n    axis.text.y = element_text(size = 10)\n  )\n\n# ✅ Step 3: Population Pyramid of Elderly (65+) in Top 15 Areas\ntop15_names &lt;- elderly_pop$Planning_Area\n\nelderly_gender_pop &lt;- pop_age_elderly %&gt;%\n  filter(IsElderly, Planning_Area %in% top15_names) %&gt;%\n  group_by(Planning_Area, Sex) %&gt;%\n  summarise(Pop = sum(Population), .groups = \"drop\") %&gt;%\n  mutate(Pop = ifelse(Sex == \"Male\", -Pop, Pop)) %&gt;%\n  mutate(Planning_Area = factor(Planning_Area, levels = rev(top15_names)))\n\nchart2 &lt;- ggplot(elderly_gender_pop, aes(x = Pop, y = Planning_Area, fill = Sex)) +\n  geom_col(width = 0.7) +\n  scale_x_continuous(labels = function(x) paste0(abs(x / 1000), name = \"k\"))  +\n  scale_fill_manual(values = c(\"Male\" = \"#9dbdcb\", \"Female\" = \"#d7a1a1\")) +\n  labs(\n    title = \"Gender Breakdown of Elderly Population\",\n    x = NULL, y = NULL\n  ) +\n  theme_minimal(base_size = 12) +\n  theme(\n    plot.title = element_text(face = \"bold\", size = 14),\n    axis.text.y = element_text(size = 10),\n    legend.position = \"bottom\"\n  )\n\n# ✅ Combine Plots\n(chart1 | chart2)  + plot_annotation(\ntitle = \"Singapore’s 2024 Aging Population by Planning Area\",\n    theme = theme(plot.title = element_text(size = 18, face = \"bold\", hjust = 0.5))\n)\n\n\n\n\n\n\n\n\n\n\n\nInsights\n\n\n\nINSIGHTS 2\nOutram, Ang Mo Kio, and Bukit Merah rank highest by elderly proportion (65+), all exceeding 20% — indicating aging concentration in mature residential estates.\nBedok, Tampines, and Hougang have the largest elderly populations in absolute numbers, reflecting pressure on service supply despite a lower aging ratio.\nGender breakdown reveals a slight predominance of females in the senior age groups, consistent with longevity trends.\nPolicymakers should differentiate between:\n🏘️ High-share areas: prioritize community renewal and age-friendly infrastructure.\n🏥 High-count areas: focus on resource capacity and care delivery systems."
  },
  {
    "objectID": "Take-home_Exercise/Take-home_Ex01/Take-home_Ex01.html#insights-2",
    "href": "Take-home_Exercise/Take-home_Ex01/Take-home_Ex01.html#insights-2",
    "title": "Take-home_Ex01",
    "section": "INSIGHTS 2",
    "text": "INSIGHTS 2\nOutram, Ang Mo Kio, and Bukit Merah rank highest by elderly proportion (65+), all exceeding 20% — indicating aging concentration in mature residential estates.\nBedok, Tampines, and Hougang have the largest elderly populations in absolute numbers, reflecting pressure on service supply despite a lower aging ratio.\nGender breakdown reveals a slight predominance of females in the senior age groups, consistent with longevity trends.\nPolicymakers should differentiate between:\n🏘️ High-share areas: prioritize community renewal and age-friendly infrastructure.\n🏥 High-count areas: focus on resource capacity and care delivery systems."
  },
  {
    "objectID": "Take-home_Exercise/Take-home_Ex01/Take-home_Ex01.html#visualisation-3-visualisation-3-intergenerational-balance-elderly-vs.-youth",
    "href": "Take-home_Exercise/Take-home_Ex01/Take-home_Ex01.html#visualisation-3-visualisation-3-intergenerational-balance-elderly-vs.-youth",
    "title": "Take-home_Ex01",
    "section": "📊👶🧠 Visualisation 3: Visualisation 3: Intergenerational Balance — Elderly vs. Youth",
    "text": "📊👶🧠 Visualisation 3: Visualisation 3: Intergenerational Balance — Elderly vs. Youth\nThis chart identifies planning areas with a potentially shrinking younger population (aged 0–24). It visualizes the bottom 15 regions by youth share, helping pinpoint areas that may face future workforce shortages and demographic imbalances. It complements the aging analysis by showing the flip side of the age spectrum.\n\n\nCode\n# ✅ Step 1: Add Elderly & Youth Flags\ndemo_age_flags &lt;- pop_data %&gt;%\n  mutate(\n    IsElderly = Age_numeric &gt;= 65,\n    IsYouth = Age_numeric &lt;= 14\n  )\n\n# ✅ Step 2: Compute Aggregated Age Ratios\nage_ratio_data &lt;- demo_age_flags %&gt;%\n  group_by(Planning_Area) %&gt;%\n  summarise(\n    Total = sum(Population),\n    Elderly = sum(Population[IsElderly]),\n    Youth = sum(Population[IsYouth]),\n    Elderly_Share = Elderly / Total,\n    Youth_Share = Youth / Total,\n    Elderly_to_Youth = Elderly / Youth\n  ) %&gt;%\n  filter(Youth &gt; 0)\n\n# ✅ Step 3: Interactive Scatterplot - Elderly Share vs Total Population\nplot1 &lt;- ggplot(age_ratio_data, aes(x = Total / 1000, y = Elderly_Share)) +\n  geom_point_interactive(aes(\n    tooltip = paste0(\n      Planning_Area, \"\\n\",\n      \"Elderly Share: \", percent(Elderly_Share, 1), \"\\n\",\n      \"Total Pop: \", comma(Total), \"\\n\",\n      \"Elderly Count: \", comma(Elderly), \"\\n\",\n      \"Elderly/Youth Ratio: \", round(Elderly_to_Youth, 2)\n    ),\n    data_id = Planning_Area,\n    color = Elderly_to_Youth\n  ), size = 4, alpha = 0.8) +\n  scale_color_gradient(low = \"#a0c4ff\", high = \"#d90429\") +\n  scale_y_continuous(labels = percent_format(accuracy = 1)) +\n  labs(\n    title = \"Elderly Share vs Total Population\",\n    x = \"Total Population (Thousands)\",\n    y = \"Elderly Share (65+)\",\n    color = \"Elderly/Youth Ratio\"\n  ) +\n  theme_minimal() +\n  theme(plot.title = element_text(face = \"bold\", hjust = 0.5))\n\n# ✅ Step 4: Interactive Scatterplot - Elderly Share vs Youth Share\nplot2 &lt;- ggplot(age_ratio_data, aes(x = Youth_Share, y = Elderly_Share)) +\n  geom_abline(slope = 1, intercept = 0, linetype = \"dashed\", color = \"gray\") +\n  geom_point_interactive(aes(\n    tooltip = paste0(\n      Planning_Area, \"\\n\",\n      \"Youth Share: \", percent(Youth_Share, 1), \"\\n\",\n      \"Elderly Share: \", percent(Elderly_Share, 1), \"\\n\",\n      \"Elderly/Youth Ratio: \", round(Elderly_to_Youth, 2)\n    ),\n    data_id = Planning_Area,\n    color = Elderly_to_Youth\n  ), size = 4, alpha = 0.8) +\n  scale_x_continuous(labels = percent_format(accuracy = 1)) +\n  scale_y_continuous(labels = percent_format(accuracy = 1)) +\n  scale_color_gradient(low = \"#a0c4ff\", high = \"#ff595e\") +\n  labs(\n    title = \"Elderly Share vs Youth Share (0–14)\",\n    x = \"Youth Share\",\n    y = \"Elderly Share\",\n    color = \"Elderly/Youth Ratio\"\n  ) +\n  theme_minimal() +\n  theme(plot.title = element_text(face = \"bold\", hjust = 0.5))\n\n# ✅ Step 5: Display Combined Interactive Plot (with max width)\nlibrary(ggiraph)\n\ngirafe(\n  code = print(plot1 + plot2),\n  width_svg = 16, height_svg = 7,\n  options = list(\n    opts_hover(css = \"stroke:black;stroke-width:2px;fill-opacity:1;\"),\n    opts_tooltip(css = \"background:white;padding:6px;border:1px solid gray;border-radius:4px;font-size:12px;\"),\n    opts_sizing(rescale = TRUE, width = 1)\n  )\n)\n\n\n\n\n\n\n\n\n\n\n\n\nInsights 3\n\n\n\nINSIGHTS 3\nOutram has a high elderly share despite its small total population, indicating mature community concentration.\nTampines, Hougang, and Jurong West show balanced youth-elderly ratios, important for sustainable urban aging.\nPoints above the 45° line on the right chart suggest elder-heavy imbalance — ideal targets for age-friendly infrastructure."
  },
  {
    "objectID": "Take-home_Exercise/Take-home_Ex01/Take-home_Ex01.html#insights-3",
    "href": "Take-home_Exercise/Take-home_Ex01/Take-home_Ex01.html#insights-3",
    "title": "Take-home_Ex01",
    "section": "INSIGHTS 3",
    "text": "INSIGHTS 3\nOutram has a high elderly share despite its small total population, indicating mature community concentration.\nTampines, Hougang, and Jurong West show balanced youth-elderly ratios, important for sustainable urban aging.\nPoints above the 45° line on the right chart suggest elder-heavy imbalance — ideal targets for age-friendly infrastructure."
  },
  {
    "objectID": "Take-home_Exercise/Take-home_Ex01/Take-home_Ex01.html#references",
    "href": "Take-home_Exercise/Take-home_Ex01/Take-home_Ex01.html#references",
    "title": "Take-home_Ex01",
    "section": "🧲 References",
    "text": "🧲 References\n\nhttps://www.singstat.gov.sg/find-data/search-by-theme/population/population-and-population-structure/visualising-data\nhttps://isss608-spacebun.netlify.app/take-home_ex/take-home_ex1/take-home_ex1\nhttps://akalestale.netlify.app/take-home_ex/take-home_ex01/take-home_ex01"
  },
  {
    "objectID": "Take-home_Exercise/Take-home_Ex01/Take-home_Ex02.html",
    "href": "Take-home_Exercise/Take-home_Ex01/Take-home_Ex02.html",
    "title": "Take-home_Ex01-phaseII",
    "section": "",
    "text": "refer:https://isss608-davidchiam.netlify.app/take-home_ex/take-home_ex01/take-home_ex01\n\n\n1. Effective Use of Visual Encodings\nDavid effectively applies core visualisation techniques by using mirrored bar charts for population pyramids and boxplots for median age distribution. In particular:\n\nThe mirrored bars in the pyramid chart enable immediate comparison between male and female cohorts.\nThe use of boxplots is apt for showing variability and central tendency (e.g., median age) across planning areas.\nIn the stacked bar chart, gender and age group differences are clearly segmented, leveraging hue and spatial separation.\n\n2. Logical Flow and Visual Hierarchy\nThe visualisation follows a logical and structured flow:\n\nIt begins with a high-level overview (e.g., gender share), then progressively narrows to specific planning area comparisons.\nThis top-down design facilitates cognitive flow and narrative pacing.\nClear section titles and cohesive subplot sequencing enhance usability.\n\n3. Consistent and Minimalist Visual Theme\nDavid’s work maintains high aesthetic discipline:\n\nMuted pastel tones reduce cognitive overload.\nConsistent typography and plot margin spacing lend a polished appearance.\nAxes, titles, and legends are harmonised across charts, which ensures clarity without redundancy.\n\n\n\n\n\n1. Lack of Annotations and Contextual Labels\nWhile David’s charts are clean, they often lack direct data labels or annotations. This limits interpretability:\n\n✅ Fix: The makeover scatterplot adds dynamic labeling for outliers (e.g., Outram with high elderly share), improving insight at-a-glance.\n\n2. Axis and Formatting Inconsistencies\nThere are inconsistencies in axis label units (e.g., some show absolute numbers, others show percentages):\n\n✅ Fix: In our makeover, all values are formatted uniformly using percent_format() and /1000 suffixes for population.\n\n3. Redundant Charts and Missed Insight Opportunities\nSome charts display similar gender breakdowns without revealing new dimensions. At the same time, insightful metrics like the elderly/youth ratio are missing:\n\n✅ Fix: We introduced a derived metric (Elderly_to_Youth) and plotted it against population size and aging ratio, unveiling patterns not covered in the original submission.\n\n\n\n\n\nLoad required packages 📦\n\n\nCode\npacman::p_load(\n  tidyverse,     # Core data manipulation and ggplot2 plotting\n  knitr,         # Dynamic report generation and rendering\n  patchwork,     # Combines multiple ggplot2 plots\n  ggthemes,      # Additional themes and visual styles\n  scales,        # Formatting axes, scales, and labels\n  ggtext,        # Rich text formatting in ggplot titles/labels\n  ggalt,         # Dumbbell, lollipop, and other advanced geoms\n  ggridges,      # Ridgeline plots to visualize distributions\n  ggpubr,        # Publication-ready ggplot2 enhancements\n  ggExtra,       # Marginal plots for added insight\n  cowplot,       # Publication-quality figure alignment\n  ggnewscale,    # Allows multiple color/fill scales in one ggplot\n  ggrepel        # Allows\n)\n\n\nLoading the Data and Taking a Glimpse of the Dataset 📂\n\n\nCode\n# Load the dataset\ndf &lt;- read_csv(\"data/respopagesex2024.csv\")\n\n\nThe dataset contains 60,424 rows and 6 columns. Each row represents the count of residents for a specific combination of planning area, subzone, age, sex, and year.\n\n\nCode\nglimpse(df)\n\n\nRows: 60,424\nColumns: 6\n$ PA   &lt;chr&gt; \"Ang Mo Kio\", \"Ang Mo Kio\", \"Ang Mo Kio\", \"Ang Mo Kio\", \"Ang Mo K…\n$ SZ   &lt;chr&gt; \"Ang Mo Kio Town Centre\", \"Ang Mo Kio Town Centre\", \"Ang Mo Kio T…\n$ Age  &lt;chr&gt; \"0\", \"0\", \"1\", \"1\", \"2\", \"2\", \"3\", \"3\", \"4\", \"4\", \"5\", \"5\", \"6\", …\n$ Sex  &lt;chr&gt; \"Males\", \"Females\", \"Males\", \"Females\", \"Males\", \"Females\", \"Male…\n$ Pop  &lt;dbl&gt; 10, 10, 10, 10, 10, 10, 10, 10, 30, 10, 20, 10, 20, 30, 30, 10, 3…\n$ Time &lt;dbl&gt; 2024, 2024, 2024, 2024, 2024, 2024, 2024, 2024, 2024, 2024, 2024,…\n\n\nWrangling, Cleaning & Transformation 🧹\n\n\nCode\ndf &lt;- df %&gt;%\n  mutate(Age = as.integer(Age)) %&gt;%  # Convert to numeric (100+ becomes NA)\n  drop_na(Age)                       # Remove missing values caused by conversion\n\ndf &lt;- df %&gt;%\n  mutate(AgeBand = cut(Age,\n    breaks = c(0, 5, 10, 15, 20, 25, 30, 35, 40, 45, 50, 55,\n               60, 65, 70, 75, 80, 85, 90, 95, 100, Inf),\n    labels = c(\"0-4\", \"5-9\", \"10-14\", \"15-19\", \"20-24\", \"25-29\",\n               \"30-34\", \"35-39\", \"40-44\", \"45-49\", \"50-54\",\n               \"55-59\", \"60-64\", \"65-69\", \"70-74\", \"75-79\",\n               \"80-84\", \"85-89\", \"90-94\", \"95-99\", \"100+\"),\n    right = FALSE))\n\n# For population pyramid (Age-Sex)\npyramid_data &lt;- df %&gt;%\n  group_by(Age, Sex) %&gt;%\n  summarise(Pop = sum(Pop), .groups = \"drop\")\n\n# For top 5 planning areas\ntop5_pa &lt;- df %&gt;%\n  group_by(PA) %&gt;%\n  summarise(Pop = sum(Pop), .groups = \"drop\") %&gt;%\n  slice_max(order_by = Pop, n = 5)\n\ndf &lt;- df %&gt;%\n  mutate(\n    PA = str_trim(str_to_upper(PA)),\n    Region = case_when(\n      PA %in% c(\"BISHAN\", \"BUKIT MERAH\", \"BUKIT TIMAH\", \"CENTRAL AREA\", \"DOWNTOWN CORE\",\n                \"GEYLANG\", \"KALLANG\", \"MARINA EAST\", \"MARINA SOUTH\", \"MUSEUM\", \"NEWTON\",\n                \"NOVENA\", \"ORCHARD\", \"OUTRAM\", \"PAYA LEBAR\", \"QUEENSTOWN\", \"RIVER VALLEY\",\n                \"ROCHOR\", \"SINGAPORE RIVER\", \"SOUTHERN ISLANDS\", \"STRAITS VIEW\", \"TANGLIN\",\n                \"TOA PAYOH\", \"MARINE PARADE\") ~ \"Central\",\n      PA %in% c(\"BEDOK\", \"CHANGI\", \"CHANGI BAY\", \"PASIR RIS\", \"TAMPINES\") ~ \"East\",\n      PA %in% c(\"CENTRAL WATER CATCHMENT\", \"MANDAI\", \"SEMBABWANG\", \"SIMPANG\",\n                \"SUNGEI KADUT\", \"WOODLANDS\", \"YISHUN\", \"SEMBAWANG\") ~ \"North\",\n      PA %in% c(\"ANG MO KIO\", \"HOUGANG\", \"NORTH-EASTERN ISLANDS\", \"PUNGGOL\",\n                \"SELETAR\", \"SENGKANG\", \"SERANGOON\") ~ \"North-East\",\n      PA %in% c(\"BOON LAY\", \"BUKIT BATOK\", \"BUKIT PANJANG\", \"CHOA CHU KANG\",\n                \"CLEMENTI\", \"JURONG EAST\", \"JURONG WEST\", \"LIM CHU KANG\",\n                \"PIONEER\", \"TENGAH\", \"TUAS\", \"WESTERN ISLANDS\",\n                \"WESTERN WATER CATCHMENT\") ~ \"West\",\n      TRUE ~ NA_character_\n    )\n  )\n\ndf_median &lt;- df %&gt;%\n  arrange(Age) %&gt;%\n  mutate(\n    cum_pop = cumsum(Pop),\n    total_pop = sum(Pop)\n  ) %&gt;%\n  filter(cum_pop &gt;= total_pop / 2) %&gt;%\n  slice(1)\n\nmedian_age &lt;- df_median$Age\n\ndf &lt;- df %&gt;%\n  mutate(\n    GenerationBand = case_when(\n      Age &lt;= 24 ~ \"Alpha & Gen Z (0–24)\",\n      Age &lt;= 34 ~ \"Young Adults (25–34)\",\n      Age &lt;= 54 ~ \"Working Adults (35–54)\",\n      Age &lt;= 64 ~ \"Silver Generation (55–64)\",\n      Age &lt;= 74 ~ \"Merdeka Generation (65–74)\",\n      TRUE ~ \"Pioneer Generation (75+)\"\n    ),\n    GenerationBand = factor(GenerationBand, levels = c(\n      \"Alpha & Gen Z (0–24)\", \"Young Adults (25–34)\", \"Working Adults (35–54)\",\n      \"Silver Generation (55–64)\", \"Merdeka Generation (65–74)\", \"Pioneer Generation (75+)\"\n    ))\n  )\n\n\n🔍 Interpretation\nThis interactive scatterplot allows users to:\nIdentify areas with high elderly population shares despite small total populations (e.g., Outram).\nCompare elderly shares across all areas by hovering over each dot.\nUnderstand population pressure points for aging infrastructure and services.\n📌 Conclusion\nDavid’s work is well-designed and informative. With just a few enhancements such as interactivity, annotation, and layout consistency, the overall impact of the visuals can be significantly increased. The proposed makeover demonstrates how a single interactive visual can provide richer engagement while maintaining visual clarity."
  },
  {
    "objectID": "Take-home_Exercise/Take-home_Ex01/Take-home_Ex02.html#review-of-peer-submission-david-chiam",
    "href": "Take-home_Exercise/Take-home_Ex01/Take-home_Ex02.html#review-of-peer-submission-david-chiam",
    "title": "Take-home_Ex01-phaseII",
    "section": "",
    "text": "refer:https://isss608-davidchiam.netlify.app/take-home_ex/take-home_ex01/take-home_ex01\n\n\n1. Effective Use of Visual Encodings\nDavid effectively applies core visualisation techniques by using mirrored bar charts for population pyramids and boxplots for median age distribution. In particular:\n\nThe mirrored bars in the pyramid chart enable immediate comparison between male and female cohorts.\nThe use of boxplots is apt for showing variability and central tendency (e.g., median age) across planning areas.\nIn the stacked bar chart, gender and age group differences are clearly segmented, leveraging hue and spatial separation.\n\n2. Logical Flow and Visual Hierarchy\nThe visualisation follows a logical and structured flow:\n\nIt begins with a high-level overview (e.g., gender share), then progressively narrows to specific planning area comparisons.\nThis top-down design facilitates cognitive flow and narrative pacing.\nClear section titles and cohesive subplot sequencing enhance usability.\n\n3. Consistent and Minimalist Visual Theme\nDavid’s work maintains high aesthetic discipline:\n\nMuted pastel tones reduce cognitive overload.\nConsistent typography and plot margin spacing lend a polished appearance.\nAxes, titles, and legends are harmonised across charts, which ensures clarity without redundancy.\n\n\n\n\n\n1. Lack of Annotations and Contextual Labels\nWhile David’s charts are clean, they often lack direct data labels or annotations. This limits interpretability:\n\n✅ Fix: The makeover scatterplot adds dynamic labeling for outliers (e.g., Outram with high elderly share), improving insight at-a-glance.\n\n2. Axis and Formatting Inconsistencies\nThere are inconsistencies in axis label units (e.g., some show absolute numbers, others show percentages):\n\n✅ Fix: In our makeover, all values are formatted uniformly using percent_format() and /1000 suffixes for population.\n\n3. Redundant Charts and Missed Insight Opportunities\nSome charts display similar gender breakdowns without revealing new dimensions. At the same time, insightful metrics like the elderly/youth ratio are missing:\n\n✅ Fix: We introduced a derived metric (Elderly_to_Youth) and plotted it against population size and aging ratio, unveiling patterns not covered in the original submission.\n\n\n\n\n\nLoad required packages 📦\n\n\nCode\npacman::p_load(\n  tidyverse,     # Core data manipulation and ggplot2 plotting\n  knitr,         # Dynamic report generation and rendering\n  patchwork,     # Combines multiple ggplot2 plots\n  ggthemes,      # Additional themes and visual styles\n  scales,        # Formatting axes, scales, and labels\n  ggtext,        # Rich text formatting in ggplot titles/labels\n  ggalt,         # Dumbbell, lollipop, and other advanced geoms\n  ggridges,      # Ridgeline plots to visualize distributions\n  ggpubr,        # Publication-ready ggplot2 enhancements\n  ggExtra,       # Marginal plots for added insight\n  cowplot,       # Publication-quality figure alignment\n  ggnewscale,    # Allows multiple color/fill scales in one ggplot\n  ggrepel        # Allows\n)\n\n\nLoading the Data and Taking a Glimpse of the Dataset 📂\n\n\nCode\n# Load the dataset\ndf &lt;- read_csv(\"data/respopagesex2024.csv\")\n\n\nThe dataset contains 60,424 rows and 6 columns. Each row represents the count of residents for a specific combination of planning area, subzone, age, sex, and year.\n\n\nCode\nglimpse(df)\n\n\nRows: 60,424\nColumns: 6\n$ PA   &lt;chr&gt; \"Ang Mo Kio\", \"Ang Mo Kio\", \"Ang Mo Kio\", \"Ang Mo Kio\", \"Ang Mo K…\n$ SZ   &lt;chr&gt; \"Ang Mo Kio Town Centre\", \"Ang Mo Kio Town Centre\", \"Ang Mo Kio T…\n$ Age  &lt;chr&gt; \"0\", \"0\", \"1\", \"1\", \"2\", \"2\", \"3\", \"3\", \"4\", \"4\", \"5\", \"5\", \"6\", …\n$ Sex  &lt;chr&gt; \"Males\", \"Females\", \"Males\", \"Females\", \"Males\", \"Females\", \"Male…\n$ Pop  &lt;dbl&gt; 10, 10, 10, 10, 10, 10, 10, 10, 30, 10, 20, 10, 20, 30, 30, 10, 3…\n$ Time &lt;dbl&gt; 2024, 2024, 2024, 2024, 2024, 2024, 2024, 2024, 2024, 2024, 2024,…\n\n\nWrangling, Cleaning & Transformation 🧹\n\n\nCode\ndf &lt;- df %&gt;%\n  mutate(Age = as.integer(Age)) %&gt;%  # Convert to numeric (100+ becomes NA)\n  drop_na(Age)                       # Remove missing values caused by conversion\n\ndf &lt;- df %&gt;%\n  mutate(AgeBand = cut(Age,\n    breaks = c(0, 5, 10, 15, 20, 25, 30, 35, 40, 45, 50, 55,\n               60, 65, 70, 75, 80, 85, 90, 95, 100, Inf),\n    labels = c(\"0-4\", \"5-9\", \"10-14\", \"15-19\", \"20-24\", \"25-29\",\n               \"30-34\", \"35-39\", \"40-44\", \"45-49\", \"50-54\",\n               \"55-59\", \"60-64\", \"65-69\", \"70-74\", \"75-79\",\n               \"80-84\", \"85-89\", \"90-94\", \"95-99\", \"100+\"),\n    right = FALSE))\n\n# For population pyramid (Age-Sex)\npyramid_data &lt;- df %&gt;%\n  group_by(Age, Sex) %&gt;%\n  summarise(Pop = sum(Pop), .groups = \"drop\")\n\n# For top 5 planning areas\ntop5_pa &lt;- df %&gt;%\n  group_by(PA) %&gt;%\n  summarise(Pop = sum(Pop), .groups = \"drop\") %&gt;%\n  slice_max(order_by = Pop, n = 5)\n\ndf &lt;- df %&gt;%\n  mutate(\n    PA = str_trim(str_to_upper(PA)),\n    Region = case_when(\n      PA %in% c(\"BISHAN\", \"BUKIT MERAH\", \"BUKIT TIMAH\", \"CENTRAL AREA\", \"DOWNTOWN CORE\",\n                \"GEYLANG\", \"KALLANG\", \"MARINA EAST\", \"MARINA SOUTH\", \"MUSEUM\", \"NEWTON\",\n                \"NOVENA\", \"ORCHARD\", \"OUTRAM\", \"PAYA LEBAR\", \"QUEENSTOWN\", \"RIVER VALLEY\",\n                \"ROCHOR\", \"SINGAPORE RIVER\", \"SOUTHERN ISLANDS\", \"STRAITS VIEW\", \"TANGLIN\",\n                \"TOA PAYOH\", \"MARINE PARADE\") ~ \"Central\",\n      PA %in% c(\"BEDOK\", \"CHANGI\", \"CHANGI BAY\", \"PASIR RIS\", \"TAMPINES\") ~ \"East\",\n      PA %in% c(\"CENTRAL WATER CATCHMENT\", \"MANDAI\", \"SEMBABWANG\", \"SIMPANG\",\n                \"SUNGEI KADUT\", \"WOODLANDS\", \"YISHUN\", \"SEMBAWANG\") ~ \"North\",\n      PA %in% c(\"ANG MO KIO\", \"HOUGANG\", \"NORTH-EASTERN ISLANDS\", \"PUNGGOL\",\n                \"SELETAR\", \"SENGKANG\", \"SERANGOON\") ~ \"North-East\",\n      PA %in% c(\"BOON LAY\", \"BUKIT BATOK\", \"BUKIT PANJANG\", \"CHOA CHU KANG\",\n                \"CLEMENTI\", \"JURONG EAST\", \"JURONG WEST\", \"LIM CHU KANG\",\n                \"PIONEER\", \"TENGAH\", \"TUAS\", \"WESTERN ISLANDS\",\n                \"WESTERN WATER CATCHMENT\") ~ \"West\",\n      TRUE ~ NA_character_\n    )\n  )\n\ndf_median &lt;- df %&gt;%\n  arrange(Age) %&gt;%\n  mutate(\n    cum_pop = cumsum(Pop),\n    total_pop = sum(Pop)\n  ) %&gt;%\n  filter(cum_pop &gt;= total_pop / 2) %&gt;%\n  slice(1)\n\nmedian_age &lt;- df_median$Age\n\ndf &lt;- df %&gt;%\n  mutate(\n    GenerationBand = case_when(\n      Age &lt;= 24 ~ \"Alpha & Gen Z (0–24)\",\n      Age &lt;= 34 ~ \"Young Adults (25–34)\",\n      Age &lt;= 54 ~ \"Working Adults (35–54)\",\n      Age &lt;= 64 ~ \"Silver Generation (55–64)\",\n      Age &lt;= 74 ~ \"Merdeka Generation (65–74)\",\n      TRUE ~ \"Pioneer Generation (75+)\"\n    ),\n    GenerationBand = factor(GenerationBand, levels = c(\n      \"Alpha & Gen Z (0–24)\", \"Young Adults (25–34)\", \"Working Adults (35–54)\",\n      \"Silver Generation (55–64)\", \"Merdeka Generation (65–74)\", \"Pioneer Generation (75+)\"\n    ))\n  )\n\n\n🔍 Interpretation\nThis interactive scatterplot allows users to:\nIdentify areas with high elderly population shares despite small total populations (e.g., Outram).\nCompare elderly shares across all areas by hovering over each dot.\nUnderstand population pressure points for aging infrastructure and services.\n📌 Conclusion\nDavid’s work is well-designed and informative. With just a few enhancements such as interactivity, annotation, and layout consistency, the overall impact of the visuals can be significantly increased. The proposed makeover demonstrates how a single interactive visual can provide richer engagement while maintaining visual clarity."
  },
  {
    "objectID": "Hands-on_Exercise/Hands-on_Ex04/Hands-on_Ex04.html",
    "href": "Hands-on_Exercise/Hands-on_Ex04/Hands-on_Ex04.html",
    "title": "Hands-on_Ex04",
    "section": "",
    "text": "The following section was modified according to https://r4va.netlify.app/chap09.\n\n\nCode\npacman::p_load(ggdist, ggridges, ggthemes,\n               colorspace, tidyverse)\n\nexam_data &lt;- read_csv(\"data/Exam_data.csv\")\n\n\nVisualizing Distribution with Ridgeline Plot When to Use Ridgeline Plots:\nWhen you have a medium to high number of groups (more than 5), as it saves space. If there is a clear pattern or ranking among groups, making insights easier to spot. When you want to efficiently visualize distributions without using separate plots. When Not to Use Ridgeline Plots:\nIf there are fewer than 5 groups, other distribution plots (e.g., boxplots) may be better. When groups lack a clear pattern, as overlapping can make the plot messy. If hiding some data due to overlap reduces clarity rather than improving visualization.\n\n\n\n\nCode\nggplot(exam_data, \n       aes(x = ENGLISH, \n           y = CLASS)) +\n  geom_density_ridges(\n    scale = 3,\n    rel_min_height = 0.01,\n    bandwidth = 3.4,\n    fill = lighten(\"#7097BB\", .3),\n    color = \"white\"\n  ) +\n  scale_x_continuous(\n    name = \"English grades\",\n    expand = c(0, 0)\n    ) +\n  scale_y_discrete(name = NULL, expand = expansion(add = c(0.2, 2.6))) +\n  theme_ridges()\n\n\n\n\n\n\n\n\n\nDefaultWith quantile lines\n\n\n\n\nCode\nggplot(data = exam_data, \n       aes(x = ENGLISH, \n           y = CLASS,\n           fill = stat(x))) +\n  geom_density_ridges_gradient(\n    scale = 3,\n    # alpha = 0.8,  # This is not allowed\n    rel_min_height = 0.01) +\n  scale_fill_viridis_c(name = \"Score\",\n                       option = \"C\") +\n  scale_x_continuous(\n    name = \"English grades\",\n    expand = c(0, 0)\n    ) +\n  scale_y_discrete(name = NULL, \n                   expand = expansion(add = c(0.2, 2.6))) +\n  theme_ridges()\n\n\n\n\n\n\n\n\n\nCode\nggplot(data = exam_data, \n       aes(x = ENGLISH, \n           y = CLASS,\n           fill = factor(stat(quantile)))) +\n  geom_density_ridges_gradient(\n    scale = 3,\n    calc_ecdf = TRUE, \n    quantiles = 4,\n    quantile_lines = TRUE,\n    rel_min_height = 0.01) +\n  scale_fill_viridis_d(name = \"Quartiles\") +  # d: discrete\n  scale_x_continuous(\n    name = \"English grades\",\n    expand = c(0, 0)\n    ) +\n  scale_y_discrete(name = NULL, \n                   expand = expansion(add = c(0.2, 2.6))) +\n  theme_ridges()\n\n\n\n\n\n\n\n\n\n\n\n\nTail ProbabilitySpecifying Cut Points\n\n\n\n\nCode\nggplot(exam_data,\n       aes(x = ENGLISH, \n           y = CLASS, \n           fill = 0.5 - abs(0.5-stat(ecdf)))) +\n  stat_density_ridges(geom = \"density_ridges_gradient\", \n                      calc_ecdf = TRUE) +\n  scale_fill_viridis_c(name = \"Tail probability\",\n                       direction = -1) +\n  theme_ridges()\n\n\n\n\n\n\n\n\n\nCode\nggplot(data = exam_data,\n       aes(x = ENGLISH, \n           y = CLASS, \n           fill = factor(stat(quantile)))) +\n  stat_density_ridges(\n    geom = \"density_ridges_gradient\",\n    calc_ecdf = TRUE, \n    quantiles = c(0.025, 0.975)\n    ) +\n  scale_fill_manual(\n    name = \"Probability\",\n    values = c(\"#FF0000A0\", \"#A0A0A0A0\", \"#0000FFA0\"),\n    labels = c(\"(0, 0.025]\", \"(0.025, 0.975]\", \"(0.975, 1]\")\n  ) +\n  theme_ridges()\n\n\n\n\n\n\n\n\n\n\n\n\nRaincloud Plot is a data visualisation techniques that produces a half-density to a distribution plot. It gets the name because the density plot is in the shape of a “raincloud”. The raincloud (half-density) plot enhances the traditional box-plot by highlighting multiple modalities (an indicator that groups may exist). The boxplot does not show where densities are clustered, but the raincloud plot does!\nIn this section, we create a raincloud plot to visualise the distribution of English score by race. It will be created by using functions provided by ggdist and ggplot2 packages.\n\n\nCode\nggplot(data = exam_data, \n       aes(x = RACE,\n           y = ENGLISH,\n           fill = RACE,\n           color = RACE)) +\n  stat_slab(adjust = 0.5,  # Bandwidth for density estimate; &lt; 1 more \"curvature\"\n            justification = -0.2,  # Without this the boxplot will overlap with the slab\n            scale = 0.5) +  # Used this to prevent overlapping with the dots from previous category\n  geom_boxplot(width = .10,\n               outlier.shape = NA,\n               alpha = 0.5) +\n    stat_dots(side = \"left\", \n            justification = 1.1, \n            # binwidth = .5, \n            dotsize = 2) +\n  coord_flip() +\n  theme_classic() +\n  theme(legend.position = \"none\")\n\n\n\n\n\n\n\n\n\n\n\nTip\n\n\n\nWhen to Use Best for smaller datasets to avoid overcrowding. Useful for visualizing distribution patterns and density clusters. Highlights where data points are concentrated, unlike a standard boxplot.\n\n\n\n\n\n\n\n\nNote\n\n\n\nWe don’t need to use half_eye plot and remove the “line & eye portion”, we can just directly use the slab plot. Refer to https://cran.r-project.org/web/packages/ggdist/vignettes/slabinterval.html."
  },
  {
    "objectID": "Take-home_Exercise/Take-home_Ex01/Take-home_Ex01-phaseII.html",
    "href": "Take-home_Exercise/Take-home_Ex01/Take-home_Ex01-phaseII.html",
    "title": "Take-home_Ex01-phaseII",
    "section": "",
    "text": "refer:https://isss608-davidchiam.netlify.app/take-home_ex/take-home_ex01/take-home_ex01\n\n\n1. Effective Use of Visual Encodings\nDavid effectively applies core visualisation techniques by using mirrored bar charts for population pyramids and boxplots for median age distribution. In particular:\n\nThe mirrored bars in the pyramid chart enable immediate comparison between male and female cohorts.\nThe use of boxplots is apt for showing variability and central tendency (e.g., median age) across planning areas.\nIn the stacked bar chart, gender and age group differences are clearly segmented, leveraging hue and spatial separation.\n\n2. Logical Flow and Visual Hierarchy\nThe visualisation follows a logical and structured flow:\n\nIt begins with a high-level overview (e.g., gender share), then progressively narrows to specific planning area comparisons.\nThis top-down design facilitates cognitive flow and narrative pacing.\nClear section titles and cohesive subplot sequencing enhance usability.\n\n3. Consistent and Minimalist Visual Theme\nDavid’s work maintains high aesthetic discipline:\n\nMuted pastel tones reduce cognitive overload.\nConsistent typography and plot margin spacing lend a polished appearance.\nAxes, titles, and legends are harmonised across charts, which ensures clarity without redundancy.\n\n\n\n\n\n1. Lack of Annotations and Contextual Labels\nWhile David’s charts are clean, they often lack direct data labels or annotations. This limits interpretability:\n\n✅ Fix: The makeover scatterplot adds dynamic labeling for outliers (e.g., Outram with high elderly share), improving insight at-a-glance.\n\n2. Axis and Formatting Inconsistencies\nThere are inconsistencies in axis label units (e.g., some show absolute numbers, others show percentages):\n\n✅ Fix: In our makeover, all values are formatted uniformly using percent_format() and /1000 suffixes for population.\n\n3. Redundant Charts and Missed Insight Opportunities\nSome charts display similar gender breakdowns without revealing new dimensions. At the same time, insightful metrics like the elderly/youth ratio are missing:\n\n✅ Fix: We introduced a derived metric (Elderly_to_Youth) and plotted it against population size and aging ratio, unveiling patterns not covered in the original submission.\n\n\n\n\n\nLoad required packages 📦\n\n\nCode\npacman::p_load(\n  tidyverse,     # Core data manipulation and ggplot2 plotting\n  knitr,         # Dynamic report generation and rendering\n  patchwork,     # Combines multiple ggplot2 plots\n  ggthemes,      # Additional themes and visual styles\n  scales,        # Formatting axes, scales, and labels\n  ggtext,        # Rich text formatting in ggplot titles/labels\n  ggalt,         # Dumbbell, lollipop, and other advanced geoms\n  ggridges,      # Ridgeline plots to visualize distributions\n  ggpubr,        # Publication-ready ggplot2 enhancements\n  ggExtra,       # Marginal plots for added insight\n  cowplot,       # Publication-quality figure alignment\n  ggnewscale,    # Allows multiple color/fill scales in one ggplot\n  ggrepel        # Allows\n)\n\n\nLoading the Data and Taking a Glimpse of the Dataset 📂\n\n\nCode\n# Load the dataset\ndf &lt;- read_csv(\"data/respopagesex2024.csv\")\n\n\nThe dataset contains 60,424 rows and 6 columns. Each row represents the count of residents for a specific combination of planning area, subzone, age, sex, and year.\n\n\nCode\nglimpse(df)\n\n\nRows: 60,424\nColumns: 6\n$ PA   &lt;chr&gt; \"Ang Mo Kio\", \"Ang Mo Kio\", \"Ang Mo Kio\", \"Ang Mo Kio\", \"Ang Mo K…\n$ SZ   &lt;chr&gt; \"Ang Mo Kio Town Centre\", \"Ang Mo Kio Town Centre\", \"Ang Mo Kio T…\n$ Age  &lt;chr&gt; \"0\", \"0\", \"1\", \"1\", \"2\", \"2\", \"3\", \"3\", \"4\", \"4\", \"5\", \"5\", \"6\", …\n$ Sex  &lt;chr&gt; \"Males\", \"Females\", \"Males\", \"Females\", \"Males\", \"Females\", \"Male…\n$ Pop  &lt;dbl&gt; 10, 10, 10, 10, 10, 10, 10, 10, 30, 10, 20, 10, 20, 30, 30, 10, 3…\n$ Time &lt;dbl&gt; 2024, 2024, 2024, 2024, 2024, 2024, 2024, 2024, 2024, 2024, 2024,…\n\n\nWrangling, Cleaning & Transformation 🧹\n\n\nCode\ndf &lt;- df %&gt;%\n  mutate(Age = as.integer(Age)) %&gt;%  # Convert to numeric (100+ becomes NA)\n  drop_na(Age)                       # Remove missing values caused by conversion\n\ndf &lt;- df %&gt;%\n  mutate(AgeBand = cut(Age,\n    breaks = c(0, 5, 10, 15, 20, 25, 30, 35, 40, 45, 50, 55,\n               60, 65, 70, 75, 80, 85, 90, 95, 100, Inf),\n    labels = c(\"0-4\", \"5-9\", \"10-14\", \"15-19\", \"20-24\", \"25-29\",\n               \"30-34\", \"35-39\", \"40-44\", \"45-49\", \"50-54\",\n               \"55-59\", \"60-64\", \"65-69\", \"70-74\", \"75-79\",\n               \"80-84\", \"85-89\", \"90-94\", \"95-99\", \"100+\"),\n    right = FALSE))\n\n# For population pyramid (Age-Sex)\npyramid_data &lt;- df %&gt;%\n  group_by(Age, Sex) %&gt;%\n  summarise(Pop = sum(Pop), .groups = \"drop\")\n\n# For top 5 planning areas\ntop5_pa &lt;- df %&gt;%\n  group_by(PA) %&gt;%\n  summarise(Pop = sum(Pop), .groups = \"drop\") %&gt;%\n  slice_max(order_by = Pop, n = 5)\n\ndf &lt;- df %&gt;%\n  mutate(\n    PA = str_trim(str_to_upper(PA)),\n    Region = case_when(\n      PA %in% c(\"BISHAN\", \"BUKIT MERAH\", \"BUKIT TIMAH\", \"CENTRAL AREA\", \"DOWNTOWN CORE\",\n                \"GEYLANG\", \"KALLANG\", \"MARINA EAST\", \"MARINA SOUTH\", \"MUSEUM\", \"NEWTON\",\n                \"NOVENA\", \"ORCHARD\", \"OUTRAM\", \"PAYA LEBAR\", \"QUEENSTOWN\", \"RIVER VALLEY\",\n                \"ROCHOR\", \"SINGAPORE RIVER\", \"SOUTHERN ISLANDS\", \"STRAITS VIEW\", \"TANGLIN\",\n                \"TOA PAYOH\", \"MARINE PARADE\") ~ \"Central\",\n      PA %in% c(\"BEDOK\", \"CHANGI\", \"CHANGI BAY\", \"PASIR RIS\", \"TAMPINES\") ~ \"East\",\n      PA %in% c(\"CENTRAL WATER CATCHMENT\", \"MANDAI\", \"SEMBABWANG\", \"SIMPANG\",\n                \"SUNGEI KADUT\", \"WOODLANDS\", \"YISHUN\", \"SEMBAWANG\") ~ \"North\",\n      PA %in% c(\"ANG MO KIO\", \"HOUGANG\", \"NORTH-EASTERN ISLANDS\", \"PUNGGOL\",\n                \"SELETAR\", \"SENGKANG\", \"SERANGOON\") ~ \"North-East\",\n      PA %in% c(\"BOON LAY\", \"BUKIT BATOK\", \"BUKIT PANJANG\", \"CHOA CHU KANG\",\n                \"CLEMENTI\", \"JURONG EAST\", \"JURONG WEST\", \"LIM CHU KANG\",\n                \"PIONEER\", \"TENGAH\", \"TUAS\", \"WESTERN ISLANDS\",\n                \"WESTERN WATER CATCHMENT\") ~ \"West\",\n      TRUE ~ NA_character_\n    )\n  )\n\ndf_median &lt;- df %&gt;%\n  arrange(Age) %&gt;%\n  mutate(\n    cum_pop = cumsum(Pop),\n    total_pop = sum(Pop)\n  ) %&gt;%\n  filter(cum_pop &gt;= total_pop / 2) %&gt;%\n  slice(1)\n\nmedian_age &lt;- df_median$Age\n\ndf &lt;- df %&gt;%\n  mutate(\n    GenerationBand = case_when(\n      Age &lt;= 24 ~ \"Alpha & Gen Z (0–24)\",\n      Age &lt;= 34 ~ \"Young Adults (25–34)\",\n      Age &lt;= 54 ~ \"Working Adults (35–54)\",\n      Age &lt;= 64 ~ \"Silver Generation (55–64)\",\n      Age &lt;= 74 ~ \"Merdeka Generation (65–74)\",\n      TRUE ~ \"Pioneer Generation (75+)\"\n    ),\n    GenerationBand = factor(GenerationBand, levels = c(\n      \"Alpha & Gen Z (0–24)\", \"Young Adults (25–34)\", \"Working Adults (35–54)\",\n      \"Silver Generation (55–64)\", \"Merdeka Generation (65–74)\", \"Pioneer Generation (75+)\"\n    ))\n  )\n\n\n🔍 Interpretation\nThis interactive scatterplot allows users to:\nIdentify areas with high elderly population shares despite small total populations (e.g., Outram).\nCompare elderly shares across all areas by hovering over each dot.\nUnderstand population pressure points for aging infrastructure and services.\n📌 Conclusion\nDavid’s work is well-designed and informative. With just a few enhancements such as interactivity, annotation, and layout consistency, the overall impact of the visuals can be significantly increased. The proposed makeover demonstrates how a single interactive visual can provide richer engagement while maintaining visual clarity."
  },
  {
    "objectID": "Take-home_Exercise/Take-home_Ex01/Take-home_Ex01-phaseII.html#review-of-peer-submission-david-chiam",
    "href": "Take-home_Exercise/Take-home_Ex01/Take-home_Ex01-phaseII.html#review-of-peer-submission-david-chiam",
    "title": "Take-home_Ex01-phaseII",
    "section": "",
    "text": "refer:https://isss608-davidchiam.netlify.app/take-home_ex/take-home_ex01/take-home_ex01\n\n\n1. Effective Use of Visual Encodings\nDavid effectively applies core visualisation techniques by using mirrored bar charts for population pyramids and boxplots for median age distribution. In particular:\n\nThe mirrored bars in the pyramid chart enable immediate comparison between male and female cohorts.\nThe use of boxplots is apt for showing variability and central tendency (e.g., median age) across planning areas.\nIn the stacked bar chart, gender and age group differences are clearly segmented, leveraging hue and spatial separation.\n\n2. Logical Flow and Visual Hierarchy\nThe visualisation follows a logical and structured flow:\n\nIt begins with a high-level overview (e.g., gender share), then progressively narrows to specific planning area comparisons.\nThis top-down design facilitates cognitive flow and narrative pacing.\nClear section titles and cohesive subplot sequencing enhance usability.\n\n3. Consistent and Minimalist Visual Theme\nDavid’s work maintains high aesthetic discipline:\n\nMuted pastel tones reduce cognitive overload.\nConsistent typography and plot margin spacing lend a polished appearance.\nAxes, titles, and legends are harmonised across charts, which ensures clarity without redundancy.\n\n\n\n\n\n1. Lack of Annotations and Contextual Labels\nWhile David’s charts are clean, they often lack direct data labels or annotations. This limits interpretability:\n\n✅ Fix: The makeover scatterplot adds dynamic labeling for outliers (e.g., Outram with high elderly share), improving insight at-a-glance.\n\n2. Axis and Formatting Inconsistencies\nThere are inconsistencies in axis label units (e.g., some show absolute numbers, others show percentages):\n\n✅ Fix: In our makeover, all values are formatted uniformly using percent_format() and /1000 suffixes for population.\n\n3. Redundant Charts and Missed Insight Opportunities\nSome charts display similar gender breakdowns without revealing new dimensions. At the same time, insightful metrics like the elderly/youth ratio are missing:\n\n✅ Fix: We introduced a derived metric (Elderly_to_Youth) and plotted it against population size and aging ratio, unveiling patterns not covered in the original submission.\n\n\n\n\n\nLoad required packages 📦\n\n\nCode\npacman::p_load(\n  tidyverse,     # Core data manipulation and ggplot2 plotting\n  knitr,         # Dynamic report generation and rendering\n  patchwork,     # Combines multiple ggplot2 plots\n  ggthemes,      # Additional themes and visual styles\n  scales,        # Formatting axes, scales, and labels\n  ggtext,        # Rich text formatting in ggplot titles/labels\n  ggalt,         # Dumbbell, lollipop, and other advanced geoms\n  ggridges,      # Ridgeline plots to visualize distributions\n  ggpubr,        # Publication-ready ggplot2 enhancements\n  ggExtra,       # Marginal plots for added insight\n  cowplot,       # Publication-quality figure alignment\n  ggnewscale,    # Allows multiple color/fill scales in one ggplot\n  ggrepel        # Allows\n)\n\n\nLoading the Data and Taking a Glimpse of the Dataset 📂\n\n\nCode\n# Load the dataset\ndf &lt;- read_csv(\"data/respopagesex2024.csv\")\n\n\nThe dataset contains 60,424 rows and 6 columns. Each row represents the count of residents for a specific combination of planning area, subzone, age, sex, and year.\n\n\nCode\nglimpse(df)\n\n\nRows: 60,424\nColumns: 6\n$ PA   &lt;chr&gt; \"Ang Mo Kio\", \"Ang Mo Kio\", \"Ang Mo Kio\", \"Ang Mo Kio\", \"Ang Mo K…\n$ SZ   &lt;chr&gt; \"Ang Mo Kio Town Centre\", \"Ang Mo Kio Town Centre\", \"Ang Mo Kio T…\n$ Age  &lt;chr&gt; \"0\", \"0\", \"1\", \"1\", \"2\", \"2\", \"3\", \"3\", \"4\", \"4\", \"5\", \"5\", \"6\", …\n$ Sex  &lt;chr&gt; \"Males\", \"Females\", \"Males\", \"Females\", \"Males\", \"Females\", \"Male…\n$ Pop  &lt;dbl&gt; 10, 10, 10, 10, 10, 10, 10, 10, 30, 10, 20, 10, 20, 30, 30, 10, 3…\n$ Time &lt;dbl&gt; 2024, 2024, 2024, 2024, 2024, 2024, 2024, 2024, 2024, 2024, 2024,…\n\n\nWrangling, Cleaning & Transformation 🧹\n\n\nCode\ndf &lt;- df %&gt;%\n  mutate(Age = as.integer(Age)) %&gt;%  # Convert to numeric (100+ becomes NA)\n  drop_na(Age)                       # Remove missing values caused by conversion\n\ndf &lt;- df %&gt;%\n  mutate(AgeBand = cut(Age,\n    breaks = c(0, 5, 10, 15, 20, 25, 30, 35, 40, 45, 50, 55,\n               60, 65, 70, 75, 80, 85, 90, 95, 100, Inf),\n    labels = c(\"0-4\", \"5-9\", \"10-14\", \"15-19\", \"20-24\", \"25-29\",\n               \"30-34\", \"35-39\", \"40-44\", \"45-49\", \"50-54\",\n               \"55-59\", \"60-64\", \"65-69\", \"70-74\", \"75-79\",\n               \"80-84\", \"85-89\", \"90-94\", \"95-99\", \"100+\"),\n    right = FALSE))\n\n# For population pyramid (Age-Sex)\npyramid_data &lt;- df %&gt;%\n  group_by(Age, Sex) %&gt;%\n  summarise(Pop = sum(Pop), .groups = \"drop\")\n\n# For top 5 planning areas\ntop5_pa &lt;- df %&gt;%\n  group_by(PA) %&gt;%\n  summarise(Pop = sum(Pop), .groups = \"drop\") %&gt;%\n  slice_max(order_by = Pop, n = 5)\n\ndf &lt;- df %&gt;%\n  mutate(\n    PA = str_trim(str_to_upper(PA)),\n    Region = case_when(\n      PA %in% c(\"BISHAN\", \"BUKIT MERAH\", \"BUKIT TIMAH\", \"CENTRAL AREA\", \"DOWNTOWN CORE\",\n                \"GEYLANG\", \"KALLANG\", \"MARINA EAST\", \"MARINA SOUTH\", \"MUSEUM\", \"NEWTON\",\n                \"NOVENA\", \"ORCHARD\", \"OUTRAM\", \"PAYA LEBAR\", \"QUEENSTOWN\", \"RIVER VALLEY\",\n                \"ROCHOR\", \"SINGAPORE RIVER\", \"SOUTHERN ISLANDS\", \"STRAITS VIEW\", \"TANGLIN\",\n                \"TOA PAYOH\", \"MARINE PARADE\") ~ \"Central\",\n      PA %in% c(\"BEDOK\", \"CHANGI\", \"CHANGI BAY\", \"PASIR RIS\", \"TAMPINES\") ~ \"East\",\n      PA %in% c(\"CENTRAL WATER CATCHMENT\", \"MANDAI\", \"SEMBABWANG\", \"SIMPANG\",\n                \"SUNGEI KADUT\", \"WOODLANDS\", \"YISHUN\", \"SEMBAWANG\") ~ \"North\",\n      PA %in% c(\"ANG MO KIO\", \"HOUGANG\", \"NORTH-EASTERN ISLANDS\", \"PUNGGOL\",\n                \"SELETAR\", \"SENGKANG\", \"SERANGOON\") ~ \"North-East\",\n      PA %in% c(\"BOON LAY\", \"BUKIT BATOK\", \"BUKIT PANJANG\", \"CHOA CHU KANG\",\n                \"CLEMENTI\", \"JURONG EAST\", \"JURONG WEST\", \"LIM CHU KANG\",\n                \"PIONEER\", \"TENGAH\", \"TUAS\", \"WESTERN ISLANDS\",\n                \"WESTERN WATER CATCHMENT\") ~ \"West\",\n      TRUE ~ NA_character_\n    )\n  )\n\ndf_median &lt;- df %&gt;%\n  arrange(Age) %&gt;%\n  mutate(\n    cum_pop = cumsum(Pop),\n    total_pop = sum(Pop)\n  ) %&gt;%\n  filter(cum_pop &gt;= total_pop / 2) %&gt;%\n  slice(1)\n\nmedian_age &lt;- df_median$Age\n\ndf &lt;- df %&gt;%\n  mutate(\n    GenerationBand = case_when(\n      Age &lt;= 24 ~ \"Alpha & Gen Z (0–24)\",\n      Age &lt;= 34 ~ \"Young Adults (25–34)\",\n      Age &lt;= 54 ~ \"Working Adults (35–54)\",\n      Age &lt;= 64 ~ \"Silver Generation (55–64)\",\n      Age &lt;= 74 ~ \"Merdeka Generation (65–74)\",\n      TRUE ~ \"Pioneer Generation (75+)\"\n    ),\n    GenerationBand = factor(GenerationBand, levels = c(\n      \"Alpha & Gen Z (0–24)\", \"Young Adults (25–34)\", \"Working Adults (35–54)\",\n      \"Silver Generation (55–64)\", \"Merdeka Generation (65–74)\", \"Pioneer Generation (75+)\"\n    ))\n  )\n\n\n🔍 Interpretation\nThis interactive scatterplot allows users to:\nIdentify areas with high elderly population shares despite small total populations (e.g., Outram).\nCompare elderly shares across all areas by hovering over each dot.\nUnderstand population pressure points for aging infrastructure and services.\n📌 Conclusion\nDavid’s work is well-designed and informative. With just a few enhancements such as interactivity, annotation, and layout consistency, the overall impact of the visuals can be significantly increased. The proposed makeover demonstrates how a single interactive visual can provide richer engagement while maintaining visual clarity."
  },
  {
    "objectID": "In-class_Exercise/In-class_Ex01.html",
    "href": "In-class_Exercise/In-class_Ex01.html",
    "title": "MC1-In_Class_Ex01",
    "section": "",
    "text": "Code\npacman::p_load(tidyverse, jsonlite,\n               SmartEDA, tidygraph,\n               ggraph)\nCode\nkg &lt;- fromJSON(\"data/MC1_graph.json\")"
  },
  {
    "objectID": "In-class_Exercise/In-class_Ex01.html#creating-knowlede-graph",
    "href": "In-class_Exercise/In-class_Ex01.html#creating-knowlede-graph",
    "title": "MC1-In_Class_Ex01",
    "section": "Creating Knowlede Graph",
    "text": "Creating Knowlede Graph\nThis is\n\nStep 1: Mapping form node id to row indes\n\n\nCode\nid_map &lt;- tibble(id = nodes_tbl$id,\n                 index=seq_len(\n                   nrow(nodes_tbl)\n                 ))\n\n\nThis ensures each id from your node list is mapped to the correct row number.\n\n\nStep2\n\n\nCode\nedges_tbl &lt;- edges_tbl %&gt;%\n  left_join(id_map, by = c(\"source\" = \"id\"))%&gt;%\n  rename(from = index) %&gt;%\n  left_join(id_map, by = c(\"target\" = \"id\"))%&gt;%\n  rename(to = index)\n\n\n###Step 3\n\n\nCode\nedges_tbl &lt;- edges_tbl %&gt;%\n  filter(!is.na(from), !is.na(to))\n\n\n###Step4\n\n\nCode\ngraph &lt;- tbl_graph(nodes = nodes_tbl,\n                   edges = edges_tbl,\n                   directed = kg$directed)"
  },
  {
    "objectID": "In-class_Exercise/In-class_Ex01.html#visualisting-the-knowledge-graph",
    "href": "In-class_Exercise/In-class_Ex01.html#visualisting-the-knowledge-graph",
    "title": "MC1-In_Class_Ex01",
    "section": "visualisting the knowledge graph",
    "text": "visualisting the knowledge graph\n\n\nCode\nset.seed(1234)\n\n\n\nvisualising the whole graph\n\n\nCode\nggraph(graph, layout = \"fr\")+\n  geom_edge_link(alpha = 0.3,\n                 colour = \"gray\")+\n  geom_node_point(aes(color = `Node Type`),\n                  size = 4 )+\n  geom_node_text(aes(label = name),\n                 repel = TRUE,\n                  size = 2.5 )+\n  theme_void()\n\n\n\n\nVisualising the sub-graph\n\nStep 1 Filter edges to only”Memberof”\n\n\nCode\ngraph_memberof &lt;- graph %&gt;%\n  activate(edges)%&gt;%\n  filter(`Edge Type` == \"MemberOf\")\n\n\n\n\nStep 2 Extract only connected nodes\n\n\nCode\nused_node_indices &lt;- graph_memberof %&gt;%\n  activate(edges) %&gt;%\n  as_tibble() %&gt;%\n  select(from, to) %&gt;%\n  unlist()%&gt;%\n  unique()\n\n\n\n\nstep 3 keep only those nodes\n\n\nCode\ngraph_memberof &lt;- graph_memberof %&gt;%\n  activate(nodes)%&gt;%\n  mutate(row_id = row_number())%&gt;%\n  filter(row_id %in% used_node_indices)%&gt;%\n  select(-row_id)\n\n\n\n\nplot the sub-graph\n\n\nCode\nggraph(graph_memberof, layout = \"fr\")+\n  geom_edge_link(alpha = 0.5,\n                 colour = \"gray\")+\n  geom_node_point(aes(color = `Node Type`),\n                  size = 1 )+\n  geom_node_text(aes(label = name),\n                 repel = TRUE,\n                  size = 2.5 )+\n  theme_void()"
  },
  {
    "objectID": "In-class_Exercise/In-class_Ex05/In-class_Ex05.html",
    "href": "In-class_Exercise/In-class_Ex05/In-class_Ex05.html",
    "title": "MC1-In_Class_Ex01",
    "section": "",
    "text": "Code\npacman::p_load(tidyverse, jsonlite,\n               SmartEDA, tidygraph,\n               ggraph)\nCode\nkg &lt;- fromJSON(\"data/MC1_graph.json\")"
  },
  {
    "objectID": "In-class_Exercise/In-class_Ex05/In-class_Ex05.html#creating-knowlede-graph",
    "href": "In-class_Exercise/In-class_Ex05/In-class_Ex05.html#creating-knowlede-graph",
    "title": "MC1-In_Class_Ex01",
    "section": "Creating Knowlede Graph",
    "text": "Creating Knowlede Graph\nThis is\n\nStep 1: Mapping form node id to row indes\n\n\nCode\nid_map &lt;- tibble(id = nodes_tbl$id,\n                 index=seq_len(\n                   nrow(nodes_tbl)\n                 ))\n\n\nThis ensures each id from your node list is mapped to the correct row number.\n\n\nStep2\n\n\nCode\nedges_tbl &lt;- edges_tbl %&gt;%\n  left_join(id_map, by = c(\"source\" = \"id\"))%&gt;%\n  rename(from = index) %&gt;%\n  left_join(id_map, by = c(\"target\" = \"id\"))%&gt;%\n  rename(to = index)\n\n\n###Step 3\n\n\nCode\nedges_tbl &lt;- edges_tbl %&gt;%\n  filter(!is.na(from), !is.na(to))\n\n\n###Step4\n\n\nCode\ngraph &lt;- tbl_graph(nodes = nodes_tbl,\n                   edges = edges_tbl,\n                   directed = kg$directed)"
  },
  {
    "objectID": "In-class_Exercise/In-class_Ex05/In-class_Ex05.html#visualisting-the-knowledge-graph",
    "href": "In-class_Exercise/In-class_Ex05/In-class_Ex05.html#visualisting-the-knowledge-graph",
    "title": "MC1-In_Class_Ex01",
    "section": "visualisting the knowledge graph",
    "text": "visualisting the knowledge graph\n\n\nCode\nset.seed(1234)\n\n\n\nvisualising the whole graph\n\n\nCode\nggraph(graph, layout = \"fr\")+\n  geom_edge_link(alpha = 0.3,\n                 colour = \"gray\")+\n  geom_node_point(aes(color = `Node Type`),\n                  size = 4 )+\n  geom_node_text(aes(label = name),\n                 repel = TRUE,\n                  size = 2.5 )+\n  theme_void()\n\n\n\n\n\n\n\nVisualising the sub-graph\n\nStep 1 Filter edges to only”Memberof”\n\n\nCode\ngraph_memberof &lt;- graph %&gt;%\n  activate(edges)%&gt;%\n  filter(`Edge Type` == \"MemberOf\")\n\n\n\n\nStep 2 Extract only connected nodes\n\n\nCode\nused_node_indices &lt;- graph_memberof %&gt;%\n  activate(edges) %&gt;%\n  as_tibble() %&gt;%\n  select(from, to) %&gt;%\n  unlist()%&gt;%\n  unique()\n\n\n\n\nstep 3 keep only those nodes\n\n\nCode\ngraph_memberof &lt;- graph_memberof %&gt;%\n  activate(nodes)%&gt;%\n  mutate(row_id = row_number())%&gt;%\n  filter(row_id %in% used_node_indices)%&gt;%\n  select(-row_id)\n\n\n\n\nplot the sub-graph\n\n\nCode\nggraph(graph_memberof, layout = \"fr\")+\n  geom_edge_link(alpha = 0.5,\n                 colour = \"gray\")+\n  geom_node_point(aes(color = `Node Type`),\n                  size = 1 )+\n  geom_node_text(aes(label = name),\n                 repel = TRUE,\n                  size = 2.5 )+\n  theme_void()"
  },
  {
    "objectID": "Hands-on_Exercise/Hands-on_Ex04/Hands-on_Ex04.html#visualizing-distribution-with-ridgeline-plot",
    "href": "Hands-on_Exercise/Hands-on_Ex04/Hands-on_Ex04.html#visualizing-distribution-with-ridgeline-plot",
    "title": "Hands-on_Ex04",
    "section": "",
    "text": "The following section was modified according to https://r4va.netlify.app/chap09.\n\n\nCode\npacman::p_load(ggdist, ggridges, ggthemes,\n               colorspace, tidyverse)\n\nexam_data &lt;- read_csv(\"data/Exam_data.csv\")\n\n\nVisualizing Distribution with Ridgeline Plot When to Use Ridgeline Plots:\nWhen you have a medium to high number of groups (more than 5), as it saves space. If there is a clear pattern or ranking among groups, making insights easier to spot. When you want to efficiently visualize distributions without using separate plots. When Not to Use Ridgeline Plots:\nIf there are fewer than 5 groups, other distribution plots (e.g., boxplots) may be better. When groups lack a clear pattern, as overlapping can make the plot messy. If hiding some data due to overlap reduces clarity rather than improving visualization.\n\n\n\n\nCode\nggplot(exam_data, \n       aes(x = ENGLISH, \n           y = CLASS)) +\n  geom_density_ridges(\n    scale = 3,\n    rel_min_height = 0.01,\n    bandwidth = 3.4,\n    fill = lighten(\"#7097BB\", .3),\n    color = \"white\"\n  ) +\n  scale_x_continuous(\n    name = \"English grades\",\n    expand = c(0, 0)\n    ) +\n  scale_y_discrete(name = NULL, expand = expansion(add = c(0.2, 2.6))) +\n  theme_ridges()\n\n\n\n\n\n\n\n\n\nDefaultWith quantile lines\n\n\n\n\nCode\nggplot(data = exam_data, \n       aes(x = ENGLISH, \n           y = CLASS,\n           fill = stat(x))) +\n  geom_density_ridges_gradient(\n    scale = 3,\n    # alpha = 0.8,  # This is not allowed\n    rel_min_height = 0.01) +\n  scale_fill_viridis_c(name = \"Score\",\n                       option = \"C\") +\n  scale_x_continuous(\n    name = \"English grades\",\n    expand = c(0, 0)\n    ) +\n  scale_y_discrete(name = NULL, \n                   expand = expansion(add = c(0.2, 2.6))) +\n  theme_ridges()\n\n\n\n\n\n\n\n\n\nCode\nggplot(data = exam_data, \n       aes(x = ENGLISH, \n           y = CLASS,\n           fill = factor(stat(quantile)))) +\n  geom_density_ridges_gradient(\n    scale = 3,\n    calc_ecdf = TRUE, \n    quantiles = 4,\n    quantile_lines = TRUE,\n    rel_min_height = 0.01) +\n  scale_fill_viridis_d(name = \"Quartiles\") +  # d: discrete\n  scale_x_continuous(\n    name = \"English grades\",\n    expand = c(0, 0)\n    ) +\n  scale_y_discrete(name = NULL, \n                   expand = expansion(add = c(0.2, 2.6))) +\n  theme_ridges()\n\n\n\n\n\n\n\n\n\n\n\n\nTail ProbabilitySpecifying Cut Points\n\n\n\n\nCode\nggplot(exam_data,\n       aes(x = ENGLISH, \n           y = CLASS, \n           fill = 0.5 - abs(0.5-stat(ecdf)))) +\n  stat_density_ridges(geom = \"density_ridges_gradient\", \n                      calc_ecdf = TRUE) +\n  scale_fill_viridis_c(name = \"Tail probability\",\n                       direction = -1) +\n  theme_ridges()\n\n\n\n\n\n\n\n\n\nCode\nggplot(data = exam_data,\n       aes(x = ENGLISH, \n           y = CLASS, \n           fill = factor(stat(quantile)))) +\n  stat_density_ridges(\n    geom = \"density_ridges_gradient\",\n    calc_ecdf = TRUE, \n    quantiles = c(0.025, 0.975)\n    ) +\n  scale_fill_manual(\n    name = \"Probability\",\n    values = c(\"#FF0000A0\", \"#A0A0A0A0\", \"#0000FFA0\"),\n    labels = c(\"(0, 0.025]\", \"(0.025, 0.975]\", \"(0.975, 1]\")\n  ) +\n  theme_ridges()"
  },
  {
    "objectID": "Hands-on_Exercise/Hands-on_Ex04/Hands-on_Ex04.html#visualizing-distribution-with-raincloud-plot",
    "href": "Hands-on_Exercise/Hands-on_Ex04/Hands-on_Ex04.html#visualizing-distribution-with-raincloud-plot",
    "title": "Hands-on_Ex04",
    "section": "",
    "text": "Raincloud Plot is a data visualisation techniques that produces a half-density to a distribution plot. It gets the name because the density plot is in the shape of a “raincloud”. The raincloud (half-density) plot enhances the traditional box-plot by highlighting multiple modalities (an indicator that groups may exist). The boxplot does not show where densities are clustered, but the raincloud plot does!\nIn this section, we create a raincloud plot to visualise the distribution of English score by race. It will be created by using functions provided by ggdist and ggplot2 packages.\n\n\nCode\nggplot(data = exam_data, \n       aes(x = RACE,\n           y = ENGLISH,\n           fill = RACE,\n           color = RACE)) +\n  stat_slab(adjust = 0.5,  # Bandwidth for density estimate; &lt; 1 more \"curvature\"\n            justification = -0.2,  # Without this the boxplot will overlap with the slab\n            scale = 0.5) +  # Used this to prevent overlapping with the dots from previous category\n  geom_boxplot(width = .10,\n               outlier.shape = NA,\n               alpha = 0.5) +\n    stat_dots(side = \"left\", \n            justification = 1.1, \n            # binwidth = .5, \n            dotsize = 2) +\n  coord_flip() +\n  theme_classic() +\n  theme(legend.position = \"none\")\n\n\n\n\n\n\n\n\n\n\n\nTip\n\n\n\nWhen to Use Best for smaller datasets to avoid overcrowding. Useful for visualizing distribution patterns and density clusters. Highlights where data points are concentrated, unlike a standard boxplot.\n\n\n\n\n\n\n\n\nNote\n\n\n\nWe don’t need to use half_eye plot and remove the “line & eye portion”, we can just directly use the slab plot. Refer to https://cran.r-project.org/web/packages/ggdist/vignettes/slabinterval.html."
  },
  {
    "objectID": "Hands-on_Exercise/Hands-on_Ex04/Hands-on_Ex04.html#visual-statistical-analysis---from-the-data",
    "href": "Hands-on_Exercise/Hands-on_Ex04/Hands-on_Ex04.html#visual-statistical-analysis---from-the-data",
    "title": "Hands-on_Ex04",
    "section": "2.1 Visual Statistical Analysis - From the Data",
    "text": "2.1 Visual Statistical Analysis - From the Data\n\n2.1.1 One-sample test: gghistostats() method\n\n\nCode\nset.seed(1234)\n\ngghistostats(\n  data = exam,\n  x = ENGLISH,\n  type = \"bayes\",\n  test.value = 60,\n  xlab = \"English scores\"\n)\n\n\n\n\n\n\nIn the example above, the null hypothesis (H0) is set to 60. When the test type is not specified, it defaults to a parametric Student’s t-test.\nThe results indicate a statistically significant difference between the observed mean μ^mean=67.18 and the null hypothesis, with a t-statistic of 8.77 and a p-value of 1.04×10−16, strongly rejecting H0.\nThe effect size suggests a moderate difference Source.\nAdditionally, a Bayesian analysis with a Cauchy prior confirms strong evidence against H0(loge⁡(BF01)=−31.45), further supporting the conclusion that the true mean is significantly different from 60.\n\nAdditionally, if we want to do the same analysis separately for another group, for example, gender, we can use grouped_gghistostats() Reference\n\n\nCode\nset.seed(1234)\n\ngrouped_gghistostats(\n  data = exam_data,\n  x = ENGLISH,\n  test.value = 60,\n  xlab = \"English scores\",\n  grouping.var = GENDER,\n  type = \"robust\",\n  annotation.args = list(\n    title = \"Distribution of English scores across genders\"\n  ),\n  plotgrid.args = list(nrow = 2)\n)\n\n\n\n\n\n\n\n2.1.2 Comparing distributions: ggbetweenstats()\n\nTwo-sample mean testOneway ANOVA Test\n\n\n\n\nCode\nggbetweenstats(\n  data = exam,\n  x = GENDER, \n  y = MATHS,\n  type = \"np\",\n  messages = FALSE\n)\n\n\n\n\n\n\n\n\n\nCode\nggbetweenstats(\n  data = exam,\n  x = RACE, \n  y = ENGLISH,\n  type = \"p\",\n  mean.ci = TRUE, \n  pairwise.comparisons = TRUE, \n  pairwise.display = \"s\",\n  p.adjust.method = \"fdr\",\n  messages = FALSE\n)\n\n\n\n\n\n\n\n\n\n\n2.1.3 Significant Test of Correlation: ggscatterstats()\n\n\nCode\nggscatterstats(\n  data = exam_data,\n  x = MATHS,\n  y = ENGLISH,\n  marginal = FALSE,\n  )\n\n\n\n\n\n\n\n2.1.4 Significant Test of Association: ggbarstats()\n\n\nCode\nexam_data1 &lt;- exam_data %&gt;% \n  mutate(MATHS_bins = \n           cut(MATHS, \n               breaks = c(0,60,75,85,100))\n)\n\nggbarstats(exam_data1, \n           x = MATHS_bins, \n           y = GENDER)"
  },
  {
    "objectID": "Hands-on_Exercise/Hands-on_Ex04/Hands-on_Ex04.html#visualizing-uncertainty-of-point-estimates-using-ggplot2",
    "href": "Hands-on_Exercise/Hands-on_Ex04/Hands-on_Ex04.html#visualizing-uncertainty-of-point-estimates-using-ggplot2",
    "title": "Hands-on_Ex04",
    "section": "3.1 Visualizing uncertainty of point estimates using ggplot2",
    "text": "3.1 Visualizing uncertainty of point estimates using ggplot2\n\n3.1.1 Creating summary statistics\n\n\nCode\nmy_sum &lt;- exam %&gt;%\n  group_by(RACE) %&gt;%\n  summarise(\n    n=n(),\n    mean=mean(MATHS),\n    sd=sd(MATHS) \n    ) %&gt;%\n  mutate(se=sd/sqrt(n-1))  # computing the standard error\n\nknitr::kable(head(my_sum), format = 'html')  # to display the summary table\n\n\n\n\n\nRACE\nn\nmean\nsd\nse\n\n\n\n\nChinese\n193\n76.50777\n15.69040\n1.132357\n\n\nIndian\n12\n60.66667\n23.35237\n7.041005\n\n\nMalay\n108\n57.44444\n21.13478\n2.043177\n\n\nOthers\n9\n69.66667\n10.72381\n3.791438\n\n\n\n\n\n\n\n\n\n3.1.2 Plotting SE & CI of point estimates\n\nStandard Error BarsConfidence Intervals\n\n\n\n\nCode\nggplot(my_sum) +\n  geom_errorbar(\n    aes(x = RACE,\n        ymin = mean - se,\n        ymax = mean + se),\n    width = 0.2,\n    colour = \"black\",\n    alpha = 0.9,\n    linewidth = 0.5\n  ) +\n  geom_point(aes(\n        x=RACE,\n        y=mean\n      ),\n      stat = \"identity\",\n      color = \"red\",\n      size = 1.5,\n      alpha = 1) +\n  ggtitle(\"Standard Error of Mean Maths Score by Race\")\n\n\n\n\n\n\n\n\n\nCode\nggplot(my_sum) +\n  # The changes are here\n  geom_errorbar(\n    aes(x = reorder(RACE, -mean),\n        ymin = mean - 1.96 * se,\n        ymax = mean + 1.96 * se),\n    # And ends here\n    width = 0.2,\n    colour = \"black\",\n    alpha = 0.9,\n    linewidth = 0.5\n  ) +\n  geom_point(aes(\n        x=RACE,\n        y=mean\n      ),\n      stat = \"identity\",\n      color = \"red\",\n      size = 1.5,\n      alpha = 1) +\n  labs(x = \"Maths Score\",\n       title = \"95% Confidence Interval of Mean Maths Score by Race\")\n\n\n\n\n\n\n\n\n\n\n3.1.3 Visualizing the uncertainty of point estimates with interactive error bars\n\n\nCode\nshared_df = SharedData$new(my_sum)\n\npoint_plot &lt;- ggplot(shared_df) +\n  geom_errorbar(aes(\n           x = reorder(RACE, -mean),\n           ymin = mean - 2.58 * se, \n           ymax = mean + 2.58 * se), \n           width = 0.2, \n           colour = \"black\", \n           alpha = 0.9, \n           size = 0.5) +\n         geom_point(aes(\n           x = RACE, \n           y = mean, \n           text = paste(\"Race:\", `RACE`, \n                        \"&lt;br&gt;N:\", `n`,\n                        \"&lt;br&gt;Avg. Scores:\", round(mean, digits = 2),\n                        \"&lt;br&gt;95% CI:[\", \n                        round((mean-2.58*se), digits = 2), \",\",\n                        round((mean+2.58*se), digits = 2),\"]\")),\n           stat = \"identity\", \n           color = \"red\", \n           size = 1.5, \n           alpha = 1) + \n         xlab(\"Race\") + \n         ylab(\"Average Scores\") + \n         theme_minimal() + \n         theme(axis.text.x = element_text(\n           angle = 45, vjust = 0.5, hjust=1)) +\n         ggtitle(\"99% CI of average /&lt;br&gt;maths scores by race\")\n\nsummary_tab &lt;- DT::datatable(shared_df, \n                     rownames = FALSE, \n                     class = \"compact\", \n                     width = \"100%\", \n                     options = list(pageLength = 10,\n                                    scrollX=T), \n                     colnames = c(\"No. of pupils\", \n                                  \"Avg Scores\",\n                                  \"Std Dev\",\n                                  \"Std Error\")) %&gt;%\n         formatRound(columns = c('mean', 'sd', 'se'),\n                     digits = 2)\n\nbscols(widths = c(4,8),\n       ggplotly(point_plot, tooltip = \"text\"), summary_tab)"
  },
  {
    "objectID": "Hands-on_Exercise/Hands-on_Ex04/Hands-on_Ex04.html#visualizing-uncertainty-using-ggdist",
    "href": "Hands-on_Exercise/Hands-on_Ex04/Hands-on_Ex04.html#visualizing-uncertainty-using-ggdist",
    "title": "Hands-on_Ex04",
    "section": "3.2 Visualizing Uncertainty using ggdist",
    "text": "3.2 Visualizing Uncertainty using ggdist\n\n3.2.1 Using stat_pointinterval()\n\n\nCode\nexam %&gt;%\n  ggplot(aes(x = RACE, y = MATHS)) +\n  stat_pointinterval(.width = c(0.99, 0.95),\n                     .point = median,\n                     .interval = \"qi\") + \n  labs(\n    title = \"Visualising confidence intervals of mean math score \",\n    subtitle = \"Median Point + Multiple-interval plot (99% and 95% CIs)\"\n  ) +\n  theme_minimal()\n\n\n\n\n\n\n\n3.2.2 Using stat_gradientinterval() to display the distribution with colour gradients\n\n\nCode\nexam %&gt;%\n  ggplot(aes(x = RACE, y = MATHS)) +\n  stat_gradientinterval(   \n    fill = \"skyblue\",      \n    show.legend = TRUE     \n  ) +                        \n  labs(\n    title = \"Visualising confidence intervals of mean math score\",\n    subtitle = \"Gradient + interval plot\") + \n  theme_minimal()"
  },
  {
    "objectID": "Hands-on_Exercise/Hands-on_Ex04/Hands-on_Ex04.html#visualizing-uncertainty-with-hypothetical-outcome-plots-hops",
    "href": "Hands-on_Exercise/Hands-on_Ex04/Hands-on_Ex04.html#visualizing-uncertainty-with-hypothetical-outcome-plots-hops",
    "title": "Hands-on_Ex04",
    "section": "3.3 Visualizing Uncertainty with Hypothetical Outcome Plots (HOPs)",
    "text": "3.3 Visualizing Uncertainty with Hypothetical Outcome Plots (HOPs)\n\n\nCode\n#devtools::install_github(\"wilkelab/ungeviz\")\nlibrary(ungeviz)\n\n\n\nUsing sampler()Using bootstrapper()\n\n\n\n\nCode\nggplot(data = exam, \n       (aes(x = factor(RACE), \n            y = MATHS))) +\n  geom_point(position = position_jitter(\n    height = 0.3, \n    width = 0.05), \n    size = 0.4, \n    color = \"#0072B2\", \n    alpha = 1/2) +\n  geom_hpline(data = sampler(25, \n                             group = RACE), \n              height = 0.6, \n              color = \"#D55E00\") +\n  theme_bw() + \n  transition_states(.draw, 1, 3)\n\n\n\n\n\n\n\n\n\nCode\nbsr &lt;- bootstrapper(20, GENDER)\n\nggplot(data = exam, \n       aes(x = MATHS,\n           y = ENGLISH, \n           color = GENDER)) +\n  geom_smooth(method = \"lm\", color = NA) +\n  geom_point(alpha = 0.3) +\n  # `.row` is a generated column providing a unique row number for all rows\n  geom_point(data = bsr, aes(group = .row)) +\n  geom_smooth(data = bsr, method = \"lm\", fullrange = TRUE, se = FALSE) +\n  facet_wrap(~GENDER, scales = \"free_x\") +\n  scale_color_manual(values = c(Female = \"#D55E00\", Male = \"#0072B2\"), guide = \"none\") +\n  theme_minimal() +\n  transition_states(.draw, 1, 1) + \n  enter_fade() + exit_fade()"
  },
  {
    "objectID": "Hands-on_Exercise/Hands-on_Ex04/Hands-on_Ex04.html#generating-funnel-plot-with-funnelplotr",
    "href": "Hands-on_Exercise/Hands-on_Ex04/Hands-on_Ex04.html#generating-funnel-plot-with-funnelplotr",
    "title": "Hands-on_Ex04",
    "section": "4.1 Generating Funnel Plot with FunnelPlotR",
    "text": "4.1 Generating Funnel Plot with FunnelPlotR\n\n\nCode\nfunnel_plot(\n  .data = covid19,\n  numerator = Death,  # Event of interest\n  denominator = Positive,\n  group = \"Sub-district\",  # Level of points plotted \n  data_type = \"PR\",  # Proportions Ratio - Event rates (In this case Death Rates)\n  xrange = c(0, 6500), \n  yrange = c(0, 0.05),\n  # label = NA,  # this is to remove the outlier labels\n  title = str_wrap(\"Cumulative COVID-19 Fatality Rate by Cumulative Total Number of COVID-19 Positive Cases\", width = 100),          \n  x_label = \"Cumulative COVID-19 Positive Cases\",\n  y_label = \"Cumulative Fatality Rate\"\n)\n\n\n\n\n\nA funnel plot object with 267 points of which 7 are outliers. \nPlot is adjusted for overdispersion."
  },
  {
    "objectID": "Hands-on_Exercise/Hands-on_Ex04/Hands-on_Ex04.html#funnel-plot-with-ggplot2",
    "href": "Hands-on_Exercise/Hands-on_Ex04/Hands-on_Ex04.html#funnel-plot-with-ggplot2",
    "title": "Hands-on_Ex04",
    "section": "4.2 Funnel Plot with ggplot2",
    "text": "4.2 Funnel Plot with ggplot2\n\n4.2.1 Computing the statistics\n\n\nCode\ndf &lt;- covid19 %&gt;%\n  mutate(rate = Death / Positive) %&gt;%\n  mutate(rate.se = sqrt((rate*(1-rate)) / (Positive))) %&gt;%\n  filter(rate &gt; 0)\n\nw_mean &lt;- weighted.mean(df$rate, 1/df$rate.se^2)\n\nnum_seq &lt;- seq(1, max(df$Positive), 1)\nnum_ll95 &lt;- w_mean - 1.96 * sqrt((w_mean*(1-w_mean)) / (num_seq)) \nnum_ul95 &lt;- w_mean + 1.96 * sqrt((w_mean*(1-w_mean)) / (num_seq)) \nnum_ll999 &lt;- w_mean - 3.29 * sqrt((w_mean*(1-w_mean)) / (num_seq)) \nnum_ul999 &lt;- w_mean + 3.29 * sqrt((w_mean*(1-w_mean)) / (num_seq)) \n\ndfCI &lt;- data.frame(num_ll95, num_ul95, num_ll999, \n                   num_ul999, num_seq, w_mean)\n\nknitr::kable(head(dfCI), format = 'html')\n\n\n\n\n\nnum_ll95\nnum_ul95\nnum_ll999\nnum_ul999\nnum_seq\nw_mean\n\n\n\n\n-0.2230353\n0.2529745\n-0.3845386\n0.4144778\n1\n0.0149696\n\n\n-0.1533253\n0.1832645\n-0.2675254\n0.2974645\n2\n0.0149696\n\n\n-0.1224426\n0.1523818\n-0.2156866\n0.2456257\n3\n0.0149696\n\n\n-0.1040328\n0.1339720\n-0.1847845\n0.2147237\n4\n0.0149696\n\n\n-0.0914694\n0.1214086\n-0.1636959\n0.1936351\n5\n0.0149696\n\n\n-0.0821955\n0.1121347\n-0.1481289\n0.1780681\n6\n0.0149696\n\n\n\n\n\n\n\n\n\n4.2.2 Plotting a static funnel plot\n\n\nCode\nlinetypes &lt;- c(\"dashed\", \"dashed\", \"solid\", \"solid\")\nys &lt;- c(\"num_ll95\", \"num_ul95\", \"num_ll999\", \"num_ul999\")\n\np &lt;- ggplot(df, aes(x = Positive, y = rate)) +\n      geom_point(aes(label = `Sub-district`), alpha = 0.4)\n      \n# Loop over the linetypes and ys to add corresponding lines\nfor (i in seq_along(linetypes)) {\n  p &lt;- p + geom_line(data = dfCI, aes(x = num_seq, y = !!sym(ys[i])), linetype = linetypes[i], size = 0.4, colour = \"grey40\")\n}\n\np &lt;- p + geom_hline(data = dfCI, aes(yintercept = w_mean), size = 0.4, colour = \"grey40\") +\n      coord_cartesian(ylim = c(0, 0.05)) +\n      annotate(\"text\", x = 1, y = -0.13, label = \"95%\", size = 3, colour = \"grey40\") +\n      annotate(\"text\", x = 4.5, y = -0.18, label = \"99%\", size = 3, colour = \"grey40\") +\n      ggtitle(\"Cumulative Fatality Rate by Cumulative Number of COVID-19 Cases\") +\n      xlab(\"Cumulative Number of COVID-19 Cases\") + \n      ylab(\"Cumulative Fatality Rate\") +\n      theme_light() +\n      theme(\n        plot.title = element_text(size = 12),\n        legend.position = c(0.91, 0.85), \n        legend.title = element_text(size = 7),\n        legend.text = element_text(size = 7),\n        legend.background = element_rect(colour = \"grey60\", linetype = \"dotted\"),\n        legend.key.height = unit(0.3, \"cm\")\n      )\np\n\n\n\n\n\n\n\n4.2.3 Converting to an interactive funnel plot\n\n\nCode\nfp_ggplotly &lt;- ggplotly(p,\n  tooltip = c(\"label\", \n              \"x\", \n              \"y\"))\nfp_ggplotly"
  },
  {
    "objectID": "Hands-on_Exercise/Hands-on_Ex05/Hands-on_Ex05.html",
    "href": "Hands-on_Exercise/Hands-on_Ex05/Hands-on_Ex05.html",
    "title": "Hands-on_Ex05",
    "section": "",
    "text": "The following section was modified according to https://r4va.netlify.app/chap27"
  },
  {
    "objectID": "Hands-on_Exercise/Hands-on_Ex05/Hands-on_Ex05.html#loading-the-packages",
    "href": "Hands-on_Exercise/Hands-on_Ex05/Hands-on_Ex05.html#loading-the-packages",
    "title": "Hands-on_Ex05",
    "section": "1.1 Loading the packages",
    "text": "1.1 Loading the packages\n\n\nCode\npacman::p_load(\n  ggforce,\n  ggraph,\n  igraph,\n  knitr,\n  lubridate,\n  tidygraph,\n  tidyverse,\n  visNetwork,\n  fontawesome\n)"
  },
  {
    "objectID": "Hands-on_Exercise/Hands-on_Ex05/Hands-on_Ex05.html#loading-in-the-data",
    "href": "Hands-on_Exercise/Hands-on_Ex05/Hands-on_Ex05.html#loading-in-the-data",
    "title": "Hands-on_Ex05",
    "section": "1.2 Loading in the data",
    "text": "1.2 Loading in the data\n\n\nCode\ngt_node &lt;- read_csv('data/GAStech_email_node.csv')\nkable(head(gt_node, 10))\n\n\n\n\n\n\n\n\n\n\n\nid\nlabel\nDepartment\nTitle\n\n\n\n\n1\nMat.Bramar\nAdministration\nAssistant to CEO\n\n\n2\nAnda.Ribera\nAdministration\nAssistant to CFO\n\n\n3\nRachel.Pantanal\nAdministration\nAssistant to CIO\n\n\n4\nLinda.Lagos\nAdministration\nAssistant to COO\n\n\n5\nRuscella.Mies.Haber\nAdministration\nAssistant to Engineering Group Manager\n\n\n6\nCarla.Forluniau\nAdministration\nAssistant to IT Group Manager\n\n\n7\nCornelia.Lais\nAdministration\nAssistant to Security Group Manager\n\n\n44\nKanon.Herrero\nSecurity\nBadging Office\n\n\n45\nVarja.Lagos\nSecurity\nBadging Office\n\n\n46\nStenig.Fusil\nSecurity\nBuilding Control\n\n\n\n\n\nCode\ngt_edge &lt;- read_csv('data/GAStech_email_edge-v2.csv')\nkable(head(gt_edge, 10))\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nsource\ntarget\nSentDate\nSentTime\nSubject\nMainSubject\nsourceLabel\ntargetLabel\n\n\n\n\n43\n41\n6/1/2014\n08:39:00\nGT-SeismicProcessorPro Bug Report\nWork related\nSven.Flecha\nIsak.Baza\n\n\n43\n40\n6/1/2014\n08:39:00\nGT-SeismicProcessorPro Bug Report\nWork related\nSven.Flecha\nLucas.Alcazar\n\n\n44\n51\n6/1/2014\n08:58:00\nInspection request for site\nWork related\nKanon.Herrero\nFelix.Resumir\n\n\n44\n52\n6/1/2014\n08:58:00\nInspection request for site\nWork related\nKanon.Herrero\nHideki.Cocinaro\n\n\n44\n53\n6/1/2014\n08:58:00\nInspection request for site\nWork related\nKanon.Herrero\nInga.Ferro\n\n\n44\n45\n6/1/2014\n08:58:00\nInspection request for site\nWork related\nKanon.Herrero\nVarja.Lagos\n\n\n44\n44\n6/1/2014\n08:58:00\nInspection request for site\nWork related\nKanon.Herrero\nKanon.Herrero\n\n\n44\n46\n6/1/2014\n08:58:00\nInspection request for site\nWork related\nKanon.Herrero\nStenig.Fusil\n\n\n44\n48\n6/1/2014\n08:58:00\nInspection request for site\nWork related\nKanon.Herrero\nHennie.Osvaldo\n\n\n44\n49\n6/1/2014\n08:58:00\nInspection request for site\nWork related\nKanon.Herrero\nIsia.Vann"
  },
  {
    "objectID": "Hands-on_Exercise/Hands-on_Ex05/Hands-on_Ex05.html#data-manipulation",
    "href": "Hands-on_Exercise/Hands-on_Ex05/Hands-on_Ex05.html#data-manipulation",
    "title": "Hands-on_Ex05",
    "section": "1.3 Data Manipulation",
    "text": "1.3 Data Manipulation\n\nFirst we want to aggregate the edges by date, senders, receivers and day of the week.\n\n\n\nCode\ngt_edge_agg &lt;- gt_edge %&gt;%\n  mutate(SendDate = dmy(SentDate),\n         Weekday = wday(SentDate,\n                        label = TRUE,\n                        abbr = FALSE)) %&gt;%\n  group_by(sourceLabel, targetLabel, MainSubject, Weekday) %&gt;%\n    summarise(Weight = n(),) %&gt;%\n  filter(sourceLabel != targetLabel) %&gt;%\n  filter(Weight &gt; 1) %&gt;%\n  ungroup()\n\nglimpse(gt_edge_agg)\n\n\nRows: 1,664\nColumns: 5\n$ sourceLabel &lt;chr&gt; \"Ada.Campo-Corrente\", \"Ada.Campo-Corrente\", \"Ada.Campo-Cor…\n$ targetLabel &lt;chr&gt; \"Felix.Resumir\", \"Ingrid.Barranco\", \"Orhan.Strum\", \"Orhan.…\n$ MainSubject &lt;chr&gt; \"Non-work related\", \"Work related\", \"Non-work related\", \"N…\n$ Weekday     &lt;ord&gt; Saturday, Sunday, Sunday, Tuesday, Tuesday, Sunday, Tuesda…\n$ Weight      &lt;int&gt; 2, 4, 4, 3, 2, 4, 3, 2, 2, 2, 4, 3, 2, 2, 2, 3, 4, 3, 3, 2…\n\n\n\nNext, we will convert to a graph object using tidygraph package. Note: The tbl_graph() class is a thin wrapper around an igraph object that provides methods for manipulating the graph using the tidy API.\n\n\n\nCode\ngt_graph &lt;- tbl_graph(nodes = gt_node %&gt;% select(2:ncol(gt_node)),\n                               edges = gt_edge_agg,\n                               directed = TRUE)\n\n\n\nWe will also create an igraph object directly.\n\n\n\nCode\ngt_graph2 &lt;- igraph::graph_from_data_frame(gt_edge_agg, \n                                           vertices = gt_node %&gt;% select(2:ncol(gt_node)))\ngt_graph2\n\n\nIGRAPH c3e0d1c DN-- 54 1664 -- \n+ attr: name (v/c), Department (v/c), Title (v/c), MainSubject (e/c),\n| Weekday (e/c), Weight (e/n)\n+ edges from c3e0d1c (vertex names):\n [1] Ada.Campo-Corrente-&gt;Felix.Resumir     Ada.Campo-Corrente-&gt;Ingrid.Barranco  \n [3] Ada.Campo-Corrente-&gt;Orhan.Strum       Ada.Campo-Corrente-&gt;Orhan.Strum      \n [5] Ada.Campo-Corrente-&gt;Orhan.Strum       Ada.Campo-Corrente-&gt;Sten.Sanjorge.Jr \n [7] Ada.Campo-Corrente-&gt;Sten.Sanjorge.Jr  Ada.Campo-Corrente-&gt;Sten.Sanjorge.Jr \n [9] Ada.Campo-Corrente-&gt;Sten.Sanjorge.Jr  Ada.Campo-Corrente-&gt;Sten.Sanjorge.Jr \n[11] Ada.Campo-Corrente-&gt;Sten.Sanjorge.Jr  Ada.Campo-Corrente-&gt;Willem.Vasco-Pais\n[13] Ada.Campo-Corrente-&gt;Willem.Vasco-Pais Ada.Campo-Corrente-&gt;Willem.Vasco-Pais\n+ ... omitted several edges\n\n\n1.4 Network metrics Using the igraph package, we can compute some measures like centrality, betweeness and closeness of the nodes in a graph.\n\n\nCode\n# Degree centrality refers to how many links are attached to a node. It is particularly useful for identifying nodes that are particularly central or important to a network. \ngt_graph$degree &lt;- igraph::degree(gt_graph)\n\n# The more often a node acts as a “bridge” between two other nodes’ geodesic (shortest) path, the higher its betweenness centrality in the network.\ngt_graph$between &lt;- igraph::betweenness(gt_graph)\n\n# It is measured based on the average geodesic path between that node and all the other nodes. A node that is “more close” to other nodes (i.e., fewer shortest paths) is therefore considered more central.\ngt_graph$closeness &lt;- igraph::closeness(gt_graph)\n\nvertex_data &lt;- data.frame(\n  label = V(gt_graph)$label,\n  degree = gt_graph$degree,\n  between = gt_graph$between,\n  closeness = gt_graph$closeness\n)\n\nkable(head(vertex_data, 10))\n\n\n\n\n\nlabel\ndegree\nbetween\ncloseness\n\n\n\n\nMat.Bramar\n337\n316.536566\n0.0188679\n\n\nAnda.Ribera\n70\n77.615690\n0.0104167\n\n\nRachel.Pantanal\n69\n67.511765\n0.0101010\n\n\nLinda.Lagos\n74\n0.000000\n0.0100000\n\n\nRuscella.Mies.Haber\n272\n523.717243\n0.0188679\n\n\nCarla.Forluniau\n73\n50.771035\n0.0102041\n\n\nCornelia.Lais\n80\n0.397561\n0.0101010\n\n\nKanon.Herrero\n30\n68.849381\n0.0080645\n\n\nVarja.Lagos\n32\n16.775581\n0.0076336\n\n\nStenig.Fusil\n37\n53.020966\n0.0084746\n\n\n\n\n\nUsing the igraph object, we can also find the neighbours of the node of interest.\n\n\nCode\nneighbors(gt_graph2, \"Stenig.Fusil\", \"in\")\n\n\n+ 17/54 vertices, named, from c3e0d1c:\n [1] Mat.Bramar          Mat.Bramar          Mat.Bramar         \n [4] Mat.Bramar          Mat.Bramar          Ruscella.Mies.Haber\n [7] Ruscella.Mies.Haber Ruscella.Mies.Haber Ruscella.Mies.Haber\n[10] Varja.Lagos         Vira.Frente         Linnea.Bergen      \n[13] Hennie.Osvaldo      Isia.Vann           Felix.Resumir      \n[16] Hideki.Cocinaro     Orhan.Strum"
  },
  {
    "objectID": "Hands-on_Exercise/Hands-on_Ex05/Hands-on_Ex05.html#single-static-network-graph",
    "href": "Hands-on_Exercise/Hands-on_Ex05/Hands-on_Ex05.html#single-static-network-graph",
    "title": "Hands-on_Ex05",
    "section": "2.1 Single Static Network Graph",
    "text": "2.1 Single Static Network Graph\nThe plots include:\n\nThe thickness of the edges are determined by the weight (strength of connection). Edges are directional\nColoured by Department\nGrouped using community detection algorithms\nSize by centrality measures\n\n\nUsing igraph()Using ggraph()\n\n\n\n\nCode\nset.seed(123)\n\n# Select different layout types\n# gt_graph_kk &lt;- layout_with_kk(gt_graph2) \n# gt_graph_fr &lt;- layout_with_fr(gt_graph2)\n# gt_graph_dh &lt;- layout_with_dh(gt_graph2)\ngt_graph_nice &lt;- layout_nicely(gt_graph2)\n\n# Community detection\nclw &lt;- cluster_walktrap(gt_graph2)\nclp &lt;- cluster_label_prop(gt_graph2)\n\ngt_graph2$between &lt;- igraph::betweenness(gt_graph2)\n\nplot(clw, gt_graph2,\n     layout=gt_graph_nice,\n     vertex.label=NA, \n     vertex.size=gt_graph2$between/10,\n     edge.width=E(gt_graph2)$Weight/11,\n     edge.arrow.size=E(gt_graph2)$Weight/11)\n\n\n\n\n\n\n\n\n\nCode\ng &lt;- gt_graph %&gt;%\n  activate(edges) %&gt;%\n  filter(MainSubject == \"Work related\") %&gt;%\n  activate(nodes) %&gt;%\n  mutate(community = as.factor(group_optimal(weights = Weight)),\n         betweenness_measure = centrality_betweenness()) %&gt;%\n  ggraph(layout = \"fr\") +\n  geom_mark_hull(\n    aes(x, y, group = community, fill = community),  \n    alpha = 0.2,  \n    expand = unit(0.3, \"cm\"),  # Expand\n    radius = unit(0.3, \"cm\")  # Smoothness\n  ) + \n  geom_edge_link(aes(width=Weight), \n                 arrow = arrow(length = unit(0.3, \"cm\")),\n                 alpha=0.2) +\n  scale_edge_width(range = c(0.1, 5)) +\n  geom_node_point(aes(fill = Department,\n                      size = betweenness_measure),\n                      color = \"black\",\n                      shape = 21)\n  \ng + theme_graph()"
  },
  {
    "objectID": "Hands-on_Exercise/Hands-on_Ex05/Hands-on_Ex05.html#multiple-static-network-graph",
    "href": "Hands-on_Exercise/Hands-on_Ex05/Hands-on_Ex05.html#multiple-static-network-graph",
    "title": "Hands-on_Ex05",
    "section": "2.2 Multiple Static Network Graph",
    "text": "2.2 Multiple Static Network Graph\n\n2.2.1 Using facet_edges()\n\n\nCode\nset_graph_style() \n\ng &lt;- ggraph(gt_graph, \n            layout = \"nicely\") + \n  geom_edge_link(aes(width = Weight), \n                 alpha = 0.2) +\n  scale_edge_width(range = c(0.1, 5)) +\n  geom_node_point(aes(colour = Department), \n                  size = 2)\n  \ng + facet_edges(~MainSubject) +\n  th_foreground(foreground = \"grey80\",  \n                border = TRUE) +\n  theme(legend.position = 'bottom')\n\n\n\n\n\n\n\n2.2.2 Using facet_nodes()\n\n\nCode\nset_graph_style() \n\ng &lt;- gt_graph %&gt;%\n  activate(edges) %&gt;%\n  filter(MainSubject == \"Work related\") %&gt;%\n  activate(nodes) %&gt;%\n  ggraph(layout = \"nicely\") + \n  geom_edge_link(aes(width = Weight), \n                 alpha = 0.2) +\n  scale_edge_width(range = c(0.1, 5)) +\n  geom_node_point(aes(colour = Department), \n                  size = 2)\n  \ng + facet_nodes(~Department) +\n  th_foreground(foreground = \"grey80\",  \n                border = TRUE) +\n  theme(legend.position = 'bottom')"
  },
  {
    "objectID": "Hands-on_Exercise/Hands-on_Ex06/Hands-on_Ex06.html#loading-packages",
    "href": "Hands-on_Exercise/Hands-on_Ex06/Hands-on_Ex06.html#loading-packages",
    "title": "Hands-on_Ex06",
    "section": "1.1 Loading packages",
    "text": "1.1 Loading packages\n\n\nCode\npacman::p_load(scales,\n               viridis,\n               lubridate,\n               ggthemes,\n               gridExtra,\n               readxl,\n               knitr,\n               data.table,\n               tidyverse,\n               CGPfunctions,  #for slopegraph\n               ggHoriPlot\n               )"
  },
  {
    "objectID": "Hands-on_Exercise/Hands-on_Ex06/Hands-on_Ex06.html#data-preparation",
    "href": "Hands-on_Exercise/Hands-on_Ex06/Hands-on_Ex06.html#data-preparation",
    "title": "Hands-on_Ex06",
    "section": "1.2 Data Preparation",
    "text": "1.2 Data Preparation\n\n1.2.1 Attack dataset\n\n\nCode\nattacks &lt;- read_csv(\"data/eventlog.csv\")\nkable(head(attacks))\n\n\n\n\n\ntimestamp\nsource_country\ntz\n\n\n\n\n2015-03-12 15:59:16\nCN\nAsia/Shanghai\n\n\n2015-03-12 16:00:48\nFR\nEurope/Paris\n\n\n2015-03-12 16:02:26\nCN\nAsia/Shanghai\n\n\n2015-03-12 16:02:38\nUS\nAmerica/Chicago\n\n\n2015-03-12 16:03:22\nCN\nAsia/Shanghai\n\n\n2015-03-12 16:03:45\nCN\nAsia/Shanghai\n\n\n\n\n\nThere are three columns, namely timestamp, source_country and tz.\n\ntimestamp field stores date-time values in POSIXct format.\nsource_country field stores the source of the attack. It is in ISO 3166-1 alpha-2 country code.\ntz field stores time zone of the source IP address.\n\nStep 1: Deriving weekday and hour of day fields\n\n\nCode\nmake_hr_wkday &lt;- function(ts, sc, tz) {\n  real_times &lt;- ymd_hms(ts, \n                        tz = tz[1], \n                        quiet = TRUE)\n  dt &lt;- data.table(source_country = sc,\n                   wkday = weekdays(real_times),\n                   hour = hour(real_times))\n  return(dt)\n  }\n\n\nStep 2: Deriving the attacks tibble data frame\n\n\nCode\nwkday_levels &lt;- c('Saturday', 'Friday', \n                  'Thursday', 'Wednesday', \n                  'Tuesday', 'Monday', \n                  'Sunday')\n\nattacks_new &lt;- attacks %&gt;%\n  group_by(tz) %&gt;%\n  do(make_hr_wkday(.$timestamp, \n                   .$source_country, \n                   .$tz)) %&gt;% \n  ungroup() %&gt;% \n  mutate(wkday = factor(\n    wkday, levels = wkday_levels),\n    hour  = factor(\n      hour, levels = 0:23))\n\nkable(head(attacks_new))\n\n\n\n\n\ntz\nsource_country\nwkday\nhour\n\n\n\n\nAfrica/Cairo\nBG\nSaturday\n20\n\n\nAfrica/Cairo\nTW\nSunday\n6\n\n\nAfrica/Cairo\nTW\nSunday\n8\n\n\nAfrica/Cairo\nCN\nSunday\n11\n\n\nAfrica/Cairo\nUS\nSunday\n15\n\n\nAfrica/Cairo\nCA\nMonday\n11\n\n\n\n\n\n\n\n1.2.2 Air arrivals dataset\n\n\nCode\nair &lt;- read_excel(\"data/arrivals_by_air.xlsx\")\nkable(head(air))\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nMonth-Year\nRepublic of South Africa\nCanada\nUSA\nBangladesh\nBrunei\nChina\nHong Kong SAR (China)\nIndia\nIndonesia\nJapan\nSouth Korea\nKuwait\nMalaysia\nMyanmar\nPakistan\nPhilippines\nSaudi Arabia\nSri Lanka\nTaiwan\nThailand\nUnited Arab Emirates\nVietnam\nBelgium & Luxembourg\nCIS\nFinland\nFrance\nGermany\nIreland\nItaly\nNetherlands\nSpain\nSwitzerland\nUnited Kingdom\nAustralia\nNew Zealand\n\n\n\n\n2000-01-01\n3291\n5545\n25906\n2883\n3749\n33895\n13692\n19235\n65151\n59288\n21457\n507\n27472\n1177\n2150\n8404\n1312\n3922\n15766\n12048\n1318\n1527\n1434\n2703\n1634\n4752\n12739\n1292\n3544\n4962\n925\n3731\n28986\n34616\n5034\n\n\n2000-02-01\n2357\n6120\n28262\n2469\n3236\n34344\n19870\n18975\n37105\n58188\n19634\n199\n29084\n1161\n2496\n9128\n623\n3988\n24861\n12745\n899\n2269\n1596\n1182\n1297\n6391\n13093\n1200\n2897\n5054\n747\n3980\n35148\n26030\n3938\n\n\n2000-03-01\n4036\n6255\n30439\n2904\n3342\n27053\n17086\n21049\n44205\n74426\n20719\n386\n30504\n1355\n2429\n11691\n1578\n4259\n18767\n16971\n1474\n2034\n1548\n1088\n1220\n5528\n13645\n1368\n2717\n4950\n935\n3576\n36117\n31119\n4668\n\n\n2000-04-01\n4241\n4521\n25378\n2843\n5117\n30464\n22346\n26160\n45480\n49985\n17489\n221\n34478\n1593\n2711\n14141\n705\n6579\n22735\n20397\n1284\n2420\n1592\n1012\n1208\n5544\n13366\n1345\n2512\n4149\n941\n3850\n33792\n34824\n6890\n\n\n2000-05-01\n2841\n3914\n26163\n2793\n4152\n30775\n16357\n35869\n38350\n48937\n19398\n164\n34795\n1397\n2594\n13305\n679\n4625\n18399\n15769\n1042\n1833\n1167\n660\n743\n4225\n10878\n1067\n2205\n3643\n764\n3025\n23377\n33139\n7006\n\n\n2000-06-01\n2776\n3487\n28179\n3146\n5018\n26720\n18133\n31314\n47982\n53798\n17522\n440\n34660\n1715\n2924\n10555\n2749\n4740\n21042\n17217\n1545\n2480\n1170\n712\n982\n4047\n9054\n1363\n2196\n3544\n855\n2580\n21769\n35731\n7634\n\n\n\n\n\nCreating MM YY columns\n\n\nCode\nair$month &lt;- factor(month(air$`Month-Year`),\n                    levels=1:12,\n                    labels=month.abb,\n                    ordered=TRUE)\nair$year &lt;- year(ymd(air$`Month-Year`))\nkable(head(air))\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nMonth-Year\nRepublic of South Africa\nCanada\nUSA\nBangladesh\nBrunei\nChina\nHong Kong SAR (China)\nIndia\nIndonesia\nJapan\nSouth Korea\nKuwait\nMalaysia\nMyanmar\nPakistan\nPhilippines\nSaudi Arabia\nSri Lanka\nTaiwan\nThailand\nUnited Arab Emirates\nVietnam\nBelgium & Luxembourg\nCIS\nFinland\nFrance\nGermany\nIreland\nItaly\nNetherlands\nSpain\nSwitzerland\nUnited Kingdom\nAustralia\nNew Zealand\nmonth\nyear\n\n\n\n\n2000-01-01\n3291\n5545\n25906\n2883\n3749\n33895\n13692\n19235\n65151\n59288\n21457\n507\n27472\n1177\n2150\n8404\n1312\n3922\n15766\n12048\n1318\n1527\n1434\n2703\n1634\n4752\n12739\n1292\n3544\n4962\n925\n3731\n28986\n34616\n5034\nJan\n2000\n\n\n2000-02-01\n2357\n6120\n28262\n2469\n3236\n34344\n19870\n18975\n37105\n58188\n19634\n199\n29084\n1161\n2496\n9128\n623\n3988\n24861\n12745\n899\n2269\n1596\n1182\n1297\n6391\n13093\n1200\n2897\n5054\n747\n3980\n35148\n26030\n3938\nFeb\n2000\n\n\n2000-03-01\n4036\n6255\n30439\n2904\n3342\n27053\n17086\n21049\n44205\n74426\n20719\n386\n30504\n1355\n2429\n11691\n1578\n4259\n18767\n16971\n1474\n2034\n1548\n1088\n1220\n5528\n13645\n1368\n2717\n4950\n935\n3576\n36117\n31119\n4668\nMar\n2000\n\n\n2000-04-01\n4241\n4521\n25378\n2843\n5117\n30464\n22346\n26160\n45480\n49985\n17489\n221\n34478\n1593\n2711\n14141\n705\n6579\n22735\n20397\n1284\n2420\n1592\n1012\n1208\n5544\n13366\n1345\n2512\n4149\n941\n3850\n33792\n34824\n6890\nApr\n2000\n\n\n2000-05-01\n2841\n3914\n26163\n2793\n4152\n30775\n16357\n35869\n38350\n48937\n19398\n164\n34795\n1397\n2594\n13305\n679\n4625\n18399\n15769\n1042\n1833\n1167\n660\n743\n4225\n10878\n1067\n2205\n3643\n764\n3025\n23377\n33139\n7006\nMay\n2000\n\n\n2000-06-01\n2776\n3487\n28179\n3146\n5018\n26720\n18133\n31314\n47982\n53798\n17522\n440\n34660\n1715\n2924\n10555\n2749\n4740\n21042\n17217\n1545\n2480\n1170\n712\n982\n4047\n9054\n1363\n2196\n3544\n855\n2580\n21769\n35731\n7634\nJun\n2000\n\n\n\n\n\n\n\n1.2.3 Rice dataset\n\n\nCode\nrice &lt;- read_csv(\"data/rice.csv\")\nkable(head(rice))\n\n\n\n\n\nCountry\nYear\nYield\nProduction\n\n\n\n\nChina\n1961\n20787\n56217601\n\n\nChina\n1962\n23700\n65675288\n\n\nChina\n1963\n26833\n76439280\n\n\nChina\n1964\n28289\n85853780\n\n\nChina\n1965\n29667\n90705630\n\n\nChina\n1966\n31445\n98403990\n\n\n\n\n\n\n\n1.2.4 Retail price dataset\n\n\nCode\naverp &lt;- read_csv(\"data/AVERP.csv\") %&gt;%\n  mutate(`Date` = dmy(`Date`))\nkable(head(averp))\n\n\n\n\n\nDate\nConsumer Items\nValues\n\n\n\n\n2014-01-01\nWholemeal Bread (Per 400 Gram)\n2.05\n\n\n2014-02-01\nWholemeal Bread (Per 400 Gram)\n2.05\n\n\n2014-03-01\nWholemeal Bread (Per 400 Gram)\n2.04\n\n\n2014-04-01\nWholemeal Bread (Per 400 Gram)\n2.04\n\n\n2014-05-01\nWholemeal Bread (Per 400 Gram)\n2.05\n\n\n2014-06-01\nWholemeal Bread (Per 400 Gram)\n2.05"
  },
  {
    "objectID": "Hands-on_Exercise/Hands-on_Ex06/Hands-on_Ex06.html#calendar-heatmap",
    "href": "Hands-on_Exercise/Hands-on_Ex06/Hands-on_Ex06.html#calendar-heatmap",
    "title": "Hands-on_Ex06",
    "section": "2.1 Calendar Heatmap",
    "text": "2.1 Calendar Heatmap\n\n2.1.1 Single Calendar Heatmap\n\nWithout theme_tufte()With theme_tufte()\n\n\n\n\nCode\ngrouped &lt;- attacks_new %&gt;%\n  count(wkday, hour) %&gt;%\n  ungroup() %&gt;%\n  na.omit()\n\nggplot(data = grouped,\n       aes(x = hour,\n           y = wkday,\n           fill = n)) + \n  geom_tile(color = \"white\",\n            size = 0.1) +\n  coord_equal() +\n  scale_fill_gradient(name = \"# of attacks\",\n                      low = \"sky blue\",\n                      high = \"dark blue\") +\n  labs(x = NULL,\n       y = NULL,\n       title = \"Attacks by weekday and time of day\") +\n  theme(axis.ticks = element_blank(),\n        plot.title = element_text(hjust = 0.5),\n        legend.title = element_text(size = 8),\n        legend.text = element_text(size = 6))\n\n\n\n\n\n\n\n\n\nCode\ngrouped &lt;- attacks_new %&gt;%\n  count(wkday, hour) %&gt;%\n  ungroup() %&gt;%\n  na.omit()\n\nggplot(data = grouped,\n       aes(x = hour,\n           y = wkday,\n           fill = n)) + \n  geom_tile(color = \"white\",\n            size = 0.1) +\n  theme_tufte(base_family = \"Helvetica\") +\n  coord_equal() +\n  scale_fill_gradient(name = \"# of attacks\",\n                      low = \"sky blue\",\n                      high = \"dark blue\") +\n  labs(x = NULL,\n       y = NULL,\n       title = \"Attacks by weekday and time of day\") +\n  theme(axis.ticks = element_blank(),\n        plot.title = element_text(hjust = 0.5),\n        legend.title = element_text(size = 8),\n        legend.text = element_text(size = 6))\n\n\n\n\n\n\n\n\n\n\n2.1.2 Multiple Calendar Heatmaps\n\n\nCode\nattacks_by_country &lt;- attacks_new %&gt;%\n  count(source_country) %&gt;%\n  mutate(percent = percent(n/sum(n))) %&gt;%\n  arrange(desc(n))\n\ntop4 &lt;- attacks_by_country$source_country[1:4]\ntop4_attacks &lt;- attacks_new %&gt;%\n  filter(source_country %in% top4) %&gt;%\n  count(source_country, wkday, hour) %&gt;%\n  ungroup() %&gt;%\n  mutate(source_country = factor(source_country, levels = top4)) %&gt;%\n  na.omit()\n\nkable(head(top4_attacks))\n\n\n\n\n\nsource_country\nwkday\nhour\nn\n\n\n\n\nCN\nSaturday\n0\n438\n\n\nCN\nSaturday\n1\n401\n\n\nCN\nSaturday\n2\n358\n\n\nCN\nSaturday\n3\n487\n\n\nCN\nSaturday\n4\n457\n\n\nCN\nSaturday\n5\n429\n\n\n\n\n\n\n\nCode\nggplot(data = top4_attacks,\n       aes(x = hour,\n           y = wkday,\n           fill = n)) + \n  geom_tile(color = \"white\",\n            size = 0.1) +\n  facet_wrap(~source_country, ncol = 2) +\n  theme_tufte(base_family = \"Helvetica\") +\n  coord_equal() +\n  scale_fill_gradient(name = \"# of attacks\",\n                      low = \"sky blue\",\n                      high = \"dark blue\") +\n  labs(x = NULL,\n       y = NULL,\n       title = \"Attacks on top 4 countries by weekday and time of day\") +\n  theme(axis.ticks = element_blank(),\n        plot.title = element_text(hjust = 0.5),\n        legend.title = element_text(size = 8),\n        legend.text = element_text(size = 6))"
  },
  {
    "objectID": "Hands-on_Exercise/Hands-on_Ex06/Hands-on_Ex06.html#cycle-plot",
    "href": "Hands-on_Exercise/Hands-on_Ex06/Hands-on_Ex06.html#cycle-plot",
    "title": "Hands-on_Ex06",
    "section": "2.2 Cycle Plot",
    "text": "2.2 Cycle Plot\n\n\nCode\nsubset_air &lt;- air %&gt;%\n  select(`Vietnam`,\n         month, \n         year) %&gt;%\n  filter(year &gt;= 2010)\n\nhline.data &lt;- subset_air %&gt;%\n  group_by(month) %&gt;%\n  summarise(avgvalue = mean(`Vietnam`))\n\nggplot() +\n  geom_line(data = subset_air,\n            aes(x = year,\n                y = `Vietnam`,\n                group = month),\n            colour = \"black\") +\n  geom_hline(aes(yintercept = avgvalue),\n             data = hline.data,\n             linetype = 6,\n             colour = \"red\",\n             size = 0.5) +\n  facet_grid(~month) +\n  labs(axis.text.x = element_blank(),\n       title = \"Vistor arrivals from Vietnam by air, Jan 2010 - Dec 2019\",\n       x = \"\",\n       y = \"No. of Visitors\") +\n  theme_tufte(base_family = \"Helvetica\")"
  },
  {
    "objectID": "Hands-on_Exercise/Hands-on_Ex06/Hands-on_Ex06.html#slopegraph",
    "href": "Hands-on_Exercise/Hands-on_Ex06/Hands-on_Ex06.html#slopegraph",
    "title": "Hands-on_Ex06",
    "section": "2.3 Slopegraph",
    "text": "2.3 Slopegraph\n\n\nCode\nrice %&gt;% \n  mutate(Year = factor(Year)) %&gt;%\n  filter(Year %in% c(1961, 1980)) %&gt;%\n  newggslopegraph(Year, Yield, Country,\n                  Title = \"Rice Yield of Top 11 Asian Countries\",\n                  SubTitle = \"1961 - 1980\",\n                  Caption = \"Modified\")"
  },
  {
    "objectID": "Hands-on_Exercise/Hands-on_Ex06/Hands-on_Ex06.html#horizon-graph",
    "href": "Hands-on_Exercise/Hands-on_Ex06/Hands-on_Ex06.html#horizon-graph",
    "title": "Hands-on_Ex06",
    "section": "2.4 Horizon Graph",
    "text": "2.4 Horizon Graph\n\n\nCode\naverp %&gt;%\n  filter(Date &gt;= \"2018-01-01\") %&gt;%\n  ggplot() + \n  geom_horizon(aes(x = Date, y=Values), \n               origin = \"midpoint\", \n               horizonscale = 6)+\n  facet_grid(`Consumer Items`~.) +\n  theme_few() +\n  scale_fill_hcl(palette = 'RdBu') +\n  theme(panel.spacing.y=unit(0, \"lines\"), strip.text.y = element_text(\n    size = 5, angle = 0, hjust = 0),\n    legend.position = 'none',\n    axis.text.y = element_blank(),\n    axis.text.x = element_text(size=7),\n    axis.title.y = element_blank(),\n    axis.title.x = element_blank(),\n    axis.ticks.y = element_blank(),\n    panel.border = element_blank()\n    ) +\n  scale_x_date(expand=c(0,0), date_breaks = \"3 month\", date_labels = \"%b%y\") +\n  ggtitle(\"Average Retail Prices of Selected Consumer Items (Jan 2018 to Dec 20222)\")"
  },
  {
    "objectID": "Take-home_Exercise/Take-home_Ex02/Take-home_Ex02.html",
    "href": "Take-home_Exercise/Take-home_Ex02/Take-home_Ex02.html",
    "title": "Take-home_Ex02",
    "section": "",
    "text": "The dataset provided is a directed multigraph in JSON format. It contains information about people in the music industry, songs, albums, record labels, and the relationships between them such as performances, collaborations, and influences.\n\n\nCode\n# Read graph data\ngraph_data &lt;- fromJSON(\"data/MC1_graph.json\")\n\n# Extract clean nodes and edges\nnodes_tbl &lt;- graph_data$nodes %&gt;% distinct(id, .keep_all = TRUE)\nedges_tbl &lt;- graph_data$links\n\n# Recreate id-to-row-index mapping\nid_map &lt;- tibble(id = nodes_tbl$id, index = seq_len(nrow(nodes_tbl)))\n\n# Rebuild edges_tbl to include row indices as from / to\nedges_tbl &lt;- graph_data$links %&gt;%\n  left_join(id_map, by = c(\"source\" = \"id\")) %&gt;%\n  rename(from = index) %&gt;%\n  left_join(id_map, by = c(\"target\" = \"id\")) %&gt;%\n  rename(to = index) %&gt;%\n  filter(!is.na(from), !is.na(to))\n\n# Build base tidygraph\ng &lt;- tbl_graph(nodes = nodes_tbl, edges = edges_tbl, directed = graph_data$directed)"
  },
  {
    "objectID": "Take-home_Exercise/Take-home_Ex02/Take-home_Ex02.html#load-knowledge-graph-data",
    "href": "Take-home_Exercise/Take-home_Ex02/Take-home_Ex02.html#load-knowledge-graph-data",
    "title": "Take-home_Ex02",
    "section": "",
    "text": "The dataset provided is a directed multigraph in JSON format. It contains information about people in the music industry, songs, albums, record labels, and the relationships between them such as performances, collaborations, and influences.\n\n\nCode\n# Read graph data\ngraph_data &lt;- fromJSON(\"data/MC1_graph.json\")\n\n# Extract clean nodes and edges\nnodes_tbl &lt;- graph_data$nodes %&gt;% distinct(id, .keep_all = TRUE)\nedges_tbl &lt;- graph_data$links\n\n# Recreate id-to-row-index mapping\nid_map &lt;- tibble(id = nodes_tbl$id, index = seq_len(nrow(nodes_tbl)))\n\n# Rebuild edges_tbl to include row indices as from / to\nedges_tbl &lt;- graph_data$links %&gt;%\n  left_join(id_map, by = c(\"source\" = \"id\")) %&gt;%\n  rename(from = index) %&gt;%\n  left_join(id_map, by = c(\"target\" = \"id\")) %&gt;%\n  rename(to = index) %&gt;%\n  filter(!is.na(from), !is.na(to))\n\n# Build base tidygraph\ng &lt;- tbl_graph(nodes = nodes_tbl, edges = edges_tbl, directed = graph_data$directed)"
  },
  {
    "objectID": "Take-home_Exercise/Take-home_Ex02/Take-home_Ex02.html#exploratory-data-analysis-eda-graph-overview",
    "href": "Take-home_Exercise/Take-home_Ex02/Take-home_Ex02.html#exploratory-data-analysis-eda-graph-overview",
    "title": "Take-home_Ex02",
    "section": "🔍 1.1 Exploratory Data Analysis (EDA): Graph Overview",
    "text": "🔍 1.1 Exploratory Data Analysis (EDA): Graph Overview\n\n\nCode\n# Total number of nodes and edges\ntotal_nodes &lt;- nrow(nodes_tbl)\ntotal_edges &lt;- nrow(edges_tbl)\n\n# Unique node types\nnode_types &lt;- nodes_tbl %&gt;% count(`Node Type`, sort = TRUE)\n\n# Unique edge types\nedge_types &lt;- edges_tbl %&gt;% count(`Edge Type`, sort = TRUE)\n\nlist(\n  Total_Nodes = total_nodes,\n  Total_Edges = total_edges,\n  Node_Types = node_types,\n  Edge_Types = edge_types\n)\n\n\n$Total_Nodes\n[1] 17412\n\n$Total_Edges\n[1] 37857\n\n$Node_Types\n     Node Type     n\n1       Person 11361\n2         Song  3615\n3  RecordLabel  1217\n4        Album   996\n5 MusicalGroup   223\n\n$Edge_Types\n            Edge Type     n\n1         PerformerOf 13587\n2          RecordedBy  3798\n3          ComposerOf  3290\n4          ProducerOf  3209\n5       DistributedBy  3013\n6          LyricistOf  2985\n7           InStyleOf  2289\n8    InterpolatesFrom  1574\n9  LyricalReferenceTo  1496\n10            CoverOf  1429\n11    DirectlySamples   619\n12           MemberOf   568"
  },
  {
    "objectID": "Take-home_Exercise/Take-home_Ex02/Take-home_Ex02.html#identify-sailor-shift",
    "href": "Take-home_Exercise/Take-home_Ex02/Take-home_Ex02.html#identify-sailor-shift",
    "title": "Take-home_Ex02",
    "section": "🎤 2. Identify Sailor Shift",
    "text": "🎤 2. Identify Sailor Shift\nTo analyze the rise of a specific artist, we start by finding their unique ID within the graph. In this case, we look for “Sailor Shift”.\n\n\nCode\nsailor_id &lt;- nodes_tbl %&gt;%\n  filter(`Node Type` == \"Person\", name == \"Sailor Shift\") %&gt;%\n  pull(id)"
  },
  {
    "objectID": "Take-home_Exercise/Take-home_Ex02/Take-home_Ex02.html#extract-and-analyze-song-timeline",
    "href": "Take-home_Exercise/Take-home_Ex02/Take-home_Ex02.html#extract-and-analyze-song-timeline",
    "title": "Take-home_Ex02",
    "section": "⏳ 3. Extract and Analyze Song Timeline",
    "text": "⏳ 3. Extract and Analyze Song Timeline\nWe retrieve all songs performed by Sailor Shift and examine their release years, whether they were charted, and how her production activity changed over time.\n\n\nCode\nsailor_songs &lt;- edges_tbl %&gt;%\n  filter(`Edge Type` == \"PerformerOf\", source == sailor_id) %&gt;%\n  left_join(nodes_tbl, by = c(\"target\" = \"id\")) %&gt;%\n  filter(`Node Type` == \"Song\") %&gt;%\n  select(name, genre, notable, release_date, notoriety_date) %&gt;%\n  mutate(\n    release_year = as.numeric(release_date),\n    charted = ifelse(is.na(notoriety_date), \"Uncharted\", \"Charted\")\n  )"
  },
  {
    "objectID": "Take-home_Exercise/Take-home_Ex02/Take-home_Ex02.html#visualize-song-release-timeline",
    "href": "Take-home_Exercise/Take-home_Ex02/Take-home_Ex02.html#visualize-song-release-timeline",
    "title": "Take-home_Ex02",
    "section": "📊 4. Visualize Song Release Timeline",
    "text": "📊 4. Visualize Song Release Timeline\nThis visualization shows how Sailor Shift’s production evolved over time, highlighting which songs made it onto top charts. This helps us understand the timing and intensity of her breakthrough.\n\n\nCode\nggplot(sailor_songs, aes(x = release_year, fill = charted)) +\n  geom_bar(stat = \"count\", width = 0.7, color = \"white\") +\n  scale_fill_manual(\n    values = c(\"Charted\" = \"#4A90E2\", \"Uncharted\" = \"#A0AFC1\"),\n    name = \"Song Status\"\n  ) +\n  scale_x_continuous(breaks = pretty_breaks(n = 10)) +\n  labs(\n    title = \"\\U0001F3B6 Sailor Shift’s Song Releases Over Time\",\n    subtitle = \"Comparing charted vs. uncharted works by release year\",\n    x = \"Release Year\",\n    y = \"Number of Songs\"\n  ) +\n  theme_minimal(base_size = 14) +\n  theme(\n    plot.title = element_text(face = \"bold\", size = 18),\n    plot.subtitle = element_text(color = \"gray40\"),\n    legend.position = \"top\",\n    legend.title = element_text(face = \"bold\"),\n    axis.title.y = element_text(face = \"bold\"),\n    panel.grid.minor = element_blank()\n  )"
  },
  {
    "objectID": "Take-home_Exercise/Take-home_Ex02/Take-home_Ex02.html#collaboration-and-influence-network-preview",
    "href": "Take-home_Exercise/Take-home_Ex02/Take-home_Ex02.html#collaboration-and-influence-network-preview",
    "title": "Take-home_Ex02",
    "section": "🤝 5. Collaboration and Influence Network (Preview)",
    "text": "🤝 5. Collaboration and Influence Network (Preview)\nThis section will visualize Sailor Shift’s immediate connections – both collaborators and those she has influenced or been influenced by.\n\n\nCode\ncollab_edges &lt;- edges_tbl %&gt;%\n  filter(source == sailor_id | target == sailor_id)\n\ng_ego &lt;- tbl_graph(nodes = nodes_tbl, edges = collab_edges, directed = TRUE) %&gt;%\n  filter(!is.na(name))\n\nggraph(g_ego, layout = \"fr\") +\n  geom_edge_link(alpha = 0.6) +\n  geom_node_point(aes(color = `Node Type`), size = 4) +\n  geom_node_text(aes(label = name), repel = TRUE, size = 3) +\n  labs(title = \"Sailor Shift's Collaboration & Influence Network\") +\n  theme_void()"
  },
  {
    "objectID": "Take-home_Exercise/Take-home_Ex02/Take-home_Ex02.html#interpretation-breakout-signature",
    "href": "Take-home_Exercise/Take-home_Ex02/Take-home_Ex02.html#interpretation-breakout-signature",
    "title": "Take-home_Ex02",
    "section": "🧠 6. Interpretation: Breakout Signature",
    "text": "🧠 6. Interpretation: Breakout Signature\nBased on the timeline and network data, we can infer Sailor Shift’s breakout dynamics:\n\nProductivity Spike: A significant increase in musical output before her first chart appearance.\nStrategic Collaborations: She worked with established or diverse artists just before and during her breakout.\nGenre Innovation: A visible genre shift or expansion occurred around her charting years.\nInfluence Footprint: She began to influence others (e.g. CoverOf, InStyleOf edges) after becoming notable.\n\n\n✨ Summary: Sailor Shift’s Breakout Signature\n\n⏰ High release intensity between year X and Y\n🎤 Performed songs that later became charted\n🤝 Grew collaboration network significantly just before fame\n🌊 Her style began influencing others post-fame\n\nThis profile can be used to compare and score other artists in predictive models."
  },
  {
    "objectID": "Take-home_Exercise/Take-home_Ex02/Take-home_Ex02.html#edge-types-reference-table",
    "href": "Take-home_Exercise/Take-home_Ex02/Take-home_Ex02.html#edge-types-reference-table",
    "title": "Take-home_Ex02",
    "section": "🔗 Edge Types Reference Table",
    "text": "🔗 Edge Types Reference Table\nBelow is the detailed explanation of all possible Edge Types in the knowledge graph, which describe different types of relationships between entities (nodes).\n\n🎵 Creative and Collaboration Relationships\n\n\n\nEdge Type\nMeaning\n\n\n\n\nPerformerOf\nA (person/group) performed B (song/album)\n\n\nComposerOf\nA is the composer of B\n\n\nLyricistOf\nA is the lyricist of B\n\n\nProducerOf\nA is the producer of B\n\n\n\n\n\n🏢 Company Relationships\n\n\n\nEdge Type\nMeaning\n\n\n\n\nRecordedBy\nA (work) was recorded by B (record label)\n\n\nDistributedBy\nA (work) was distributed by B (record label)\n\n\n\n\n\n🎨 Style and Influence Relationships\n\n\n\nEdge Type\nMeaning\n\n\n\n\nInStyleOf\nA mimics the style of B\n\n\nCoverOf\nA is a cover version of B\n\n\nInterpolatesFrom\nA interpolates melody from B\n\n\nLyricalReferenceTo\nA makes a lyrical reference to B\n\n\nDirectlySamples\nA directly samples audio from B\n\n\n\n\n\n👥 Membership Relationships\n\n\n\nEdge Type\nMeaning\n\n\n\n\nMemberOf\nA is a member of B (a music group or collective)\n\n\n\nTheir distribution is plotted below:\n\n\nCode\nedge_palette &lt;- c(\"#CA5310\", \"#F5C518\", \"#E5989B\", \"#38B000\", \"#2D3142\", \"#06D6A0\", \"#83C5BE\",\n                  \"#F4A261\", \"#F6BD60\", \"#A9DEF9\", \"#CBAACB\", \"#9B5DE5\")\n\nedge_types &lt;- edge_types %&gt;% \n  mutate(text_color = ifelse(n &gt; 2000, \"white\", \"black\"),\n         text_hjust = ifelse(n &gt; 2000, 1.1, -0.1))\n\nggplot(edge_types, aes(x = reorder(`Edge Type`, n), y = n, fill = `Edge Type`)) +\n  geom_col(width = 0.65, show.legend = FALSE) +\n  geom_text(aes(label = n, hjust = text_hjust, color = text_color), \n            size = 4.5, fontface = \"bold\") +\n  coord_flip(clip = \"off\") +\n  scale_fill_manual(values = edge_palette) +\n  scale_color_identity() +\n  labs(\n    title = \"&lt;b style='font-size:20pt;'&gt;Edge Type Distribution&lt;/b&gt;\",\n    subtitle = \"&lt;span style='color:#666666;'&gt;Types and frequency of relationships in the knowledge graph&lt;/span&gt;\",\n    x = NULL,\n    y = NULL\n  ) +\n  theme_minimal(base_family = \"Helvetica Neue\") +\n  theme(\n    panel.grid = element_blank(),\n    axis.text.y = element_text(face = \"bold\", size = 13, color = \"#222222\"),\n    axis.text.x = element_blank(),\n    axis.ticks = element_blank(),\n    plot.title = element_markdown(size = 20, face = \"bold\", hjust = 0),\n    plot.subtitle = element_markdown(size = 13, hjust = 0),\n    plot.margin = margin(10, 60, 30, 10)\n  )\n\n\n\n\n\nThese insights provide a foundation to interpret future patterns in artist collaboration, influence, and success prediction."
  },
  {
    "objectID": "Take-home_Exercise/Take-home_Ex02/Take-home_Ex02.html#sailor-shifts-ego-network-overview-full-connected-subgraph",
    "href": "Take-home_Exercise/Take-home_Ex02/Take-home_Ex02.html#sailor-shifts-ego-network-overview-full-connected-subgraph",
    "title": "Take-home_Ex02",
    "section": "🌍 2. Sailor Shift’s Ego Network Overview (Full Connected Subgraph)",
    "text": "🌍 2. Sailor Shift’s Ego Network Overview (Full Connected Subgraph)\n\n📌 Objective\nThis section extracts and visualizes the full connected subgraph centered on Sailor Shift, showcasing all directly and indirectly connected entities in the knowledge graph.\n\n\n\n🌭️ Step 1: Extract All Connected Nodes\n\n\nCode\n# Get Sailor Shift's node id\nsailor_id &lt;- nodes_tbl %&gt;% \n  filter(name == \"Sailor Shift\") %&gt;% \n  pull(id)\n\n# Convert tidygraph to igraph for component extraction\nig &lt;- as.igraph(g)\n\n# Identify the connected component that includes Sailor Shift\ncomponent_id &lt;- igraph::components(ig)$membership[which(V(ig)$id == sailor_id)]\nconnected_ids &lt;- V(ig)[igraph::components(ig)$membership == component_id]$name\n\n\n\n\n\n🌍 Step 2: Visualize Static Subgraph with Interactive 3-Hop Network\n\n\nCode\n# Convert to igraph and compute 3-hop neighborhood\nig &lt;- as.igraph(g)\nsailor_vid &lt;- which(V(ig)$id == sailor_id)\nneighbor_ids &lt;- ego(ig, order = 2, nodes = sailor_vid, mode = \"all\")[[1]]\n\nsub3_ids &lt;- V(ig)[neighbor_ids]$id\nsub3_nodes_tbl &lt;- nodes_tbl %&gt;% filter(id %in% sub3_ids)\nsub3_edges_tbl &lt;- edges_tbl %&gt;% filter(source %in% sub3_ids & target %in% sub3_ids)\n\n# Prepare visNetwork data\n# Modify vis_nodes to make \"Sailor Shift\" larger and bold\nvis_nodes &lt;- sub3_nodes_tbl %&gt;%\n  mutate(size = ifelse(name == \"Sailor Shift\", 50, 20)) %&gt;%  # 🔍 Control node size\n  transmute(\n    id = id,\n    label = name,\n    group = `Node Type`,\n    title = paste0(\"&lt;b&gt;\", name, \"&lt;/b&gt;&lt;br&gt;Type: \", `Node Type`),\n    value = size  # visNetwork uses 'value' to control node size\n  )\n\n# vis_edges remains unchanged\nvis_edges &lt;- sub3_edges_tbl %&gt;%\n  transmute(from = source, to = target, label = `Edge Type`, arrows = \"to\")\n\n# Render Interactive Graph with highlighted Sailor Shift\nvisNetwork(vis_nodes, vis_edges, width = \"100%\", height = \"700px\") %&gt;%\n  visEdges(smooth = TRUE) %&gt;%\n  visOptions(highlightNearest = list(enabled = TRUE, degree = 2), nodesIdSelection = TRUE) %&gt;%\n  visLayout(randomSeed = 2025) %&gt;%\n  visLegend(useGroups = TRUE, main = \"Node Type\") %&gt;%\n  visPhysics(stabilization = TRUE)\n\n\n\n\n\n\n\n\nThis full subgraph gives a comprehensive view of Sailor Shift’s artistic ecosystem, while the interactive 3-hop version allows users to explore relationships with greater clarity and responsiveness.\n🔍 Insight: Sailor Shift’s Influence Ecosystem The Ego Network of Sailor Shift reveals a highly connected artistic ecosystem spanning songs, albums, musical groups, and record labels. Her position at the center of a dense subgraph highlights her role as a key figure in the Oceanus Folk community. The variety of edges (e.g., InterpolatesFrom, PerformerOf, MemberOf) suggests not only her creative versatility but also her multi-layered influence network—including direct artistic collaborations and indirect stylistic references.\nNotably:\nShe interacts with all five node types (Person, Song, Album, MusicalGroup, RecordLabel),\nHer connections include both creative influence (via stylistic or lyrical references) and professional affiliations (production, distribution, membership).\nThis network serves as a powerful visual entry point for investigating how and by whom Sailor Shift has been influenced, who she in turn has influenced, and what her broader role is within the Oceanus Folk genre.\n🚀 Moving Forward: Task-based Subgraph Exploration With this foundation, we will now delve deeper into three core analytical tasks, each focused on a unique aspect of Sailor Shift’s artistic identity and influence. Each task will be accompanied by an interactive or static visualization powered by the knowledge graph."
  },
  {
    "objectID": "Take-home_Exercise/Take-home_Ex02/Take-home_Ex02.html#node-types-description",
    "href": "Take-home_Exercise/Take-home_Ex02/Take-home_Ex02.html#node-types-description",
    "title": "Take-home_Ex02",
    "section": "🧩 Node Types Description",
    "text": "🧩 Node Types Description\nBased on the data dictionary and actual values in the JSON file, we can classify the following node types:\n\n\n\n\n\n\n\nNode Type\nDescription\n\n\n\n\nPerson\nAny individual contributor, including singers, lyricists, composers, etc.\n\n\nMusicalGroup\nGroups formed by multiple individuals, e.g., bands or choirs\n\n\nSong\nIndividual song tracks with attributes like release date, genre, etc.\n\n\nAlbum\nGrouped collections of songs, with their own release and popularity markers\n\n\nRecordLabel\nOrganizations involved in production, recording, or distribution\n\n\n\nWe can also check their frequency in the dataset:\n\n\nCode\n# Custom palette inspired by genre styles\ngenre_palette &lt;- c(\n  \"#A566FF\",  # Person (lavender)\n  \"#2ECC71\",  # Song (green)\n  \"#1C1C1E\",  # RecordLabel (black)\n  \"#FA7268\",  # Album (salmon)\n  \"#34B1C4\"   # MusicalGroup (aqua)\n)\n\nnode_types &lt;- node_types %&gt;% \n  mutate(text_color = ifelse(n &gt; 1000, \"white\", \"black\"),\n         text_hjust = ifelse(n &gt; 1000, 1.1, -0.1))\n\nggplot(node_types, aes(x = reorder(`Node Type`, n), y = n, fill = `Node Type`)) +\n  geom_col(width = 0.65, show.legend = FALSE) +\n  geom_text(aes(label = n, hjust = text_hjust, color = text_color), \n            size = 4.5, fontface = \"bold\") +\n  coord_flip(clip = \"off\") +\n  scale_fill_manual(values = genre_palette) +\n  scale_color_identity() +\n  labs(\n    title = \"&lt;b style='font-size:20pt;'&gt;Node Type Distribution&lt;/b&gt;\",\n    subtitle = \"&lt;span style='color:#666666;'&gt;Count of each node type in the knowledge graph&lt;/span&gt;\",\n    x = NULL,\n    y = NULL\n  ) +\n  theme_minimal(base_family = \"Helvetica Neue\") +\n  theme(\n    panel.grid = element_blank(),\n    axis.text.y = element_text(face = \"bold\", size = 13, color = \"#222222\"),\n    axis.text.x = element_blank(),\n    axis.ticks = element_blank(),\n    plot.title = element_markdown(size = 20, face = \"bold\", hjust = 0),\n    plot.subtitle = element_markdown(size = 13, hjust = 0),\n    plot.margin = margin(10, 60, 30, 10)\n  )"
  },
  {
    "objectID": "Take-home_Exercise/Take-home_Ex02/Take-home_Ex02.html#task-1-who-has-influenced-sailor-shift",
    "href": "Take-home_Exercise/Take-home_Ex02/Take-home_Ex02.html#task-1-who-has-influenced-sailor-shift",
    "title": "Take-home_Ex02",
    "section": "✅ Task 1 – Who Has Influenced Sailor Shift?",
    "text": "✅ Task 1 – Who Has Influenced Sailor Shift?\n\n🎯 Objective:\nUse the knowledge graph to identify who has influenced Sailor Shift over time, by analyzing stylistic, lyrical, or sampling relationships represented in the graph. These insights will reveal patterns in her creative development.\n\n\n\n🔍 Why This Approach?\nSailor Shift’s musical evolution is shaped by direct and indirect artistic influences. In a knowledge graph, influence is captured by specific edge types:\n\n\n🎨 Style and Influence Relationships\n\n\n\nEdge Type\nMeaning\n\n\n\n\nInStyleOf\nA mimics the style of B\n\n\nCoverOf\nA is a cover version of B\n\n\nInterpolatesFrom\nA interpolates melody from B\n\n\nLyricalReferenceTo\nA makes a lyrical reference to B\n\n\nDirectlySamples\nA directly samples audio from B\n\n\n\nThese edge types describe different ways an artist or work may influence Sailor Shift. By filtering the graph for these edge types where Sailor Shift is the target, we construct a reliable picture of who influenced her and how.\n\nBy filtering the graph for these edge types targeting Sailor Shift, we can construct a reliable view of her artistic lineage.\n\n\n\n📌 Step 1: Extract Influencer Edges\n\n\nCode\ninfluence_types &lt;- c(\"InStyleOf\", \"CoverOf\", \"InterpolatesFrom\", \"LyricalReferenceTo\", \"DirectlySamples\")\n\n# Get edges that influence her\ninfluencer_edges &lt;- graph_data$links %&gt;%\n  filter(`Edge Type` %in% influence_types, target == sailor_id) %&gt;%\n  left_join(nodes_tbl, by = c(\"source\" = \"id\")) %&gt;%\n  rename(influencer_name = name, influencer_type = `Node Type`) %&gt;%\n  select(source, target, `Edge Type`, influencer_name, influencer_type)\n\n\n\n\n\n📌 Step 2: Visualize Influencer Type Distribution\n\n\nCode\ninfluencer_edges %&gt;%\n  count(`Edge Type`, influencer_type) %&gt;%\n  ggplot(aes(x = reorder(`Edge Type`, n), y = n, fill = influencer_type)) +\n  geom_col(width = 0.7) +\n  coord_flip() +\n  labs(\n    title = \"Types of Influences on Sailor Shift\",\n    subtitle = \"By relationship and influencer type\",\n    x = NULL,\n    y = \"Count\"\n  ) +\n  theme_minimal(base_family = \"Helvetica Neue\") +\n  theme(\n    plot.title = element_text(face = \"bold\", size = 16),\n    plot.subtitle = element_text(size = 12),\n    axis.text.y = element_text(face = \"bold\"),\n    panel.grid.major.y = element_blank(),\n    axis.text.x = element_blank(),\n    legend.title = element_blank()\n  )\n\n\n\n\n\n🔍 Insight: Who Influenced Sailor Shift?\nThe bar chart reveals the distribution of influence types on Sailor Shift, broken down by the influencer’s node type (MusicalGroup or Person). Key takeaways:\n\nMusicalGroups are dominant in all influence categories:\n\nThey account for all InStyleOf influences, suggesting that Sailor Shift’s stylistic inspirations largely stem from band-level aesthetics.\nFor DirectlySamples, MusicalGroup nodes are again the exclusive contributors, highlighting a tendency to sample from established group-based soundscapes.\n\nPersons contribute notably to lyrical and melodic references:\n\nHalf of the LyricalReferenceTo and InterpolatesFrom edges are from Person nodes. This suggests a more personal or individual-driven source of lyrical and melodic inspiration, possibly tied to solo artist storytelling.\n\n\n\n\n\n📌 Step 3: Visualize Knowledge Graph of Influencers\n\n\nCode\n# Extract relevant nodes\ninfluencer_ids &lt;- influencer_edges$source\n\ninfluencer_nodes &lt;- nodes_tbl %&gt;%\n  filter(id %in% influencer_ids | id == sailor_id) %&gt;%\n  distinct(id, .keep_all = TRUE)\n\ninfluencer_links &lt;- graph_data$links %&gt;%\n  filter(source %in% influencer_ids, target == sailor_id)\n\n# Map to row indices for subgraph\nid_map &lt;- tibble(id = influencer_nodes$id, index = seq_len(nrow(influencer_nodes)))\n\ninfluencer_links_mapped &lt;- influencer_links %&gt;%\n  left_join(id_map, by = c(\"source\" = \"id\")) %&gt;%\n  rename(from = index) %&gt;%\n  left_join(id_map, by = c(\"target\" = \"id\")) %&gt;%\n  rename(to = index) %&gt;%\n  filter(!is.na(from), !is.na(to))\n\n# Create subgraph\ninfluencer_graph &lt;- tbl_graph(nodes = influencer_nodes, edges = influencer_links_mapped, directed = TRUE)\n\n# Draw the graph\nset.seed(2025)\nggraph(influencer_graph, layout = \"kk\") +\n  geom_edge_link(\n    aes(color = `Edge Type`),\n    arrow = arrow(length = unit(4, 'mm')),\n    end_cap = circle(3, 'mm')\n  ) +\n  geom_node_point(aes(color = `Node Type`), size = 5) +\n  geom_node_text(\n    aes(label = name),  # ✅ Show all node names\n    repel = TRUE,\n    size = 4,\n    fontface = ifelse(influencer_nodes$name == \"Sailor Shift\", \"bold\", \"plain\")\n  ) +\n  labs(\n    title = \"Who Influenced Sailor Shift?\",\n    subtitle = \"All nodes labeled in subgraph\"\n  ) +\n  theme_graph(base_family = \"Helvetica Neue\")\n\n\n\n\n\n\n\n🔍 Step 3 Insight: Direct Artistic Influences on Sailor Shift\nThe static knowledge graph in Step 3 provides a clear snapshot of who directly influenced Sailor Shift, based on well-defined artistic relationships such as DirectlySamples, InterpolatesFrom, InStyleOf, and LyricalReferenceTo.\n\n✨ Key Observations:\n\nDiverse Influence Channels: Sailor Shift’s inspirations are not confined to a single creative channel. She samples music (DirectlySamples), borrows stylistic cues (InStyleOf), lifts lyrical fragments (LyricalReferenceTo), and interpolates melodies (InterpolatesFrom).\nBalanced Influencer Types: Influences come from both individual artists and musical groups, indicating that her artistry draws from both personal voices and collective aesthetics.\nDense Inbound Edges: The graph shows multiple inbound links converging on Sailor Shift, underscoring her role as a stylistic inheritor of a tightly connected creative network.\n\n\n\n🧠 Interpretation:\nThis direct influence map builds a foundation for understanding her creative identity. However, it only reflects surface-level lineage—i.e., those explicitly linked to her in the graph.\n\n\n\n⏭️ Why We Proceed to Step 4\nWhile Step 3 gives us a high-fidelity view of Sailor Shift’s direct inspirations, it leaves several questions unanswered:\n\nWho are the individuals behind the musical groups?\nAre there unseen intermediaries—like songs or albums—that serve as vehicles of influence?\nWhat multi-hop chains of inspiration exist beyond what is immediately visible?\n\nTo answer these, we transition to Step 4, where we:\n\nTraverse multi-layer influence chains (not limited to 1-hop)\nExpand MusicalGroup nodes into their individual Person members (via MemberOf)\nVisualize deep indirect relationships that build Sailor Shift’s identity over time\n\n\n\n\n\n📌 Step 4: Show All Influence Types in Indirect Graph\n\n\nCode\n# Influence edge types\ninfluence_types &lt;- c(\"InStyleOf\", \"CoverOf\", \"InterpolatesFrom\", \"LyricalReferenceTo\", \"DirectlySamples\")\n\n# Expand full influence paths recursively (e.g. up to 5 hops)\nmax_depth &lt;- 5\ninfluence_paths &lt;- tibble()\ncurrent_targets &lt;- sailor_id\n\nfor (i in 1:max_depth) {\n  next_edges &lt;- edges_tbl %&gt;% filter(`Edge Type` %in% influence_types, target %in% current_targets)\n  if (nrow(next_edges) == 0) break\n  next_edges &lt;- next_edges %&gt;% mutate(depth = paste0(i, \"-hop\"))\n  influence_paths &lt;- bind_rows(influence_paths, next_edges)\n  current_targets &lt;- unique(next_edges$source)\n}\n\n# Identify Musical Groups and expand their members\nmusical_group_ids &lt;- nodes_tbl %&gt;% filter(`Node Type` == \"MusicalGroup\") %&gt;% pull(id)\nmember_edges &lt;- edges_tbl %&gt;% filter(`Edge Type` == \"MemberOf\", target %in% musical_group_ids)\n\n# If any musical group is in influence path, bring in members\ngroup_ids_in_path &lt;- influence_paths %&gt;% filter(source %in% musical_group_ids) %&gt;% pull(source)\nextra_members &lt;- member_edges %&gt;% filter(target %in% group_ids_in_path)\n\n# Combine all edges\nfull_edges &lt;- bind_rows(\n  influence_paths %&gt;% mutate(hop = depth),\n  extra_members %&gt;% mutate(hop = \"GroupMember\")\n)\n\n# Related node ids\nrelated_ids &lt;- unique(c(full_edges$source, full_edges$target, sailor_id))\nvis_nodes &lt;- nodes_tbl %&gt;% filter(id %in% related_ids) %&gt;%\n  mutate(\n    label = name,\n    group = `Node Type`,\n    value = ifelse(name == \"Sailor Shift\", 50, 20),\n    title = paste0(\"&lt;b&gt;\", name, \"&lt;/b&gt;&lt;br&gt;Type: \", `Node Type`)\n  ) %&gt;%\n  select(id, label, group, value, title)\n\nvis_edges &lt;- full_edges %&gt;%\n  mutate(\n    arrows = \"to\",\n    label = `Edge Type`,\n    color = case_when(\n      `Edge Type` == \"DirectlySamples\" ~ \"#FF6B6B\",\n      `Edge Type` == \"InterpolatesFrom\" ~ \"#4D96FF\",\n      `Edge Type` == \"CoverOf\" ~ \"#FFD93D\",\n      `Edge Type` == \"InStyleOf\" ~ \"#6BCB77\",\n      `Edge Type` == \"LyricalReferenceTo\" ~ \"#C780FA\",\n      `Edge Type` == \"MemberOf\" ~ \"#BDBDBD\",\n      TRUE ~ \"#999999\"\n    )\n  ) %&gt;%\n  select(from = source, to = target, arrows, label, color)\n\nvisNetwork(vis_nodes, vis_edges, width = \"100%\", height = \"800px\") %&gt;%\n  visEdges(smooth = TRUE) %&gt;%\n  visOptions(highlightNearest = TRUE, nodesIdSelection = TRUE) %&gt;%\n  visLayout(randomSeed = 2025) %&gt;%\n  visLegend(useGroups = TRUE, main = \"Node Type\") %&gt;%\n  visPhysics(stabilization = TRUE)\n\n\n\n\n\n\n\n🔍 Step 4 Insight: Full Influence Graph with Group Member Expansion\nThe interactive graph in Step 4 reveals the deep influence structure surrounding Sailor Shift, integrating both direct and indirect artistic relationships and group-to-individual decompositions.\n\n\n🎯 Key Observations:\n\nMusical Groups as Gateways: Many key influences (e.g., The Phantom Operators, Cassette Future) are MusicalGroups. However, their true impact on Sailor Shift is clarified only after unfolding their members. This highlights the importance of surfacing latent human contributors.\nIndividuals Behind the Sound:\n\nJuno Ray, Savannah Teal, Zara Quinn, and others appear as hidden but crucial figures influencing Sailor Shift indirectly through their band affiliations.\nThese artists are connected through MemberOf → MusicalGroup → InfluenceType paths, showing that influence isn’t always linear or direct.\n\nMulti-Relation Influence: Relationships such as InterpolatesFrom, InStyleOf, and LyricalReferenceTo show that Sailor Shift does not just imitate style—she blends lyrical and musical fragments from diverse sources.\nDense Centrality: Sailor Shift sits at the hub of a diverse, multi-layered network, receiving creative input from solo artists, collective groups, and intermediary compositions (albums/songs).\n\n\n\n🧠 Interpretation:\nThis graph confirms that Sailor Shift is not only influenced by prominent entities but is also indirectly shaped by dozens of individuals, whose contributions are embedded within groups. Her artistic identity emerges from a blend of:\n\nStylized group traditions\nPersonal lyrical echoes\nCollaborative musical lineages\n\nIt also suggests that to understand her evolution, one must look beyond direct citations and recognize the ecosystem of creators behind the visible front.\n\n\n\n\n📌 Step 5: Expand Influence Path – Including Songs/Albums (≤ 5 Hops)\n\n\nCode\n# Influence edge types\ninfluence_types &lt;- c(\"InStyleOf\", \"CoverOf\", \"InterpolatesFrom\", \"LyricalReferenceTo\", \"DirectlySamples\")\n\n# Expand backward paths from Sailor Shift\nmax_depth &lt;- 5\ninfluence_paths &lt;- tibble()\ncurrent_targets &lt;- sailor_id\n\nfor (i in 1:max_depth) {\n  next_edges &lt;- edges_tbl %&gt;% filter(`Edge Type` %in% influence_types, target %in% current_targets)\n  if (nrow(next_edges) == 0) break\n  next_edges &lt;- next_edges %&gt;% mutate(depth = paste0(i, \"-hop\"))\n  influence_paths &lt;- bind_rows(influence_paths, next_edges)\n  current_targets &lt;- unique(next_edges$source)\n}\n\n# Identify Musical Groups and expand their members\nmusical_group_ids &lt;- nodes_tbl %&gt;% filter(`Node Type` == \"MusicalGroup\") %&gt;% pull(id)\nmember_edges &lt;- edges_tbl %&gt;% filter(`Edge Type` == \"MemberOf\", target %in% musical_group_ids)\n\n# If any musical group is in influence path, bring in members\ngroup_ids_in_path &lt;- influence_paths %&gt;% filter(source %in% musical_group_ids) %&gt;% pull(source)\nextra_members &lt;- member_edges %&gt;% filter(target %in% group_ids_in_path)\n\n# Identify all nodes in reachable paths\ndirect_path_ids &lt;- unique(c(influence_paths$source, influence_paths$target))\n\n# Identify intermediaries (song/album) linking between artists and Sailor Shift\nintermediate_edges &lt;- edges_tbl %&gt;%\n  filter(source %in% direct_path_ids | target %in% direct_path_ids) %&gt;%\n  filter(`Edge Type` %in% c(\"PerformerOf\", \"AppearsOn\")) %&gt;%\n  mutate(hop = \"Song/Album Link\")\n\n# Combine all edges\nfull_edges &lt;- bind_rows(\n  influence_paths %&gt;% mutate(hop = depth),\n  intermediate_edges,\n  extra_members %&gt;% mutate(hop = \"GroupMember\")\n)\n\n# Related node ids\nrelated_ids &lt;- unique(c(full_edges$source, full_edges$target, sailor_id))\nvis_nodes &lt;- nodes_tbl %&gt;% filter(id %in% related_ids) %&gt;%\n  mutate(\n    label = name,\n    group = `Node Type`,\n    value = ifelse(name == \"Sailor Shift\", 50, 20),\n    font = list(size = ifelse(name == \"Sailor Shift\", 36, 22)),\n    title = paste0(\"&lt;b&gt;\", name, \"&lt;/b&gt;&lt;br&gt;Type: \", `Node Type`)\n  ) %&gt;%\n  select(id, label, group, value, font, title)\n\nvis_edges &lt;- full_edges %&gt;%\n  mutate(\n    arrows = \"to\",\n    label = `Edge Type`,\n    color = case_when(\n      `Edge Type` == \"DirectlySamples\" ~ \"#FF6B6B\",\n      `Edge Type` == \"InterpolatesFrom\" ~ \"#4D96FF\",\n      `Edge Type` == \"CoverOf\" ~ \"#FFD93D\",\n      `Edge Type` == \"InStyleOf\" ~ \"#6BCB77\",\n      `Edge Type` == \"LyricalReferenceTo\" ~ \"#C780FA\",\n      `Edge Type` == \"MemberOf\" ~ \"#BDBDBD\",\n      `Edge Type` == \"PerformerOf\" ~ \"#00BFC4\",\n      `Edge Type` == \"AppearsOn\" ~ \"#F8766D\",\n      TRUE ~ \"#999999\"\n    )\n  ) %&gt;%\n  select(from = source, to = target, arrows, label, color)\n\nvisNetwork(vis_nodes, vis_edges, width = \"100%\", height = \"800px\") %&gt;%\n  visEdges(smooth = TRUE) %&gt;%\n  visOptions(highlightNearest = TRUE, nodesIdSelection = TRUE) %&gt;%\n  visLayout(randomSeed = 2025) %&gt;%\n  visLegend(useGroups = TRUE, main = \"Node Type\") %&gt;%\n  visPhysics(stabilization = TRUE)\n\n\n\n\n\n\n\n🔍 Insight (Step 5 – Song/Album Influence)\nThe network reveals a rich multi-hop influence chain leading into Sailor Shift’s artistry. Instead of just direct artistic references, this graph uncovers how individuals or groups shaped her through intermediary songs and albums.\n\n\n🎯 Key Observations:\nSeveral musical groups contributed via performed songs, which were later interpolated or sampled by Sailor Shift.\nAlbums served as indirect influence bridges, housing songs that were referenced, covered, or remixed.\nCollaboration depth is highlighted—some artists influence Sailor Shift through layered paths (e.g., PerformerOf → Song → InterpolatesFrom → Sailor Shift).\nThis illustrates how artistic influence flows across works, not just individuals—showing Sailor Shift’s stylistic lineage as both deep and distributed."
  }
]