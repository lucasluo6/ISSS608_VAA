---
title: "MC1-In_Class_Ex01"
author: "Lucas Luo"
date: "May 17 2025"
date-modified: "last-modified"

format:
  html:
    code-tools: true          
    code-fold: true          
    toc: true
    theme: lux

execute: 
  eval: true
  echo: true
  message: false
  warning: false
  freeze: true
---
```{r}
pacman::p_load(tidyverse, jsonlite,
               SmartEDA, tidygraph,
               ggraph)
```
```{r}
kg <- fromJSON("data/MC1_graph.json")
```

### Inspect structure
```{r}
str(kg, max.level=1)
```

###Extract and inspect
```{r}
nodes_tbl <-as_tibble(kg$nodes)
edges_tbl <-as_tibble(kg$links)
```

##Initial EDA
```{r}
ggplot(data = edges_tbl,
       aes(y =`Edge Type`))+
  geom_bar()
```

## Creating Knowlede Graph

This is

### Step 1: Mapping form node id to row indes

```{r}
id_map <- tibble(id = nodes_tbl$id,
                 index=seq_len(
                   nrow(nodes_tbl)
                 ))
```

This ensures each id from your node list is mapped to the correct row number.

### Step2

```{r}
edges_tbl <- edges_tbl %>%
  left_join(id_map, by = c("source" = "id"))%>%
  rename(from = index) %>%
  left_join(id_map, by = c("target" = "id"))%>%
  rename(to = index)
```

###Step 3 
```{r}
edges_tbl <- edges_tbl %>%
  filter(!is.na(from), !is.na(to))
```
###Step4
```{r}
graph <- tbl_graph(nodes = nodes_tbl,
                   edges = edges_tbl,
                   directed = kg$directed)
```

## visualisting the knowledge graph
```{r}
set.seed(1234)
```

### visualising the whole graph
```{r}
#| eval: false
ggraph(graph, layout = "fr")+
  geom_edge_link(alpha = 0.3,
                 colour = "gray")+
  geom_node_point(aes(color = `Node Type`),
                  size = 4 )+
  geom_node_text(aes(label = name),
                 repel = TRUE,
                  size = 2.5 )+
  theme_void()
```
### Visualising the sub-graph

#### Step 1 Filter edges to only"Memberof"
```{r}
graph_memberof <- graph %>%
  activate(edges)%>%
  filter(`Edge Type` == "MemberOf")
```

#### Step 2 Extract only connected nodes
```{r}
used_node_indices <- graph_memberof %>%
  activate(edges) %>%
  as_tibble() %>%
  select(from, to) %>%
  unlist()%>%
  unique()
```


#### step 3 keep only those nodes
```{r}
graph_memberof <- graph_memberof %>%
  activate(nodes)%>%
  mutate(row_id = row_number())%>%
  filter(row_id %in% used_node_indices)%>%
  select(-row_id)
```

#### plot the sub-graph
```{r}
#| eval: false
ggraph(graph_memberof, layout = "fr")+
  geom_edge_link(alpha = 0.5,
                 colour = "gray")+
  geom_node_point(aes(color = `Node Type`),
                  size = 1 )+
  geom_node_text(aes(label = name),
                 repel = TRUE,
                  size = 2.5 )+
  theme_void()
```



