---
title: "Hands-on Ex01"
author: "Lucas Luo"
---

# **1  A Layered Grammar of Graphics: ggplot2 methods**

## **1.1 Learning Outcome**

In this chapter, you will learn the basic principles and essential components of ggplot2. At the same time, you will gain hands-on experience on using these components to plot statistical graphics based on the principle of Layered Grammar of Graphics. By then end of this chapter you will be able to apply the essential graphical elements provided by ggplot2 to create elegant and yet functional statistical graphics.

## **1.2 Getting started**

### **1.2.1 Installing and loading the required libraries**

```{r}
pacman::p_load(tidyverse)
```

### **1.2.2 Importing data**

```{r}
exam_data <- read_csv("data/Exam_data.csv")
```

### **1.3.1 R Graphics VS ggplot**

First, let us compare how R Graphics, the core graphical functions of Base R and ggplot plot a simple histogram.

::: panel-tabset
### R Graphics

```{r}
# Base R 直方图
hist(exam_data$MATHS)
```

### ggplot2 直方图

```{r}
library(ggplot2)

ggplot(data = exam_data, aes(x = MATHS)) +
  geom_histogram(
    bins = 10,
    boundary = 100,
    color = "black",
    fill = "grey"
  ) +
  ggtitle("Distribution of Maths scores")
```
:::

## **1.4 Essential Grammatical Elements in ggplot2: data**

```{r}
ggplot(data=exam_data)
```

## **1.5 Essential Grammatical Elements in ggplot2:**

```{r}
ggplot(data=exam_data, 
       aes(x= MATHS))
```

## **1.7 Essential Grammatical Elements in ggplot2: geom**

Geometric objects are the actual marks we put on a plot. Examples include:

-   *geom_point* for drawing individual points (e.g., a scatter plot)

-   *geom_line* for drawing lines (e.g., for a line charts)

-   *geom_smooth* for drawing smoothed lines (e.g., for simple trends or approximations)

-   *geom_bar* for drawing bars (e.g., for bar charts)

-   *geom_histogram* for drawing binned values (e.g. a histogram)

-   *geom_polygon* for drawing arbitrary shapes

-   *geom_map* for drawing polygons in the shape of a map! (You can access the data to use for these maps by using the map_data() function).

### **1.7.1 Geometric Objects: geom_bar**

```{r}
ggplot(data=exam_data, aes(x=RACE)) + geom_bar()
```

### **1.7.2 Geometric Objects: geom_dotplot**

```{r}
ggplot(data=exam_data, 
       aes(x = MATHS)) +
  geom_dotplot(dotsize = 0.5)
```

```{r}
ggplot(data=exam_data, 
       aes(x = MATHS)) +
  geom_dotplot(binwidth=2.5,         
               dotsize = 0.5) +      
  scale_y_continuous(NULL,           
                     breaks = NULL)  
```

### **1.7.3 Geometric Objects: `geom_histogram()`**

```{R}
ggplot(data=exam_data, 
       aes(x = MATHS)) +
  geom_histogram()       
```

1.7.4 Modifying a geometric object by changing geom()

```{r}
ggplot(data=exam_data, 
       aes(x= MATHS)) +
  geom_histogram(bins=20,            
                 color="black",      
                 fill="light blue")  
```

### **1.7.5 Modifying a geometric object by changing *aes()***
```{r}
ggplot(data=exam_data, 
       aes(x= MATHS, 
           fill = GENDER)) +
  geom_histogram(bins=20, 
                 color="grey30")
```
### **1.7.6 Geometric Objects: geom-density()**
```{r}
ggplot(data=exam_data, 
       aes(x = MATHS)) +
  geom_density()         

ggplot(data=exam_data, 
       aes(x = MATHS, 
           colour = GENDER)) +
  geom_density()
```
### **1.7.7 Geometric Objects: geom_boxplot**
```{r}
ggplot(data=exam_data, 
       aes(y = MATHS,       
           x= GENDER)) +    
  geom_boxplot()            


ggplot(data=exam_data, 
       aes(y = MATHS, 
           x= GENDER)) +
  geom_boxplot(notch=TRUE)
```
### **1.7.8 Geometric Objects: geom_violin**
```{r}
ggplot(data=exam_data, 
       aes(y = MATHS, 
           x= GENDER)) +
  geom_violin()
```
### **1.7.9 Geometric Objects: geom_point()**
```{r}
ggplot(data=exam_data, 
       aes(x= MATHS, 
           y=ENGLISH)) +
  geom_point()            
```
### **1.7.10 *geom* objects can be combined**
```{r}
ggplot(data=exam_data, 
       aes(y = MATHS, 
           x= GENDER)) +
  geom_boxplot() +                    
  geom_point(position="jitter", 
             size = 0.5)        
```
## **1.8 Essential Grammatical Elements in ggplot2: stat**

-   frequency of values of a variable (bar graph)

    -   a mean

    -   a confidence limit

-   There are two ways to use these functions:

    -   add a `stat_()` function and override the default geom, or

    -   add a `geom_()` function and override the default stat.

### **1.8.1 Working with `stat()`**
```{r}
ggplot(data=exam_data, 
       aes(y = MATHS, x= GENDER)) +
  geom_boxplot()
```
### **1.8.2 Working with stat - the *stat_summary()* method**
```{r}
ggplot(data=exam_data, 
       aes(y = MATHS, x= GENDER)) +
  geom_boxplot() +
  stat_summary(geom = "point",       
               fun = "mean",         
               colour ="red",        
               size=4)               
```
### **1.8.3 Working with stat - the `geom()` method**
```{r}
ggplot(data=exam_data, 
       aes(y = MATHS, x= GENDER)) +
  geom_boxplot() +
  geom_point(stat="summary",        
             fun="mean",           
             colour="red",          
             size=4)          
```

### **1.8.4 Adding a best fit curve on a scatterplot?**
```{R}
ggplot(data=exam_data, 
       aes(x= MATHS, y=ENGLISH)) +
  geom_point() +
  geom_smooth(size=0.5)

ggplot(data=exam_data, 
       aes(x= MATHS, 
           y=ENGLISH)) +
  geom_point() +
  geom_smooth(method=lm, 
              linewidth=0.5)
```
## **1.9 Essential Grammatical Elements in ggplot2: Facets**

### **1.9.1 Working with `facet_wrap()`**
```{r}
ggplot(data=exam_data, 
       aes(x= MATHS)) +
  geom_histogram(bins=20) +
    facet_wrap(~ CLASS)
```
### **1.9.2 `facet_grid()` function**
```{r}
ggplot(data=exam_data, 
       aes(x= MATHS)) +
  geom_histogram(bins=20) +
    facet_grid(~ CLASS)
```
## **1.10 Essential Grammatical Elements in ggplot2: Coordinates**

### **1.10.1 Working with Coordinate**
```{r}
ggplot(data=exam_data, 
       aes(x=RACE)) +
  geom_bar()

ggplot(data=exam_data, 
       aes(x=RACE)) +
  geom_bar() +
  coord_flip()
```
### **1.10.2 Changing the y- and x-axis range**
```{r}
ggplot(data=exam_data, 
       aes(x= MATHS, y=ENGLISH)) +
  geom_point() +
  geom_smooth(method=lm, size=0.5)
```

## **1.11 Essential Grammatical Elements in ggplot2: themes**

Themes control elements of the graph not related to the data. For example:

-   background colour

-   size of fonts

-   gridlines

-   colour of labels

### **1.11.1 Working with theme**
```{r}
ggplot(data=exam_data, 
       aes(x=RACE)) +
  geom_bar() +
  coord_flip() +
  theme_gray()
```